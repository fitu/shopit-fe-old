{"version":3,"sources":["store/actions/cartActions.js","components/common/MetaData.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/ConfirmOrder.js","components/common/Loader.js","components/admin/Sidebar.js","store/actions/productAction.js","store/actions/orderActions.js","store/actions/authActions.js","components/admin/Dashboard.js","components/common/Footer.js","components/user/ForgotPassword.js","components/common/Search.js","components/common/Header.js","components/product/Product.js","components/Home.js","components/order/ListOrders.js","components/user/Login.js","components/user/NewPassword.js","components/admin/NewProduct.js","components/order/OrderDetails.js","components/admin/OrderList.js","components/cart/OrderSuccess.js","components/cart/Payment.js","components/admin/ProcessOrder.js","components/review/ListReviews.js","components/product/ProductDetails.js","components/admin/ProductReviews.js","components/admin/ProductsList.js","components/user/Profile.js","components/route/ProtectedRoute.js","components/user/Register.js","components/cart/Shipping.js","components/user/UpdatePassword.js","components/admin/UpdateProduct.js","components/user/UpdateProfile.js","components/admin/UpdateUser.js","components/admin/UsersList.js","App.js","store/store.js","store/reducers/productReducer.js","store/reducers/authReducer.js","store/reducers/cartReducer.js","store/reducers/orderReducer.js","index.js"],"names":["ADD_TO_CART","REMOVE_ITEM_FROM_CART","SAVE_SHIPPING_INFO","addItemToCart","id","quantity","dispatch","getState","a","axios","get","data","type","payload","product","_id","name","price","images","public_id","url","stock","localStorage","setItem","JSON","stringify","cart","cartItems","MetaData","title","Helmet","Cart","history","useDispatch","useSelector","state","removeCartItemHandler","removeItemFromCart","length","className","map","item","src","alt","height","width","to","onClick","newQty","decreaseQty","value","readOnly","increaseQty","reduce","acc","Number","toFixed","push","CheckoutSteps","shippingStep","confirmOrderStep","paymentStep","disabled","ConfirmOrder","shippingInfo","user","auth","itemsPrice","shippingPrice","taxPrice","totalPrice","phoneNumber","address","city","postalCode","country","sessionStorage","Loader","Sidebar","href","data-toggle","aria-expanded","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","NEW_REVIEW_RESET","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","NEW_PRODUCT_RESET","ALL_REVIEWS_REQUEST","ALL_REVIEWS_SUCCESS","ALL_REVIEWS_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","DELETE_REVIEW_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","CLEAR_ERRORS","getProductDetails","response","message","getAdminProducts","products","getProductReviews","reviews","clearErrors","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","UPDATE_ORDER_RESET","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","DELETE_ORDER_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","config","headers","post","getOrderDetails","getAllOrders","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USER_REQUEST","ALL_USER_SUCCESS","ALL_USER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","loadUser","console","log","error","getAllUsers","users","Dashboard","allOrders","orders","totalAmount","loading","allUsers","outOfStock","forEach","useEffect","Footer","ForgotPassword","useState","email","setEmail","alert","useAlert","password","success","onSubmit","event","preventDefault","formData","FormData","set","forgotPassword","htmlFor","onChange","target","Search","keyword","setKeyword","trim","placeholder","aria-hidden","Header","render","style","textDecoration","aria-haspopup","avatar","aria-labelledby","role","Product","col","ratings","numOfReviews","Range","createSliderWithTooltip","Slider","Home","match","currentPage","setCurrentPage","setPrice","productsCount","resultsPerPage","params","link","getProducts","marks","1","1000","min","max","defaultValue","tipFormatter","tipProps","placement","visible","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListOrders","myOrders","columns","label","field","sort","rows","numOfItems","orderItems","amount","status","String","orderStatus","includes","color","actions","setOrders","bordered","striped","hover","Login","location","setPassword","isAuthenticated","redirect","search","split","login","NewPassword","confirmPassword","setConfirmPassword","tite","token","passwords","put","NewProduct","setName","description","setDescription","category","setCategory","setStock","seller","setSeller","setImage","imagesPreview","setImagesPreview","newProduct","encType","productData","image","append","files","Array","from","file","reader","FileReader","onload","readyState","old","result","readAsDataURL","multiple","OrderDetails","orderDetails","paymentInfo","shippingDetails","isPaid","OrderList","isDeleted","deleteOrderHandler","delete","deleteOrder","OrderSuccess","options","base","fontSize","invalid","Payment","stripe","useStripe","elements","useElements","orderInfo","parse","getItem","paymentData","Math","round","submitHandler","document","querySelector","clientSecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","paymentIntent","ProcessOrder","setStatus","isUpdated","updateOrderHanlder","orderData","updateOrder","ListReviews","review","rating","comment","ProductDetails","setQuantity","setRating","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","valueAsNumber","current","disable","data-target","stars","querySelectorAll","star","index","starValue","addEventListener","classList","add","remove","tabIndex","data-dismiss","aria-label","reviewData","ProductReviews","productId","setProductId","productReviews","deleteError","deleteReviewHandler","deleteReview","setReviews","ProductsList","deleteProductHandler","deleteProduct","setProducts","Profile","createdAt","substring","ProtectedRoute","isAdmin","Component","component","rest","props","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","changeHandler","userData","accept","Shipping","setAddress","setCity","setPostalCode","setPhoneNumber","setCountry","required","Object","values","countries","c","UpdatePassword","oldPassword","setOldPassword","UpdateProduct","oldImages","setOldImages","updateError","producData","oldImage","UpdateProfile","UpdateUser","setRole","userDetails","UsersList","deleteUserHandler","deleteUser","setUsers","App","stripeAPIKey","setStripeAPIKey","stripeApiKey","getStripeAPIKey","path","exact","loadStripe","reducer","combineReducers","action","productCount","isItemExists","find","i","filter","initialState","middelwares","thunk","store","createStore","composeWithDevTools","applyMiddleware","timeout","position","positions","BOTTOM_CENTER","transtion","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"qPAEaA,EAAc,cACdC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAgB,SAACC,EAAIC,GAAL,8CAAkB,WAAOC,EAAUC,GAAjB,iBAAAC,EAAA,sEACpBC,IAAMC,IAAN,0BAA6BN,IADT,gBACnCO,EADmC,EACnCA,KAERL,EAAS,CACLM,KAAMZ,EACNa,QAAS,CACLC,QAASH,EAAKG,QAAQC,IACtBC,KAAML,EAAKG,QAAQE,KACnBC,MAAON,EAAKG,QAAQG,MACpBC,OAAQ,CACJ,CACIC,UAAWR,EAAKG,QAAQI,OAAO,GAAGC,UAClCC,IAAKT,EAAKG,QAAQI,OAAO,GAAGE,MAGpCC,MAAOV,EAAKG,QAAQO,MACpBhB,cAIRiB,aAAaC,QAAQ,YAAaC,KAAKC,UAAUlB,IAAWmB,KAAKC,YApBtB,2CAAlB,yD,eCKdC,EARE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACI,cAACC,EAAA,EAAD,UACI,0CAAWD,EAAX,kBC0IGE,EAzIF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACN1B,EAAW2B,cACTN,EAAcO,aAAY,SAACC,GAAD,OAAWA,EAAMT,QAA3CC,UAoBFS,EAAwB,SAAChC,GAC3BE,EFD0B,SAACF,GAAD,8CAAQ,WAAOE,EAAUC,GAAjB,SAAAC,EAAA,sDACtCF,EAAS,CACLM,KAAMX,EACNY,QAAST,IAGbkB,aAAaC,QAAQ,YAAaC,KAAKC,UAAUlB,IAAWmB,KAAKC,YAN3B,2CAAR,wDECjBU,CAAmBjC,KAOhC,OACI,mCAC0B,IAArBuB,EAAUW,OACP,oBAAIC,UAAU,OAAd,gCAEA,qCACI,cAAC,EAAD,CAAUV,MAAM,cAChB,qBAAIU,UAAU,OAAd,wBACe,8BAAIZ,EAAUW,OAAd,eAGf,sBAAKC,UAAU,qCAAf,UACI,qBAAKA,UAAU,kBAAf,SACKZ,EAAUa,KAAI,SAACC,GAAD,OACX,gCACI,uBACA,qBAAKF,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKG,IAAKD,EAAKvB,OAAO,GAAGE,IAAKuB,IAAI,SAASC,OAAO,KAAKC,MAAM,UAGjE,qBAAKN,UAAU,iBAAf,SACI,cAAC,IAAD,CAAMO,GAAE,mBAAcL,EAAK3B,SAA3B,SAAuC2B,EAAKzB,SAGhD,qBAAKuB,UAAU,8BAAf,SACI,oBAAGnC,GAAG,kBAAN,cAA0BqC,EAAKxB,WAGnC,qBAAKsB,UAAU,8BAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,sBACIA,UAAU,uBACVQ,QAAS,kBA5DzC,SAAC3C,EAAIC,GACrB,IAAM2C,EAAS3C,EAAW,EACtB2C,GAAU,GAId1C,EAASH,EAAcC,EAAI4C,IAsDoCC,CAAYR,EAAK3B,QAAS2B,EAAKpC,WAFlD,eAMA,uBACIO,KAAK,SACL2B,UAAU,8BACVW,MAAOT,EAAKpC,SACZ8C,UAAQ,IAGZ,sBACIZ,UAAU,uBACVQ,QAAS,kBAhEzC,SAAC3C,EAAIC,EAAUgB,GAC/B,IAAM2B,EAAS3C,EAAW,EACtB2C,EAAS3B,GAIbf,EAASH,EAAcC,EAAI4C,IA2DyBI,CAAYX,EAAK3B,QAAS2B,EAAKpC,SAAUoC,EAAKpB,QAHtD,oBAWR,qBAAKkB,UAAU,8BAAf,SACI,mBACInC,GAAG,mBACHmC,UAAU,6BACVQ,QAAS,kBAAMX,EAAsBK,EAAK3B,mBAK1D,yBAnDM2B,EAAK3B,cAwDvB,qBAAKyB,UAAU,uBAAf,SACI,sBAAKnC,GAAG,gBAAR,UACI,+CACA,uBACA,0CACc,IACV,uBAAMmC,UAAU,uBAAhB,UACKZ,EAAU0B,QAAO,SAACC,EAAKb,GAAN,OAAea,EAAMC,OAAOd,EAAKpC,YAAW,GADlE,iBAIJ,4CACgB,IACZ,uBAAMkC,UAAU,uBAAhB,cAEKZ,EACI0B,QAAO,SAACC,EAAKb,GAAN,OAAea,EAAMb,EAAKpC,SAAWoC,EAAKxB,QAAO,GACxDuC,QAAQ,SAIrB,uBACA,wBACIpD,GAAG,eACHmC,UAAU,4BACVQ,QAlGR,WACpBf,EAAQyB,KAAK,6BA8FW,qCC7EjBC,EAhDO,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,YACrD,OACI,sBAAKtB,UAAU,uDAAf,UACKoB,EACG,eAAC,IAAD,CAAMb,GAAG,YAAYP,UAAU,cAA/B,UACI,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,mBAAf,sBACA,qBAAKA,UAAU,uBAGnB,eAAC,IAAD,CAAMO,GAAG,IAAIgB,UAAQ,EAArB,UACI,qBAAKvB,UAAU,yBACf,qBAAKA,UAAU,kBAAf,sBACA,qBAAKA,UAAU,2BAItBqB,EACG,eAAC,IAAD,CAAMd,GAAG,WAAWP,UAAU,cAA9B,UACI,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,mBAAf,2BACA,qBAAKA,UAAU,uBAGnB,eAAC,IAAD,CAAMO,GAAG,IAAIgB,UAAQ,EAArB,UACI,qBAAKvB,UAAU,yBACf,qBAAKA,UAAU,kBAAf,2BACA,qBAAKA,UAAU,2BAItBsB,EACG,eAAC,IAAD,CAAMf,GAAG,WAAWP,UAAU,cAA9B,UACI,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,mBAAf,qBACA,qBAAKA,UAAU,uBAGnB,eAAC,IAAD,CAAMO,GAAG,IAAIgB,UAAQ,EAArB,UACI,qBAAKvB,UAAU,yBACf,qBAAKA,UAAU,kBAAf,qBACA,qBAAKA,UAAU,+BCyDpBwB,EA/FM,SAAC,GAAiB,IAAf/B,EAAc,EAAdA,QAAc,EACEE,aAAY,SAACC,GAAD,OAAWA,EAAMT,QAAzDC,EAD0B,EAC1BA,UAAWqC,EADe,EACfA,aACXC,EAAS/B,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAAtCD,KAEFE,EAAaxC,EAAU0B,QAAO,SAACC,EAAKb,GAAN,OAAea,EAAMb,EAAKxB,MAAQwB,EAAKpC,WAAU,GAC/E+D,EAAgBD,EAAa,IAAM,EAAI,GACvCE,EAAWd,QAAQ,IAAOY,GAAYX,QAAQ,IAC9Cc,EAAaH,EAAaC,EAAgBC,EAchD,OACI,qCACI,cAAC,EAAD,CAAUxC,MAAM,kBAChB,cAAC,EAAD,CAAe8B,cAAY,EAACC,kBAAgB,IAE5C,sBAAKrB,UAAU,qCAAf,UACI,sBAAKA,UAAU,qCAAf,UACI,oBAAIA,UAAU,OAAd,2BACA,8BACI,uCADJ,OAEK0B,QAFL,IAEKA,OAFL,EAEKA,EAAMjD,QAEX,8BACI,wCADJ,IACoBgD,EAAaO,eAEjC,oBAAGhC,UAAU,OAAb,UACI,0CAAiB,IADrB,UAEQyB,EAAaQ,QAFrB,aAEiCR,EAAaS,KAF9C,aAEuDT,EAAaU,WAFpE,aAEmFV,EAAaW,YAEhG,uBACA,oBAAIpC,UAAU,OAAd,8BAECZ,EAAUa,KAAI,SAACC,GAAD,OACX,gCACI,uBACA,qBAAKF,UAAU,iBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKG,IAAKD,EAAKvB,OAAO,GAAGE,IAAKuB,IAAI,SAASC,OAAO,KAAKC,MAAM,SAEjE,qBAAKN,UAAU,iBAAf,SACI,cAAC,IAAD,CAAMO,GAAE,mBAAcL,EAAK3B,SAA3B,SAAuC2B,EAAKzB,SAEhD,qBAAKuB,UAAU,8BAAf,SACI,8BACKE,EAAKpC,SADV,OACwBoC,EAAKxB,MAD7B,KACsC,IAClC,mCAAMwB,EAAKpC,SAAWoC,EAAKxB,OAAOuC,QAAQ,gBAK1D,yBAlBMf,EAAK3B,eAuBvB,qBAAKyB,UAAU,uBAAf,SACI,sBAAKnC,GAAG,gBAAR,UACI,+CACA,uBACA,2CACc,uBAAMmC,UAAU,uBAAhB,cAAyC4B,QAEvD,2CACc,uBAAM5B,UAAU,uBAAhB,cAAyC6B,QAEvD,sCACS,uBAAM7B,UAAU,uBAAhB,cAAyC8B,QAElD,uBACA,wCACW,uBAAM9B,UAAU,uBAAhB,cAAyC+B,QAEpD,uBACA,wBAAQlE,GAAG,eAAemC,UAAU,4BAA4BQ,QA5E3D,WACrB,IAAMpC,EAAO,CACTwD,WAAYA,EAAWX,QAAQ,GAC/BY,gBACAC,WACAC,cAGJM,eAAerD,QAAQ,YAAaC,KAAKC,UAAUd,IACnDqB,EAAQyB,KAAK,aAmEG,4CCrFToB,EAJA,WACX,OAAO,qBAAKtC,UAAU,YCqDXuC,EArDC,WACZ,OACI,qBAAKvC,UAAU,kBAAf,SACI,qBAAKnC,GAAG,UAAR,SACI,qBAAImC,UAAU,2BAAd,UACI,6BACI,eAAC,IAAD,CAAMO,GAAG,aAAT,UACI,mBAAGP,UAAU,yBADjB,kBAIJ,+BACI,oBACIwC,KAAK,kBACLC,cAAY,WACZC,gBAAc,QACd1C,UAAU,kBAJd,UAMI,mBAAGA,UAAU,uBANjB,eAQA,qBAAIA,UAAU,yBAAyBnC,GAAG,iBAA1C,UACI,6BACI,eAAC,IAAD,CAAM0C,GAAG,kBAAT,UACI,mBAAGP,UAAU,yBADjB,YAIJ,6BACI,eAAC,IAAD,CAAMO,GAAG,iBAAT,UACI,mBAAGP,UAAU,eADjB,qBAMZ,6BACI,eAAC,IAAD,CAAMO,GAAG,gBAAT,UACI,mBAAGP,UAAU,0BADjB,eAIJ,6BACI,eAAC,IAAD,CAAMO,GAAG,eAAT,UACI,mBAAGP,UAAU,gBADjB,cAIJ,6BACI,eAAC,IAAD,CAAMO,GAAG,iBAAT,UACI,mBAAGP,UAAU,eADjB,wBC5CX2C,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAmB,mBAEnBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAoB,oBAEpBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAwB,wBACxBC,EAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAe,eAqBfC,GAAoB,SAAC/G,GAAD,8CAAQ,WAAOE,GAAP,iBAAAE,EAAA,sEAEjCF,EAAS,CACLM,KAAM4E,IAHuB,SAKV/E,IAAMC,IAAN,0BAA6BN,IALnB,gBAKzBO,EALyB,EAKzBA,KACRL,EAAS,CACLM,KAAM6E,EACN5E,QAASF,EAAKG,UARe,gDAWjCR,EAAS,CACLM,KAAM8E,EACN7E,QAAS,KAAMuG,SAASzG,KAAK0G,UAbA,yDAAR,uDA6CpBC,GAAmB,yDAAM,WAAOhH,GAAP,iBAAAE,EAAA,sEAE9BF,EAAS,CACLM,KAAMyE,IAHoB,SAKP5E,IAAMC,IAAI,0BALH,gBAKtBC,EALsB,EAKtBA,KACRL,EAAS,CACLM,KAAM0E,EACNzE,QAASF,EAAK4G,WARY,gDAW9BjH,EAAS,CACLM,KAAM2E,EACN1E,QAAS,KAAMuG,SAASzG,KAAK0G,UAbH,yDAAN,uDAkFnBG,GAAoB,SAACpH,GAAD,8CAAQ,WAAOE,GAAP,iBAAAE,EAAA,sEAEjCF,EAAS,CACLM,KAAMuF,IAHuB,SAKV1F,IAAMC,IAAN,6BAAgCN,IALtB,gBAKzBO,EALyB,EAKzBA,KACRL,EAAS,CACLM,KAAMwF,EACNvF,QAASF,EAAK8G,UARe,gDAWjCnH,EAAS,CACLM,KAAMyF,EACNxF,QAAS,KAAMuG,SAASzG,KAAK0G,UAbA,yDAAR,uDA4DpBK,GAAc,yDAAM,WAAOpH,GAAP,SAAAE,EAAA,sDAC7BF,EAAS,CACLM,KAAMsG,KAFmB,2CAAN,uDCzPdS,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBAEjBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAqB,qBAErBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErB5B,GAAe,eAEf6B,GAAc,SAACC,GAAD,8CAAW,WAAO1I,EAAUC,GAAjB,mBAAAC,EAAA,sEAE9BF,EAAS,CAAEM,KAAM+G,KAEXsB,EAAS,CACXC,QAAS,CACL,eAAgB,qBANM,SAUPzI,IAAM0I,KAAK,oBAAqBH,EAAOC,GAVhC,gBAUtBtI,EAVsB,EAUtBA,KAERL,EAAS,CACLM,KAAMgH,GACN/G,QAASF,IAdiB,kDAiB9BL,EAAS,CAAEM,KAAMiH,GAAmBhH,QAAS,KAAMuG,SAASzG,KAAK0G,UAjBnC,0DAAX,yDA+Bd+B,GAAkB,SAAChJ,GAAD,8CAAQ,WAAOE,GAAP,iBAAAE,EAAA,sEAE/BF,EAAS,CAAEM,KAAMgI,KAFc,SAGRnI,IAAMC,IAAN,wBAA2BN,IAHnB,gBAGvBO,EAHuB,EAGvBA,KACRL,EAAS,CAAEM,KAAMiI,GAAuBhI,QAASF,EAAKqI,QAJvB,gDAM/B1I,EAAS,CAAEM,KAAMkI,GAAoBjI,QAAS,KAAMuG,SAASzG,KAAK0G,UANnC,yDAAR,uDAUlBgC,GAAe,yDAAM,WAAO/I,GAAP,iBAAAE,EAAA,sEAE1BF,EAAS,CAAEM,KAAMqH,KAFS,SAGHxH,IAAMC,IAAN,wBAHG,gBAGlBC,EAHkB,EAGlBA,KACRL,EAAS,CAAEM,KAAMsH,GAAoBrH,QAASF,IAJpB,gDAM1BL,EAAS,CAAEM,KAAMuH,GAAiBtH,QAAS,KAAMuG,SAASzG,KAAK0G,UANrC,yDAAN,uDA+DfK,GAAc,yDAAM,WAAOpH,GAAP,SAAAE,EAAA,sDAC7BF,EAAS,CACLM,KAAMsG,KAFmB,2CAAN,uDCpIdoC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAa,aAEbC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBAEjBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAwB,wBACxBC,GAAuB,uBAEvBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAoB,oBACpBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAoB,oBACpBC,GAAmB,mBAEnBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBAEvBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAgB,gBAEhBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAiB,iBACjBC,GAAc,cAEd1E,GAAe,eAkCf2E,GAAW,yDAAM,WAAOvL,GAAP,iBAAAE,EAAA,sEAEtBF,EAAS,CAAEM,KAAMgJ,KAFK,SAGCnJ,IAAMC,IAAI,cAHX,gBAGdC,EAHc,EAGdA,KACRL,EAAS,CAAEM,KAAMiJ,GAAmBhJ,QAASF,EAAKsD,OAJ5B,gDAMtB6H,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAMkJ,GAAgBkC,MAAO,KAAM5E,SAASzG,KAAK0G,UAPtC,yDAAN,uDAqFX4E,GAAc,yDAAM,WAAO3L,GAAP,iBAAAE,EAAA,sEAEzBF,EAAS,CAAEM,KAAMyK,KAFQ,SAGF5K,IAAMC,IAAI,uBAHR,gBAGjBC,EAHiB,EAGjBA,KACRL,EAAS,CAAEM,KAAM0K,GAAkBzK,QAASF,EAAKuL,QAJxB,gDAMzBJ,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAM2K,GAAeS,MAAO,KAAM5E,SAASzG,KAAK0G,UAPlC,yDAAN,uDAiDdK,GAAc,yDAAM,WAAOpH,GAAP,SAAAE,EAAA,sDAC7BF,EAAS,CACLM,KAAMsG,KAFmB,2CAAN,uDC9FZiF,GApHG,WAAO,IAAD,MACd7L,EAAW2B,cACTsF,EAAarF,aAAY,SAACC,GAAD,OAAWA,EAAMoF,YAA1CA,SAFY,EAGqBrF,aAAY,SAACC,GAAD,OAAWA,EAAMiK,aAA9DC,EAHY,EAGZA,OAAQC,EAHI,EAGJA,YAAaC,EAHT,EAGSA,QACrBL,EAAUhK,aAAY,SAACC,GAAD,OAAWA,EAAMqK,YAAvCN,MAEJO,EAAa,EAajB,OAZAlF,EAASmF,SAAQ,SAAC5L,GACQ,IAAlBA,EAAQO,QACRoL,GAAc,MAItBE,qBAAU,WACNrM,EAASgH,MACThH,EAAS+I,MACT/I,EAAS2L,QACV,CAAC3L,IAGA,mCACI,sBAAKiC,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAGJ,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,OAAd,uBACCgK,EACG,cAAC,EAAD,IAEA,qCACI,cAAC,EAAD,CAAU1K,MAAM,cAChB,qBAAKU,UAAU,WAAf,SACI,qBAAKA,UAAU,2BAAf,SACI,qBAAKA,UAAU,4CAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,yBAEI,uBAFJ,IAEW,yCAAK+J,QAAL,IAAKA,OAAL,EAAKA,EAAa9I,QAAQ,iBAMrD,sBAAKjB,UAAU,WAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,4CAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,qBAEI,uBAFJ,IAEW,6CAAIgF,QAAJ,IAAIA,OAAJ,EAAIA,EAAUjF,cAAd,QAAwB,SAGvC,eAAC,IAAD,CACIC,UAAU,4CACVO,GAAG,kBAFP,UAII,sBAAMP,UAAU,aAAhB,0BACA,sBAAMA,UAAU,cAAhB,SACI,mBAAGA,UAAU,gCAK7B,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,2CAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,mBAEI,uBAFJ,IAEW,6CAAI8J,QAAJ,IAAIA,OAAJ,EAAIA,EAAQ/J,cAAZ,QAAsB,SAGrC,eAAC,IAAD,CAAMC,UAAU,4CAA4CO,GAAG,gBAA/D,UACI,sBAAMP,UAAU,aAAhB,0BACA,sBAAMA,UAAU,cAAhB,SACI,mBAAGA,UAAU,gCAK7B,qBAAKA,UAAU,yBAAf,SACI,sBAAKA,UAAU,yCAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,kBAEI,uBAFJ,IAEW,6CAAI2J,QAAJ,IAAIA,OAAJ,EAAIA,EAAO5J,cAAX,QAAqB,SAGpC,eAAC,IAAD,CAAMC,UAAU,4CAA4CO,GAAG,eAA/D,UACI,sBAAMP,UAAU,aAAhB,0BACA,sBAAMA,UAAU,cAAhB,SACI,mBAAGA,UAAU,gCAK7B,qBAAKA,UAAU,yBAAf,SACI,qBAAKA,UAAU,4CAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,yBAEI,uBAFJ,IAEW,4BAAIkK,4B,SCrG5CG,GAVA,WACX,OACI,mCACI,wBAAQrK,UAAU,OAAlB,SACI,mBAAGA,UAAU,mBAAb,iEC8DDsK,GA7DQ,WAAO,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAGnBC,EAAQC,cACR5M,EAAW2B,cAJQ,EAMWC,aAAY,SAACC,GAAD,OAAWA,EAAMgL,YAAzDnB,EANiB,EAMjBA,MAAO3E,EANU,EAMVA,QAASkF,EANC,EAMDA,QAExBI,qBAAU,WACFX,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAGTL,GACA4F,EAAMG,QAAQ/F,KAEnB,CAAC/G,EAAU0L,EAAOiB,EAAO5F,IAW5B,OACI,qCACI,cAAC,EAAD,CAAUxF,MAAM,oBAChB,qBAAKU,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY8K,SAdtB,SAACC,GACnBA,EAAMC,iBAEN,IAAMC,EAAW,IAAIC,SACrBD,EAASE,IAAI,QAASX,GAEtBzM,EH4GsB,SAACyM,GAAD,8CAAW,WAAOzM,GAAP,mBAAAE,EAAA,sEAEjCF,EAAS,CAAEM,KAAMmK,KACX9B,EAAS,CACXC,QAAS,CACL,eAAgB,qBALS,SAQVzI,IAAM0I,KAAK,0BAA2B4D,EAAO9D,GARnC,gBAQzBtI,EARyB,EAQzBA,KACRL,EAAS,CAAEM,KAAMoK,GAAyBnK,QAASF,EAAK0G,UATvB,kDAWjCyE,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAMqK,GAAsBe,MAAO,KAAM5E,SAASzG,KAAK0G,UAZjC,0DAAX,sDG5GbsG,CAAeH,KAQZ,UACI,oBAAIjL,UAAU,OAAd,6BACA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,yBACA,uBACIhN,KAAK,QACLR,GAAG,cACHmC,UAAU,eACVW,MAAO6J,EACPc,SAAU,SAACP,GAAD,OAAWN,EAASM,EAAMQ,OAAO5K,aAInD,wBACIY,SAAUyI,EACVnM,GAAG,yBACHQ,KAAK,SACL2B,UAAU,qBAJd,mCClBTwL,GAjCA,SAAC,GAAiB,IAAf/L,EAAc,EAAdA,QAAc,EACE8K,mBAAS,IADX,mBACrBkB,EADqB,KACZC,EADY,KAa5B,OACI,sBAAMZ,SAXW,SAACC,GAClBA,EAAMC,iBAEFS,EAAQE,OACRlM,EAAQyB,KAAR,kBAAwBuK,IAExBhM,EAAQyB,KAAK,MAKjB,SACI,sBAAKlB,UAAU,cAAf,UACI,uBACI3B,KAAK,OACLR,GAAG,eACHmC,UAAU,eACV4L,YAAY,yBACZN,SAAU,SAACP,GAAD,OAAWW,EAAWX,EAAMQ,OAAO5K,UAEjD,qBAAKX,UAAU,qBAAf,SACI,wBAAQnC,GAAG,aAAamC,UAAU,MAAlC,SACI,mBAAGA,UAAU,eAAe6L,cAAY,mBC8DjDC,GAjFA,WAAO,IAAD,EACXpB,EAAQC,cACR5M,EAAW2B,cAFA,EAGSC,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAA/CD,EAHS,EAGTA,KAAMsI,EAHG,EAGHA,QACN5K,EAAcO,aAAY,SAACC,GAAD,OAAWA,EAAMT,QAA3CC,UAOR,OACI,mCACI,sBAAKY,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,eAAf,SACI,cAAC,IAAD,CAAMO,GAAG,IAAT,SACI,qBAAKJ,IAAI,oBAAoBC,IAAI,eAK7C,qBAAKJ,UAAU,+BAAf,SACI,cAAC,IAAD,CAAO+L,OAAQ,gBAAGtM,EAAH,EAAGA,QAAH,OAAiB,cAAC,GAAD,CAAQA,QAASA,SAGrD,sBAAKO,UAAU,2CAAf,UACI,eAAC,IAAD,CAAMO,GAAG,QAAQyL,MAAO,CAAEC,eAAgB,QAA1C,UACI,sBAAMpO,GAAG,OAAOmC,UAAU,OAA1B,kBAGA,sBAAMA,UAAU,OAAOnC,GAAG,aAA1B,SACKuB,EAAUW,YAGlB2B,EACG,sBAAK1B,UAAU,yBAAf,UACI,eAAC,IAAD,CACIO,GAAG,IACHP,UAAU,sCACV3B,KAAK,SACLR,GAAG,qBACH4E,cAAY,WACZyJ,gBAAc,OACdxJ,gBAAc,QAPlB,UASI,wBAAQ1C,UAAU,oBAAlB,SACI,qBAAKG,IAAG,UAAEuB,EAAKyK,cAAP,aAAE,EAAatN,IAAKuB,IAAI,SAASJ,UAAU,qBAEvD,sCAAO0B,QAAP,IAAOA,OAAP,EAAOA,EAAMjD,UAEjB,sBAAKuB,UAAU,gBAAgBoM,kBAAgB,qBAA/C,UACoB,WAAX,OAAJ1K,QAAI,IAAJA,OAAA,EAAAA,EAAM2K,OACH,cAAC,IAAD,CAAM9L,GAAG,aAAaP,UAAU,gBAAhC,uBAIJ,cAAC,IAAD,CAAMO,GAAG,aAAaP,UAAU,gBAAhC,oBAGA,cAAC,IAAD,CAAMO,GAAG,MAAMP,UAAU,gBAAzB,qBAGA,cAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,4BAA4BQ,QAzDzD,WAClBzC,ELmFkB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,+EAElBC,IAAMC,IAAI,kBAFQ,OAGxBJ,EAAS,CAAEM,KAAM+K,KAHO,gDAKxBG,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAMgL,GAAaI,MAAO,KAAM5E,SAASzG,KAAK0G,UANjC,yDAAN,uDKlFlB4F,EAAMG,QAAQ,wBAuDU,2BAMPb,GACG,cAAC,IAAD,CAAMzJ,GAAG,SAASP,UAAU,WAAWnC,GAAG,YAA1C,4B,6BClDbyO,GAzBC,SAAC,GAAsB,IAApB/N,EAAmB,EAAnBA,QAASgO,EAAU,EAAVA,IACxB,OACI,qBAAKvM,UAAS,oCAA+BuM,EAA/B,SAAd,SACI,sBAAKvM,UAAU,mBAAf,UACI,qBAAKA,UAAU,uBAAuBI,IAAI,iBAAiBD,IAAK5B,EAAQI,OAAO,GAAGE,MAClF,sBAAKmB,UAAU,+BAAf,UACI,oBAAIA,UAAU,aAAd,SACI,cAAC,IAAD,CAAMO,GAAE,mBAAchC,EAAQC,KAA9B,SAAsCD,EAAQE,SAElD,sBAAKuB,UAAU,kBAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,eAAegM,MAAO,CAAE1L,MAAM,GAAD,OAAM/B,EAAQiO,QAAU,EAAK,IAA7B,UAEhD,uBAAM3O,GAAG,gBAAT,cAA2BU,EAAQkO,aAAnC,UAEJ,mBAAGzM,UAAU,YAAb,SAA0BzB,EAAQG,QAClC,cAAC,IAAD,CAAM6B,GAAE,mBAAchC,EAAQC,KAAOX,GAAG,WAAWmC,UAAU,gBAA7D,mC,SCLd0M,IAAQC,EADsBC,KAA5BD,yBAC8BC,KAAOF,OAiG9BG,GA/FF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACcvC,mBAAS,GADvB,mBACjBwC,EADiB,KACJC,EADI,OAEEzC,mBAAS,CAAC,EAAG,MAFf,mBAEjB7L,EAFiB,KAEVuO,EAFU,KAIlBvC,EAAQC,cACR5M,EAAW2B,cALO,EAO4CC,aAAY,SAACC,GAAD,OAAWA,EAAMoF,YAAzFgF,EAPgB,EAOhBA,QAAShF,EAPO,EAOPA,SAAUkI,EAPH,EAOGA,cAAeC,EAPlB,EAOkBA,eAAgB1D,EAPlC,EAOkCA,MACpDgC,EAAUqB,EAAMM,OAAO3B,QAE7BrB,qBAAU,WACN,GAAIX,EAGA,OAFAiB,EAAMjB,MAAMA,QACZ1L,EAASoH,MAIbpH,ETYmB,eAAC0N,EAAD,uDAAW,GAAI/M,EAAf,uCAAsBqO,EAAtB,uDAAoC,EAApC,8CAA0C,WAAOhP,GAAP,mBAAAE,EAAA,sEAE7DF,EAAS,CACLM,KAAMsE,IAEJ0K,EALuD,mCAKpB5B,EALoB,iBAKJsB,EALI,uBAKsBrO,EAAM,GAL5B,uBAK6CA,EAAM,IALnD,SAMtCR,IAAMC,IAAIkP,GAN4B,gBAMrDjP,EANqD,EAMrDA,KACRL,EAAS,CACLM,KAAMuE,EACNtE,QAASF,IATgD,kDAY7DL,EAAS,CACLM,KAAMwE,EACNvE,QAAS,KAAMuG,SAASzG,KAAK0G,UAd4B,0DAA1C,sDSZVwI,CAAY7B,EAAS/M,EAAOqO,MACtC,CAAChP,EAAU2M,EAAOjB,EAAOgC,EAAS/M,EAAOqO,IAM5C,OACI,mCACK/C,EACG,cAAC,EAAD,IAEA,qCACI,cAAC,EAAD,CAAU1K,MAAO,6BACjB,oBAAIzB,GAAG,mBAAP,6BAEA,yBAASA,GAAG,WAAWmC,UAAU,iBAAjC,SACI,qBAAKA,UAAU,MAAf,SACKyL,EACG,qCACI,qBAAKzL,UAAU,2BAAf,SACI,qBAAKA,UAAU,OAAf,SACI,cAAC0M,GAAD,CACIa,MAAO,CACHC,EAAG,KACHC,IAAM,SAEVC,IAAK,EACLC,IAAK,IACLC,aAAc,CAAC,EAAG,KAClBC,aAAc,SAAClN,GAAD,iBAAeA,IAC7BmN,SAAU,CACNC,UAAW,MACXC,SAAS,GAEbrN,MAAOjC,EACP4M,SAAU,SAAC5M,GAAD,OAAWuO,EAASvO,UAI1C,qBAAKsB,UAAU,iBAAf,SACI,qBAAKA,UAAU,MAAf,SACKgF,GACGA,EAAS/E,KAAI,SAAC1B,GAAD,OACT,cAAC,GAAD,CAA2BA,QAASA,EAASgO,IAAK,GAApChO,EAAQC,eAM1CwG,GACAA,EAAS/E,KAAI,SAAC1B,GAAD,OAAa,cAAC,GAAD,CAA2BA,QAASA,EAASgO,IAAK,GAApChO,EAAQC,YAK3D2O,GAAkBD,GACf,qBAAKlN,UAAU,qCAAf,SACI,cAAC,KAAD,CACIiO,WAAYlB,EACZmB,kBAAmBf,EACnBgB,gBAAiBjB,EACjB5B,SA3DH,SAAC8C,GACtBpB,EAAeoB,IA2DSC,aAAc,OACdC,aAAc,OACdC,cAAe,QACfC,aAAc,OACdC,UAAU,YACVC,UAAU,sB,SCjB3BC,GA1EI,WACf,IAAMjE,EAAQC,cACR5M,EAAW2B,cAFI,EAIcC,aAAY,SAACC,GAAD,OAAWA,EAAMgP,YAAxD5E,EAJa,EAIbA,QAASP,EAJI,EAIJA,MAAOK,EAJH,EAIGA,OAExBM,qBAAU,WACNrM,ETkCgB,uCAAM,WAAOA,GAAP,iBAAAE,EAAA,sEAEtBF,EAAS,CAAEM,KAAMkH,KAFK,SAGCrH,IAAMC,IAAI,qBAHX,gBAGdC,EAHc,EAGdA,KACRL,EAAS,CAAEM,KAAMmH,GAAmBlH,QAASF,EAAK0L,SAJ5B,gDAMtB/L,EAAS,CAAEM,KAAMoH,GAAgBnH,QAAS,KAAMuG,SAASzG,KAAK0G,UANxC,yDAAN,uDSjCZ2E,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,SAEd,CAACpH,EAAU2M,EAAOjB,IAoDrB,OACI,qCACI,cAAC,EAAD,CAAUnK,MAAM,cAChB,oBAAIU,UAAU,OAAd,uBAECgK,EAAU,cAAC,EAAD,IAAa,cAAC,KAAD,CAAc5L,KAvD5B,WACd,IAAMA,EAAO,CACTyQ,QAAS,CACL,CACIC,MAAO,WACPC,MAAO,KACPC,KAAM,OAEV,CACIF,MAAO,eACPC,MAAO,aACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,YAGfE,KAAM,IAmBV,OAjBAnF,EAAOK,SAAQ,SAAC1D,GAAW,IAAD,EACtBrI,EAAK6Q,KAAK/N,KAAK,CACXrD,GAAI4I,EAAMjI,IACV0Q,WAAYzI,EAAM0I,WAAWpP,OAC7BqP,OAAO,IAAD,OAAM3I,EAAM1E,YAClBsN,OAAQC,OAAM,iBAAC7I,QAAD,IAACA,OAAD,EAACA,EAAO8I,mBAAR,QAAuB,IAAIC,SAAS,aAC9C,mBAAGxD,MAAO,CAAEyD,MAAO,SAAnB,SAA+BhJ,EAAM8I,cAErC,mBAAGvD,MAAO,CAAEyD,MAAO,OAAnB,SAA6BhJ,EAAM8I,cAEvCG,QACI,cAAC,IAAD,CAAMnP,GAAE,iBAAYkG,EAAMjI,KAAOwB,UAAU,kBAA3C,SACI,mBAAGA,UAAU,qBAKtB5B,EAQyCuR,GAAa3P,UAAU,OAAO4P,UAAQ,EAACC,SAAO,EAACC,OAAK,QCY7FC,GAlFD,SAAC,GAA2B,IAAzBtQ,EAAwB,EAAxBA,QAASuQ,EAAe,EAAfA,SAAe,EACXzF,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,OAELF,mBAAS,IAFJ,mBAE9BK,EAF8B,KAEpBqF,EAFoB,KAI/BvF,EAAQC,cACR5M,EAAW2B,cALoB,EAOOC,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAAjEuO,EAP6B,EAO7BA,gBAAiBlG,EAPY,EAOZA,QAASP,EAPG,EAOHA,MAE5B0G,EAAWH,EAASI,OAASJ,EAASI,OAAOC,MAAM,KAAK,GAAK,IAEnEjG,qBAAU,WACN,IAAI8F,EAKJ,OAAIzG,GACAiB,EAAMjB,MAAMA,QACZ1L,EAASoH,YAFb,EAJI1F,EAAQyB,KAAKiP,KASlB,CAACpS,EAAUmS,EAAiBzG,EAAOiB,EAAOjL,EAAS0Q,IAOtD,OACI,mCACKnG,EACG,cAAC,EAAD,IAEA,qCACI,cAAC,EAAD,CAAU1K,MAAO,UACjB,qBAAKU,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY8K,SAd9B,SAACC,GACnBA,EAAMC,iBACNjN,EToBa,SAACyM,EAAOI,GAAR,8CAAqB,WAAO7M,GAAP,mBAAAE,EAAA,sEAElCF,EAAS,CAAEM,KAAM0I,KACXL,EAAS,CACXC,QAAS,CACL,eAAgB,qBALU,SAQXzI,IAAM0I,KAAK,gBAAiB,CAAE4D,QAAOI,YAAYlE,GARtC,gBAQ1BtI,EAR0B,EAQ1BA,KACRL,EAAS,CAAEM,KAAM2I,GAAe1I,QAASF,EAAKsD,OATZ,kDAWlC6H,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAM4I,GAAYwC,MAAO,KAAM5E,SAASzG,KAAK0G,UAZtB,0DAArB,sDSpBJwL,CAAM9F,EAAOI,KAYF,UACI,oBAAI5K,UAAU,OAAd,mBACA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,mBACA,uBACIhN,KAAK,QACLR,GAAG,cACHmC,UAAU,eACVW,MAAO6J,EACPc,SAAU,SAACP,GAAD,OAAWN,EAASM,EAAMQ,OAAO5K,aAInD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,iBAAf,sBACA,uBACIhN,KAAK,WACLR,GAAG,iBACHmC,UAAU,eACVW,MAAOiK,EACPU,SAAU,SAACP,GAAD,OAAWkF,EAAYlF,EAAMQ,OAAO5K,aAItD,cAAC,IAAD,CAAMJ,GAAG,mBAAmBP,UAAU,mBAAtC,8BAIA,wBAAQnC,GAAG,eAAeQ,KAAK,SAAS2B,UAAU,qBAAlD,mBAIA,cAAC,IAAD,CAAMO,GAAG,YAAYP,UAAU,mBAA/B,oCCDjBuQ,GAvEK,SAAC,GAAwB,IAAtB9Q,EAAqB,EAArBA,QAASqN,EAAY,EAAZA,MAAY,EACRvC,mBAAS,IADD,mBACjCK,EADiC,KACvBqF,EADuB,OAEM1F,mBAAS,IAFf,mBAEjCiG,EAFiC,KAEhBC,EAFgB,KAIlC/F,EAAQC,cACR5M,EAAW2B,cALuB,EAObC,aAAY,SAACC,GAAD,OAAWA,EAAMgL,YAAhDnB,EAPgC,EAOhCA,MAAOoB,EAPyB,EAOzBA,QAEfT,qBAAU,WACFX,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAGT0F,IACAH,EAAMG,QAAQ,iCACdpL,EAAQyB,KAAK,aAElB,CAACnD,EAAU0L,EAAOiB,EAAOG,EAASpL,IAYrC,OACI,qCACI,cAAC,EAAD,CAAUiR,KAAK,iBACf,qBAAK1Q,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY8K,SAftB,SAACC,GACnBA,EAAMC,iBAEN,IV6HsB2F,EAAOC,EU7HvB3F,EAAW,IAAIC,SACrBD,EAASE,IAAI,WAAYP,GACzBK,EAASE,IAAI,kBAAmBqF,GAEhCzS,GVyHsB4S,EUzHC7D,EAAMM,OAAOuD,MVyHPC,EUzHc3F,EVyHtB,uCAAsB,WAAOlN,GAAP,mBAAAE,EAAA,sEAE3CF,EAAS,CAAEM,KAAMsK,KACXjC,EAAS,CACXC,QAAS,CACL,eAAgB,qBALmB,SAQpBzI,IAAM2S,IAAN,iCAAoCF,GAASC,EAAWlK,GARpC,gBAQnCtI,EARmC,EAQnCA,KACRL,EAAS,CAAEM,KAAMuK,GAAsBtK,QAASF,EAAKyM,UATV,kDAW3CtB,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAMwK,GAAmBY,MAAO,KAAM5E,SAASzG,KAAK0G,UAZpB,0DAAtB,yDUjHT,UACI,oBAAI9E,UAAU,OAAd,0BAEA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,iBAAf,sBACA,uBACIhN,KAAK,WACLR,GAAG,iBACHmC,UAAU,eACVW,MAAOiK,EACPU,SAAU,SAACP,GAAD,OAAWkF,EAAYlF,EAAMQ,OAAO5K,aAItD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,yBAAf,8BACA,uBACIhN,KAAK,WACLR,GAAG,yBACHmC,UAAU,eACVW,MAAO6P,EACPlF,SAAU,SAACP,GAAD,OAAW0F,EAAmB1F,EAAMQ,OAAO5K,aAI7D,wBAAQ9C,GAAG,sBAAsBQ,KAAK,SAAS2B,UAAU,qBAAzD,qC,SC2IT8Q,GAvMI,SAAC,GAAiB,IAAfrR,EAAc,EAAdA,QACZiL,EAAQC,cACR5M,EAAW2B,cAFe,EAIR6K,mBAAS,IAJD,mBAIzB9L,EAJyB,KAInBsS,EAJmB,OAKNxG,mBAAS,GALH,mBAKzB7L,EALyB,KAKlBuO,EALkB,OAMM1C,mBAAS,IANf,mBAMzByG,EANyB,KAMZC,EANY,OAOA1G,mBAAS,IAPT,mBAOzB2G,EAPyB,KAOfC,EAPe,OAQN5G,mBAAS,GARH,mBAQzBzL,EARyB,KAQlBsS,EARkB,OASJ7G,mBAAS,IATL,mBASzB8G,EATyB,KASjBC,EATiB,OAUL/G,mBAAS,IAVJ,mBAUzB5L,EAVyB,KAUjB4S,EAViB,OAWUhH,mBAAS,IAXnB,mBAWzBiH,EAXyB,KAWVC,EAXU,OA4BI9R,aAAY,SAACC,GAAD,OAAWA,EAAM8R,cAAzD1H,EA5BwB,EA4BxBA,QAASP,EA5Be,EA4BfA,MAAOoB,EA5BQ,EA4BRA,QAExBT,qBAAU,WACFX,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,KAGT0F,IACApL,EAAQyB,KAAK,mBACbwJ,EAAMG,QAAQ,gCACd9M,EbsMmB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACjCF,EAAS,CACLM,KAAMsF,IAFuB,2CAAN,0DapMxB,CAAC5F,EAAU2M,EAAOjL,EAASgK,EAAOoB,IAsCrC,OACI,qCACI,cAAC,EAAD,CAAUvL,MAAM,gBAChB,sBAAKU,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,mBAAf,SACI,mCACI,qBAAKA,UAAU,eAAf,SACI,uBAAMA,UAAU,YAAY2R,QAAQ,sBAAsB7G,SA9C5D,SAACC,GACnBA,EAAMC,iBAEN,IbyEmB4G,EazEb3G,EAAW,IAAIC,SACrBD,EAASE,IAAI,OAAQ1M,GACrBwM,EAASE,IAAI,QAASzM,GACtBuM,EAASE,IAAI,cAAe6F,GAC5B/F,EAASE,IAAI,WAAY+F,GACzBjG,EAASE,IAAI,QAASrM,GACtBmM,EAASE,IAAI,SAAUkG,GAEvB1S,EAAOwL,SAAQ,SAAC0H,GACZ5G,EAAS6G,OAAO,SAAUD,MAG9B9T,Gb6DmB6T,Ea7DC3G,Eb6DF,uCAAiB,WAAOlN,GAAP,mBAAAE,EAAA,sEAEnCF,EAAS,CACLM,KAAMmF,IAEJkD,EAAS,CACXC,QAAS,CACL,eAAgB,qBAPW,SAUZzI,IAAM0I,KAAK,4BAA6BgL,EAAalL,GAVzC,gBAU3BtI,EAV2B,EAU3BA,KACRL,EAAS,CACLM,KAAMoF,EACNnF,QAASF,IAbsB,kDAgBnCL,EAAS,CACLM,KAAMqF,EACNpF,QAAS,KAAMuG,SAASzG,KAAK0G,UAlBE,0DAAjB,yDa9BE,UACI,oBAAI9E,UAAU,OAAd,yBACA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,aAAf,kBACA,uBACIhN,KAAK,OACLR,GAAG,aACHmC,UAAU,eACVW,MAAOlC,EACP6M,SAAU,SAACP,GAAD,OAAWgG,EAAQhG,EAAMQ,OAAO5K,aAGlD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,mBACA,uBACIhN,KAAK,OACLR,GAAG,cACHmC,UAAU,eACVW,MAAOjC,EACP4M,SAAU,SAACP,GAAD,OAAWkC,EAASlC,EAAMQ,OAAO5K,aAGnD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,oBAAf,yBACA,0BACIrL,UAAU,eACVnC,GAAG,oBACHoR,KAAK,IACLtO,MAAOqQ,EACP1F,SAAU,SAACP,GAAD,OAAWkG,EAAelG,EAAMQ,OAAO5K,aAGzD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,iBAAf,sBACA,wBACIrL,UAAU,eACVnC,GAAG,iBACH8C,MAAOuQ,EACP5F,SAAU,SAACP,GAAD,OAAWoG,EAAYpG,EAAMQ,OAAO5K,QAJlD,SA9Gb,CACf,cACA,UACA,UACA,cACA,aACA,OACA,QACA,gBACA,gBACA,SACA,UACA,QAwG4CV,KAAI,SAACiR,GAAD,OACZ,wBAAuBvQ,MAAOuQ,EAA9B,SACKA,GADQA,WAMzB,sBAAKlR,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,mBACA,uBACIhN,KAAK,SACLR,GAAG,cACHmC,UAAU,eACVW,MAAO7B,EACPwM,SAAU,SAACP,GAAD,OAAWqG,EAASrG,EAAMQ,OAAO5K,aAGnD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,eAAf,yBACA,uBACIhN,KAAK,OACLR,GAAG,eACHmC,UAAU,eACVW,MAAO0Q,EACP/F,SAAU,SAACP,GAAD,OAAWuG,EAAUvG,EAAMQ,OAAO5K,aAGpD,sBAAKX,UAAU,aAAf,UACI,2CACA,sBAAKA,UAAU,cAAf,UACI,uBACI3B,KAAK,OACLI,KAAK,iBACLuB,UAAU,oBACVnC,GAAG,aACHyN,SAvGlB,SAACP,GACnB,IAAMgH,EAAQC,MAAMC,KAAKlH,EAAMQ,OAAOwG,OACtCR,EAAS,IACTE,EAAiB,IAEjBM,EAAM5H,SAAQ,SAAC+H,GACX,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WAEc,IAAtBF,EAAOG,aACPf,GAAS,SAACgB,GAAD,6BAAaA,GAAb,CAAkBJ,EAAOK,YAClCf,GAAiB,SAACc,GAAD,6BAAaA,GAAb,CAAkBJ,EAAOK,cAGlDL,EAAOM,cAAcP,OA0FWQ,UAAQ,IAEZ,uBAAO1S,UAAU,oBAAoBqL,QAAQ,aAA7C,8BAIHmG,EAAcvR,KAAI,SAAC4R,GAAD,OACf,qBACI1R,IAAK0R,EAELzR,IAAI,UACJJ,UAAU,YACVM,MAAM,KACND,OAAO,MAJFwR,SAQjB,wBACItQ,SAAUyI,EACVnM,GAAG,eACHQ,KAAK,SACL2B,UAAU,qBAJd,oCCvFjB2S,GA9FM,SAAC,GAAe,IAAD,EAAZ7F,EAAY,EAAZA,MACdpC,EAAQC,cACR5M,EAAW2B,cAFe,EAIOC,aAAY,SAACC,GAAD,OAAWA,EAAMgT,gBAA5D5I,EAJwB,EAIxBA,QAASP,EAJe,EAIfA,MAJe,IAIRhD,aAJQ,MAIA,GAJA,EAKxBhF,EAAyEgF,EAAzEhF,aAAc0N,EAA2D1I,EAA3D0I,WAAY0D,EAA+CpM,EAA/CoM,YAAanR,EAAkC+E,EAAlC/E,KAAMK,EAA4B0E,EAA5B1E,WAAYwN,EAAgB9I,EAAhB8I,YAEjEnF,qBAAU,WACNrM,EAAS8I,GAAgBiG,EAAMM,OAAOvP,KAElC4L,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,SAEd,CAACpH,EAAU2M,EAAOjB,EAAOqD,EAAMM,OAAOvP,KAEzC,IAAMiV,EACFrR,GAAY,UACTA,EAAaQ,QADJ,aACgBR,EAAaS,KAD7B,aACsCT,EAAaU,WADnD,aACkEV,EAAaW,SAEzF2Q,EAAiC,eAAb,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAaxD,QAE5B,OACI,qCACI,cAAC,EAAD,CAAU/P,MAAM,kBACf0K,EACG,cAAC,EAAD,IAEA,mCACI,qBAAKhK,UAAU,qCAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,qBAAIA,UAAU,OAAd,qBAA8ByG,EAAMjI,OAEpC,oBAAIwB,UAAU,OAAd,2BACA,8BACI,sCADJ,WACkB0B,QADlB,IACkBA,OADlB,EACkBA,EAAMjD,QAExB,8BACI,uCADJ,WACmBgD,QADnB,IACmBA,OADnB,EACmBA,EAAcO,eAEjC,oBAAGhC,UAAU,OAAb,UACI,yCADJ,IACqB8S,KAErB,8BACI,wCADJ,KACqB/Q,KAGrB,uBAEA,oBAAI/B,UAAU,OAAd,qBACA,mBAAGA,UAAW+S,EAAS,aAAe,WAAtC,SACI,4BAAIA,EAAS,OAAS,eAG1B,oBAAI/S,UAAU,OAAd,2BACA,mBACIA,UACIsP,OAAM,iBAAC7I,QAAD,IAACA,OAAD,EAACA,EAAO8I,mBAAR,QAAuB,IAAIC,SAAS,aAAe,aAAe,WAFhF,SAKI,4BAAID,MAGR,oBAAIvP,UAAU,OAAd,0BAEA,uBACA,qBAAKA,UAAU,iBAAf,SACKmP,GACGA,EAAWlP,KAAI,SAACC,GAAD,OACX,sBAAKF,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKG,IAAKD,EAAKvB,OAAO,GAAGE,IAAKuB,IAAKF,EAAKzB,KAAM4B,OAAO,KAAKC,MAAM,SAEpE,qBAAKN,UAAU,iBAAf,SACI,cAAC,IAAD,CAAMO,GAAE,oBAAeL,EAAK3B,SAA5B,SAAwC2B,EAAKzB,SAEjD,qBAAKuB,UAAU,8BAAf,SACI,kCAAKE,EAAKxB,WAEd,qBAAKsB,UAAU,8BAAf,SACI,8BAAIE,EAAKpC,SAAT,mBAXuBoC,EAAK3B,cAgBhD,kCCmBbyU,GAtGG,SAAC,GAAiB,IAAfvT,EAAc,EAAdA,QACXiL,EAAQC,cACR5M,EAAW2B,cAFc,EAISC,aAAY,SAACC,GAAD,OAAWA,EAAMiK,aAA7DG,EAJuB,EAIvBA,QAASP,EAJc,EAIdA,MAJc,IAIPK,cAJO,MAIE,GAJF,EAKvBmJ,EAActT,aAAY,SAACC,GAAD,OAAWA,EAAM6G,SAA3CwM,UAER7I,qBAAU,WACNrM,EAAS+I,MACL2C,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAGT8N,IACAvI,EAAMG,QAAQ,8BACdpL,EAAQyB,KAAK,iBACbnD,Ed8FoB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDAClCF,EAAS,CACLM,KAAM+H,KAFwB,2CAAN,0Dc5FzB,CAACrI,EAAU2M,EAAOjB,EAAOhK,EAASwT,IAErC,IAAMC,EAAqB,SAACrV,GACxBE,EduEmB,SAACF,GAAD,8CAAQ,WAAOE,GAAP,iBAAAE,EAAA,sEAE3BF,EAAS,CACLM,KAAM4H,KAHiB,SAKJ/H,IAAMiV,OAAN,8BAAoCtV,IALhC,gBAKnBO,EALmB,EAKnBA,KACRL,EAAS,CACLM,KAAM6H,GACN5H,QAASF,EAAKyM,UARS,gDAW3B9M,EAAS,CACLM,KAAM8H,GACN7H,QAAS,KAAMuG,SAASzG,KAAK0G,UAbN,yDAAR,sDcvEVsO,CAAYvV,KA0DzB,OACI,qCACI,cAAC,EAAD,CAAUyB,MAAM,eAChB,sBAAKU,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,mBAAf,SACI,qCACI,oBAAIA,UAAU,OAAd,wBACCgK,EACG,cAAC,EAAD,IAEA,cAAC,KAAD,CAAc5L,KApEpB,WACd,IAAMA,EAAO,CACTyQ,QAAS,CACL,CACIC,MAAO,WACPC,MAAO,KACPC,KAAM,OAEV,CACIF,MAAO,eACPC,MAAO,aACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,YAGfE,KAAM,IAwBV,OAtBAnF,EAAOK,SAAQ,SAAC1D,GAAW,IAAD,EACtBrI,EAAK6Q,KAAK/N,KAAK,CACXrD,GAAI4I,EAAMjI,IACV0Q,WAAYzI,EAAM0I,WAAWpP,OAC7BqP,OAAO,IAAD,OAAM3I,EAAM1E,YAClBsN,OAAQC,OAAM,iBAAC7I,QAAD,IAACA,OAAD,EAACA,EAAO8I,mBAAR,QAAuB,IAAIC,SAAS,aAC9C,mBAAGxD,MAAO,CAAEyD,MAAO,SAAnB,SAA+BhJ,EAAM8I,cAErC,mBAAGvD,MAAO,CAAEyD,MAAO,OAAnB,SAA6BhJ,EAAM8I,cAEvCG,QACI,qCACI,cAAC,IAAD,CAAMnP,GAAE,uBAAkBkG,EAAMjI,KAAOwB,UAAU,4BAAjD,SACI,mBAAGA,UAAU,gBAEjB,wBAAQA,UAAU,gCAAgCQ,QAAS,kBAAM0S,EAAmBzM,EAAMjI,MAA1F,SACI,mBAAGwB,UAAU,0BAM1B5B,EAgBiCuR,GAAa3P,UAAU,OAAO4P,UAAQ,EAACC,SAAO,EAACC,OAAK,gBC7ErFuD,GAvBM,WACjB,OACI,qCACI,cAAC,EAAD,CAAU/T,MAAM,mBAChB,qBAAKU,UAAU,6BAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBACIA,UAAU,iCACVG,IAAI,4BACJC,IAAI,gBACJE,MAAM,MACND,OAAO,QAGX,0EAEA,cAAC,IAAD,CAAME,GAAG,aAAT,mCCVd+S,GAAU,CACZtH,MAAO,CACHuH,KAAM,CACFC,SAAU,QAEdC,QAAS,CACLhE,MAAO,aAuIJiE,GAlIC,SAAC,GAAiB,IAAfjU,EAAc,EAAdA,QACTiL,EAAQC,cACRgJ,EAASC,uBACTC,EAAWC,yBACX/V,EAAW2B,cAETgC,EAAS/B,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAAtCD,KACA+H,EAAU9J,aAAY,SAACC,GAAD,OAAWA,EAAMkK,UAAvCL,MAPqB,EAQO9J,aAAY,SAACC,GAAD,OAAWA,EAAMT,QAAzDC,EARqB,EAQrBA,UAAWqC,EARU,EAQVA,aAEnB2I,qBAAU,WACFX,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,SAEd,CAACpH,EAAU2M,EAAOjB,IAErB,IAAMsK,EAAY9U,KAAK+U,MAAM3R,eAAe4R,QAAQ,cAC9CxN,EAAQ,CACV0I,WAAY/P,EACZqC,gBAGAsS,IACAtN,EAAM7E,WAAamS,EAAUnS,WAC7B6E,EAAM5E,cAAgBkS,EAAUlS,cAChC4E,EAAM3E,SAAWiS,EAAUjS,SAC3B2E,EAAM1E,WAAagS,EAAUhS,YAGjC,IAAMmS,EAAc,CAChB9E,OAAQ+E,KAAKC,MAA6B,IAAvBL,EAAUhS,aAG3BsS,EAAa,uCAAG,WAAOtJ,GAAP,mBAAA9M,EAAA,yDAClB8M,EAAMC,iBACNsJ,SAASC,cAAc,YAAYhT,UAAW,EAF5B,SAKToS,GAAWE,EALF,iEASS3V,IAAM0I,KAAK,0BAA2BsN,EAAa,CACtEvN,QAAS,CACL,eAAgB,sBAXV,cASR9B,EATQ,OAeR2P,EAAe3P,EAASzG,KAAKqW,cAfrB,UAgBOd,EAAOe,mBAAmBF,EAAc,CACzDG,eAAgB,CACZC,KAAMf,EAASgB,WAAWC,sBAC1BC,gBAAiB,CACbtW,KAAMiD,EAAKjD,KACX+L,MAAO9I,EAAK8I,UArBV,aAgBRgI,EAhBQ,QA0BH/I,MA1BG,wBA2BV6K,SAASC,cAAc,YAAYhT,UAAW,EAC9CmJ,EAAMjB,MAAM+I,EAAO/I,MAAM3E,SA5Bf,8BAgCsB,cAAhC0N,EAAOwC,cAAc3F,OAhCX,wBAiCViF,SAASC,cAAc,YAAYhT,UAAW,EAC9CmJ,EAAMjB,MAAM,oCAlCF,2BAsCd6K,SAASC,cAAc,YAAYhT,UAAW,EAC9CkF,EAAMoM,YAAc,CAChBhV,GAAI2U,EAAOwC,cAAcnX,GACzBwR,OAAQmD,EAAOwC,cAAc3F,QAGjCtR,EAASyI,GAAYC,IACrBhH,EAAQyB,KAAK,YA7CC,kDA+CdoT,SAASC,cAAc,YAAYhT,UAAW,EAC9CmJ,EAAMjB,MAAM,KAAM5E,SAASzG,KAAK0G,SAhDlB,0DAAH,sDAoDnB,OACI,qCACI,cAAC,EAAD,CAAUxF,MAAM,YAChB,cAAC,EAAD,CAAe8B,cAAY,EAACC,kBAAgB,EAACC,aAAW,IAExD,qBAAKtB,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY8K,SAAUuJ,EAAtC,UACI,oBAAIrU,UAAU,OAAd,uBACA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,iBAAf,yBACA,cAAC,qBAAD,CACIhN,KAAK,OACLR,GAAG,iBACHmC,UAAU,eACVsT,QAASA,QAIjB,sBAAKtT,UAAU,aAAf,UACI,uBAAOqL,QAAQ,iBAAf,yBACA,cAAC,qBAAD,CACIhN,KAAK,OACLR,GAAG,iBACHmC,UAAU,eACVsT,QAASA,QAIjB,sBAAKtT,UAAU,aAAf,UACI,uBAAOqL,QAAQ,iBAAf,sBACA,cAAC,kBAAD,CAAgBhN,KAAK,OAAOR,GAAG,iBAAiBmC,UAAU,oBAG9D,yBAAQnC,GAAG,UAAUQ,KAAK,SAAS2B,UAAU,qBAA7C,sCACgB+T,QADhB,IACgBA,OADhB,EACgBA,EAAWhS,0BCSpCkT,GA7IM,SAAC,GAAe,IAAD,EAAZnI,EAAY,EAAZA,MACdpC,EAAQC,cACR5M,EAAW2B,cAFe,EAIJ6K,mBAAS,IAJL,mBAIzB8E,EAJyB,KAIjB6F,EAJiB,OAMAvV,aAAY,SAACC,GAAD,OAAWA,EAAMgT,gBAArD5I,EANwB,EAMxBA,QANwB,IAMfvD,aANe,MAMP,GANO,EAOxBhF,EAAyEgF,EAAzEhF,aAAc0N,EAA2D1I,EAA3D0I,WAAY0D,EAA+CpM,EAA/CoM,YAAanR,EAAkC+E,EAAlC/E,KAAMK,EAA4B0E,EAA5B1E,WAAYwN,EAAgB9I,EAAhB8I,YAPjC,EAQH5P,aAAY,SAACC,GAAD,OAAWA,EAAM6G,SAAlDgD,EARwB,EAQxBA,MAAO0L,EARiB,EAQjBA,UAEf/K,qBAAU,WACNrM,EAAS8I,GAAgBiG,EAAMM,OAAOvP,KAElC4L,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAETgQ,IACAzK,EAAMG,QAAQ,8BACd9M,EjBmGoB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDAClCF,EAAS,CACLM,KAAM2H,KAFwB,2CAAN,0DiBjGzB,CAACjI,EAAU2M,EAAOjB,EAAO0L,EAAWrI,EAAMM,OAAOvP,KAEpD,IAAMuX,EAAqB,SAACvX,GACxB,IAAMoN,EAAW,IAAIC,SACrBD,EAASE,IAAI,SAAUkE,GAEvBtR,EjB4CmB,SAACF,EAAIwX,GAAL,8CAAmB,WAAOtX,GAAP,mBAAAE,EAAA,sEAEtCF,EAAS,CACLM,KAAMwH,KAEJa,EAAS,CACXC,QAAS,CACL,eAAgB,qBAPc,SAUfzI,IAAM2S,IAAN,8BAAiChT,GAAMwX,EAAW3O,GAVnC,gBAU9BtI,EAV8B,EAU9BA,KACRL,EAAS,CACLM,KAAMyH,GACNxH,QAASF,EAAKyM,UAboB,kDAgBtC9M,EAAS,CACLM,KAAM0H,GACNzH,QAAS,KAAMuG,SAASzG,KAAK0G,UAlBK,0DAAnB,sDiB5CVwQ,CAAYzX,EAAIoN,KAGvB6H,EACFrR,GAAY,UACTA,EAAaQ,QADJ,aACgBR,EAAaS,KAD7B,aACsCT,EAAaU,WADnD,aACkEV,EAAaW,SACzF2Q,EAASF,GAAsC,cAAvBA,EAAYxD,OAE1C,OACI,qCACI,cAAC,EAAD,CAAU/P,MAAK,gCAAoBmH,QAApB,IAAoBA,OAApB,EAAoBA,EAAOjI,OAC1C,sBAAKwB,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,mBAAf,SACI,mCACKgK,EACG,cAAC,EAAD,IAEA,sBAAKhK,UAAU,oCAAf,UACI,sBAAKA,UAAU,gCAAf,UACI,qBAAIA,UAAU,OAAd,4BAA8ByG,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOjI,OACrC,oBAAIwB,UAAU,OAAd,2BACA,8BACI,uCADJ,WACmB0B,QADnB,IACmBA,OADnB,EACmBA,EAAMjD,QAEzB,8BACI,wCADJ,WACoBgD,QADpB,IACoBA,OADpB,EACoBA,EAAcO,eAElC,oBAAGhC,UAAU,OAAb,UACI,yCACC8S,KAEL,8BACI,yCADJ,KACsB/Q,KAEtB,uBACA,oBAAI/B,UAAU,OAAd,qBACA,mBAAGA,UAAW+S,EAAS,aAAe,WAAtC,SACI,4BAAIA,EAAS,OAAS,eAE1B,oBAAI/S,UAAU,OAAd,uBACA,4BACI,mCAAI6S,QAAJ,IAAIA,OAAJ,EAAIA,EAAahV,OAErB,oBAAImC,UAAU,OAAd,2BACA,mBACIA,UACIsP,OAAM,iBAAC7I,QAAD,IAACA,OAAD,EAACA,EAAO8I,mBAAR,QAAuB,IAAIC,SAAS,aACpC,aACA,WAJd,SAOI,4BAAID,MAER,oBAAIvP,UAAU,OAAd,0BACA,uBACA,qBAAKA,UAAU,iBAAf,SACKmP,GACGA,EAAWlP,KAAI,SAACC,GAAD,OACX,sBAAKF,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBACIG,IAAKD,EAAKvB,OAAO,GAAGE,IACpBuB,IAAKF,EAAKzB,KACV4B,OAAO,KACPC,MAAM,SAGd,qBAAKN,UAAU,iBAAf,SACI,cAAC,IAAD,CAAMO,GAAE,oBAAeL,EAAK3B,SAA5B,SAAwC2B,EAAKzB,SAEjD,qBAAKuB,UAAU,8BAAf,SACI,kCAAKE,EAAKxB,WAEd,qBAAKsB,UAAU,8BAAf,SACI,8BAAIE,EAAKpC,SAAT,mBAhBuBoC,EAAK3B,cAqBhD,0BAEJ,sBAAKyB,UAAU,uBAAf,UACI,oBAAIA,UAAU,OAAd,oBACA,qBAAKA,UAAU,aAAf,SACI,yBACIA,UAAU,eACVvB,KAAK,SACLkC,MAAO0O,EACP/D,SAAU,SAACP,GAAD,OAAWmK,EAAUnK,EAAMQ,OAAO5K,QAJhD,UAMI,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,4BAGR,wBACIX,UAAU,4BACVQ,QAAS,kBAAM4U,EAAmB3O,EAAMjI,MAF5C,4C,UCjHrB+W,GApBK,SAAC,GAAiB,IAAfrQ,EAAc,EAAdA,QACnB,OACI,sBAAKlF,UAAU,eAAf,UACI,kDACA,uBAFJ,OAGKkF,QAHL,IAGKA,OAHL,EAGKA,EAASjF,KAAI,SAACuV,GAAD,OACV,sBAAKxV,UAAU,mBAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,eAAegM,MAAO,CAAE1L,MAAM,GAAD,OAAMkV,EAAOC,OAAS,EAAK,IAA3B,UAEhD,oBAAGzV,UAAU,cAAb,gBAA+BwV,EAAO/W,QACtC,mBAAGuB,UAAU,iBAAb,SAA+BwV,EAAOE,UAEtC,yBAPmCF,EAAOhX,YCmQ/CmX,GAhQQ,SAAC,GAAe,IAAD,EAAZ7I,EAAY,EAAZA,MAAY,EACFvC,mBAAS,GADP,mBAC3BzM,EAD2B,KACjB8X,EADiB,OAENrL,mBAAS,GAFH,mBAE3BkL,EAF2B,KAEnBI,EAFmB,OAGJtL,mBAAS,IAHL,mBAG3BmL,EAH2B,KAGlBI,EAHkB,KAK5B/X,EAAW2B,cACXgL,EAAQC,cAENjJ,EAAS/B,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAAtCD,KAR0B,EASE/B,aAAY,SAACC,GAAD,OAAWA,EAAMmW,kBAAzD/L,EAT0B,EAS1BA,QAASP,EATiB,EASjBA,MAAOlL,EATU,EASVA,QATU,EAUMoB,aAAY,SAACC,GAAD,OAAWA,EAAMoW,aAAtDC,EAVmB,EAU1BxM,MAAoBoB,EAVM,EAUNA,QAuF5B,OAlBAT,qBAAU,WACN,OAAIX,GAKAwM,GAJAvL,EAAMjB,MAAMA,QACZ1L,EAASoH,QAQT0F,IACAH,EAAMG,QAAQ,8BACd9M,GpBEwB,SAACA,GACjCA,EAAS,CAAEM,KAAMkF,aoBDbxF,EAAS6G,GAAkBkI,EAAMM,OAAOvP,QACzC,CAACE,EAAU2M,EAAOjB,EAAOwM,EAAapL,EAASiC,EAAMM,OAAOvP,KAG3D,mCACKmM,EACG,cAAC,EAAD,IAEA,qCACI,cAAC,EAAD,CAAU1K,MAAOf,EAAQE,OACzB,sBAAKuB,UAAU,oCAAf,UACI,qBAAKA,UAAU,4BAA4BnC,GAAG,gBAA9C,SACI,cAACqY,GAAA,EAAD,CAAUC,MAAM,QAAhB,SACK5X,EAAQI,QACLJ,EAAQI,OAAOsB,KAAI,SAAC4R,GAAD,OACf,cAACqE,GAAA,EAASE,KAAV,UACI,qBAAKpW,UAAU,gBAAgBG,IAAK0R,EAAMhT,IAAKuB,IAAK7B,EAAQe,SAD5CuS,EAAMjT,kBAM1C,sBAAKoB,UAAU,uBAAf,UACI,6BAAKzB,EAAQE,OACb,oBAAGZ,GAAG,aAAN,uBAA8BU,EAAQC,OACtC,uBACA,qBAAKwB,UAAU,eAAf,SACI,qBACIA,UAAU,eACVgM,MAAO,CAAE1L,MAAM,GAAD,OAAM/B,EAAQiO,QAAU,EAAK,IAA7B,UAGtB,uBAAM3O,GAAG,gBAAT,cAA2BU,EAAQkO,aAAnC,eACA,uBACA,oBAAG5O,GAAG,gBAAN,cAAwBU,EAAQG,SAChC,sBAAKsB,UAAU,wBAAf,UACI,sBAAMA,UAAU,uBAAuBQ,QArH/C,WACF8T,SAASC,cAAc,UAC3B8B,eAAiB,GAI3BT,GAAY,SAACU,GAAD,OAAaA,EAAU,MA+GX,eAGA,uBACIjY,KAAK,SACL2B,UAAU,8BACVW,MAAO7C,EACP8C,UAAQ,IAEZ,sBAAMZ,UAAU,uBAAuBQ,QArH/C,WACF8T,SAASC,cAAc,UAC3B8B,eAAiB9X,EAAQO,OAInC8W,GAAY,SAACU,GAAD,OAAaA,EAAU,MA+GX,kBAIJ,wBACIjY,KAAK,SACLR,GAAG,WACHmC,UAAU,gCACVuW,QAA2B,IAAlBhY,EAAQO,MACjB0B,QArHV,WACdzC,EAASH,EAAckP,EAAMM,OAAOvP,GAAIC,IACxC4M,EAAMG,QAAQ,wBA8GM,yBASA,uBACA,wCACY,IACR,sBAAMhN,GAAG,eAAemC,UAAWzB,EAAQO,MAAQ,EAAI,aAAe,WAAtE,SACKP,EAAQO,MAAQ,EAAI,WAAa,oBAG1C,uBACA,oBAAIkB,UAAU,OAAd,0BACA,4BAAIzB,EAAQyS,cACZ,uBACA,oBAAGnT,GAAG,sBAAN,sBACa,iCAASU,EAAQ8S,YAE7B3P,EACG,wBACI7D,GAAG,aACHQ,KAAK,SACL2B,UAAU,uBACVyC,cAAY,QACZ+T,cAAY,eACZhW,QAzIT,WACnB,IAAMiW,EAAQnC,SAASoC,iBAAiB,SACxCD,EAAMtM,SAAQ,SAACwM,EAAMC,GACjBD,EAAKE,UAAYD,EAAQ,EAEzBD,EAAKG,iBAAiB,SAAS,SAAU/L,GAAQ,IAAD,OAC5C0L,EAAMtM,SAAQ,SAACwM,EAAMC,GACbA,EAAQ,EAAKC,WACbF,EAAKI,UAAUC,IAAI,UACnBnB,EAAU,EAAKgB,YAEfF,EAAKI,UAAUE,OAAO,gBAKlCN,EAAKG,iBAAiB,aAAa,SAAU/L,GAAQ,IAAD,OAChD0L,EAAMtM,SAAQ,SAACwM,EAAMC,GACbA,EAAQ,EAAKC,UACbF,EAAKI,UAAUC,IAAI,UAEnBL,EAAKI,UAAUE,OAAO,gBAKlCN,EAAKG,iBAAiB,YAAY,SAAU/L,GACxC0L,EAAMtM,SAAQ,SAACwM,EAAMC,GACjBD,EAAKI,UAAUE,OAAO,oBAuGV,gCAWA,qBAAKjX,UAAU,0BAA0B3B,KAAK,QAA9C,wCAKJ,qBAAK2B,UAAU,gBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,qBACIA,UAAU,aACVnC,GAAG,cACHqZ,SAAS,KACT7K,KAAK,SACLD,kBAAgB,mBAChBP,cAAY,OANhB,SAQI,qBAAK7L,UAAU,eAAeqM,KAAK,WAAnC,SACI,sBAAKrM,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAcnC,GAAG,mBAA/B,2BAGA,wBACIQ,KAAK,SACL2B,UAAU,QACVmX,eAAa,QACbC,aAAW,QAJf,SAMI,sBAAMvL,cAAY,OAAlB,uBAGR,sBAAK7L,UAAU,aAAf,UACI,qBAAIA,UAAU,QAAd,UACI,oBAAIA,UAAU,OAAd,SACI,mBAAGA,UAAU,iBAEjB,oBAAIA,UAAU,OAAd,SACI,mBAAGA,UAAU,iBAEjB,oBAAIA,UAAU,OAAd,SACI,mBAAGA,UAAU,iBAEjB,oBAAIA,UAAU,OAAd,SACI,mBAAGA,UAAU,iBAEjB,oBAAIA,UAAU,OAAd,SACI,mBAAGA,UAAU,oBAGrB,0BACIvB,KAAK,SACLZ,GAAG,SACHmC,UAAU,oBACVW,MAAO+U,EACPpK,SAAU,SAACP,GAAD,OAAW+K,EAAW/K,EAAMQ,OAAO5K,UAEjD,wBACIX,UAAU,kDACVmX,eAAa,QACbC,aAAW,QACX5W,QAvK9B,WAClB,IpBCkB6W,EoBDZpM,EAAW,IAAIC,SAErBD,EAASE,IAAI,SAAUsK,GACvBxK,EAASE,IAAI,UAAWuK,GACxBzK,EAASE,IAAI,YAAa2B,EAAMM,OAAOvP,IAEvCE,GpBLkBsZ,EoBKCpM,EpBLF,uCAAgB,WAAOlN,GAAP,mBAAAE,EAAA,sEAEjCF,EAAS,CACLM,KAAM+E,IAEJsD,EAAS,CACXC,QAAS,CACL,eAAgB,qBAPS,SAUVzI,IAAM2S,IAAI,iBAAkBwG,EAAY3Q,GAV9B,gBAUzBtI,EAVyB,EAUzBA,KACRL,EAAS,CACLM,KAAMgF,EACN/E,QAASF,EAAKyM,UAbe,kDAgBjC9M,EAAS,CACLM,KAAMiF,EACNhF,QAAS,KAAMuG,SAASzG,KAAK0G,UAlBA,0DAAhB,yDoBiK2B,yCAiB/B,UAAAvG,EAAQ2G,eAAR,eAAiBnF,QAAS,GAAK,cAAC,GAAD,CAAamF,QAAS3G,EAAQ2G,gBCvHnEoS,GApIQ,SAAC,GAAiB,IAAf7X,EAAc,EAAdA,QAChBiL,EAAQC,cACR5M,EAAW2B,cAFmB,EAIF6K,mBAAS,IAJP,mBAI7BgN,EAJ6B,KAIlBC,EAJkB,OAMJ7X,aAAY,SAACC,GAAD,OAAWA,EAAM6X,kBAArDhO,EAN4B,EAM5BA,MAN4B,IAMrBvE,eANqB,MAMX,GANW,IAOMvF,aAAY,SAACC,GAAD,OAAWA,EAAM4V,UAA/DvC,EAP4B,EAO5BA,UAAkByE,EAPU,EAOjBjO,MAEnBW,qBAAU,WACFX,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAGTuS,IACAhN,EAAMjB,MAAMiO,GACZ3Z,EAASoH,OAGT8N,IACAvI,EAAMG,QAAQ,+BACd9M,ErB0MqB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACnCF,EAAS,CACLM,KAAMiG,KAFyB,2CAAN,wDqBvMP,KAAdiT,GACAxZ,EAASkH,GAAkBsS,MAEhC,CAACxZ,EAAU2M,EAAOjB,EAAOhK,EAAS8X,EAAWtE,EAAWyE,IAE3D,IAAMC,EAAsB,SAAC9Z,GACzBE,ErByKoB,SAACF,EAAI0Z,GAAL,8CAAmB,WAAOxZ,GAAP,iBAAAE,EAAA,sEAEvCF,EAAS,CACLM,KAAM8F,IAH6B,SAKhBjG,IAAMiV,OAAN,6BAAmCtV,EAAnC,sBAAmD0Z,IALnC,gBAK/BnZ,EAL+B,EAK/BA,KACRL,EAAS,CACLM,KAAM+F,EACN9F,QAASF,EAAKyM,UARqB,gDAWvC9M,EAAS,CACLM,KAAMgG,GACN/F,QAAS,KAAMuG,SAASzG,KAAK0G,UAbM,yDAAnB,sDqBzKX8S,CAAa/Z,EAAI0Z,KA2D9B,OACI,qCACI,cAAC,EAAD,CAAUjY,MAAM,oBAChB,sBAAKU,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,mBAAf,SACI,qCACI,qBAAKA,UAAU,kCAAf,SACI,qBAAKA,UAAU,QAAf,SACI,uBAAM8K,SAnEZ,SAACC,GACnBA,EAAMC,iBACNjN,EAASkH,GAAkBsS,KAiEH,UACI,sBAAKvX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,kBAAf,8BACA,uBACIhN,KAAK,OACLR,GAAG,kBACHmC,UAAU,eACVW,MAAO4W,EACPjM,SAAU,SAACP,GAAD,OAAWyM,EAAazM,EAAMQ,OAAO5K,aAIvD,wBAAQ9C,GAAG,gBAAgBQ,KAAK,SAAS2B,UAAU,iCAAnD,2BAOXkF,GAAWA,EAAQnF,OAAS,EACzB,cAAC,KAAD,CAAc3B,KAlFnB,WACf,IAAMA,EAAO,CACTyQ,QAAS,CACL,CACIC,MAAO,YACPC,MAAO,KACPC,KAAM,OAEV,CACIF,MAAO,SACPC,MAAO,SACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,UACPC,KAAM,OAEV,CACIF,MAAO,OACPC,MAAO,OACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,YAGfE,KAAM,IAoBV,OAlBA/J,EAAQiF,SAAQ,SAACqL,GACbpX,EAAK6Q,KAAK/N,KAAK,CACXrD,GAAI2X,EAAOhX,IACXiX,OAAQD,EAAOC,OACfC,QAASF,EAAOE,QAChBhU,KAAM8T,EAAO/W,KACbiR,QACI,mCACI,wBACI1P,UAAU,gCACVQ,QAAS,kBAAMmX,EAAoBnC,EAAOhX,MAF9C,SAII,mBAAGwB,UAAU,yBAM1B5B,EAkCiCyZ,GAAc7X,UAAU,OAAO4P,UAAQ,EAACC,SAAO,EAACC,OAAK,IAEzE,mBAAG9P,UAAU,mBAAb,oCCjBb8X,GAxGM,SAAC,GAAiB,IAAfrY,EAAc,EAAdA,QACdiL,EAAQC,cACR5M,EAAW2B,cAFiB,EAIGC,aAAY,SAACC,GAAD,OAAWA,EAAMoF,YAA1DgF,EAJ0B,EAI1BA,QAASP,EAJiB,EAIjBA,MAAOzE,EAJU,EAIVA,SAJU,EAKQrF,aAAY,SAACC,GAAD,OAAWA,EAAMrB,WAAxDmZ,EALmB,EAK1BjO,MAAoBwJ,EALM,EAKNA,UAE5B7I,qBAAU,WACNrM,EAASgH,MACL0E,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAETuS,IACAhN,EAAMjB,MAAMiO,GACZ3Z,EAASoH,OAET8N,IACAvI,EAAMG,QAAQ,gCACdpL,EAAQyB,KAAK,mBACbnD,EtBgNsB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACpCF,EAAS,CACLM,KAAM6F,IAF0B,2CAAN,0DsB9M3B,CAACnG,EAAU2M,EAAOjB,EAAOiO,EAAazE,EAAWxT,IAEpD,IAsDMsY,EAAuB,SAACla,GAC1BE,EtB4DqB,SAACF,GAAD,8CAAQ,WAAOE,GAAP,iBAAAE,EAAA,sEAE7BF,EAAS,CACLM,KAAM0F,IAHmB,SAKN7F,IAAMiV,OAAN,gCAAsCtV,IALhC,gBAKrBO,EALqB,EAKrBA,KACRL,EAAS,CACLM,KAAM2F,EACN1F,QAASF,EAAKyM,UARW,gDAW7B9M,EAAS,CACLM,KAAM4F,EACN3F,QAAS,KAAMuG,SAASzG,KAAK0G,UAbJ,yDAAR,sDsB5DZkT,CAAcna,KAG3B,OACI,qCACI,cAAC,EAAD,CAAUyB,MAAM,iBAChB,sBAAKU,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,mBAAf,SACI,qCACI,oBAAIA,UAAU,OAAd,0BACCgK,EACG,cAAC,EAAD,IAEA,cAAC,KAAD,CAAc5L,KAvElB,WAChB,IAAMA,EAAO,CACTyQ,QAAS,CACL,CACIC,MAAO,aACPC,MAAO,KACPC,KAAM,OAEV,CACIF,MAAO,OACPC,MAAO,OACPC,KAAM,OAEV,CACIF,MAAO,QACPC,MAAO,QACPC,KAAM,OAEV,CACIF,MAAO,QACPC,MAAO,QACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,YAGfE,KAAM,IAuBV,OArBAjK,EAASmF,SAAQ,SAAC5L,GACdH,EAAK6Q,KAAK/N,KAAK,CACXrD,GAAIU,EAAQC,IACZC,KAAMF,EAAQE,KACdC,MAAM,IAAD,OAAMH,EAAQG,OACnBI,MAAOP,EAAQO,MACf4Q,QACI,qCACI,cAAC,IAAD,CAAMnP,GAAE,yBAAoBhC,EAAQC,KAAOwB,UAAU,4BAArD,SACI,mBAAGA,UAAU,mBAEjB,wBACIA,UAAU,gCACVQ,QAAS,kBAAMuX,EAAqBxZ,EAAQC,MAFhD,SAII,mBAAGwB,UAAU,0BAM1B5B,EAoBiC6Z,GAAejY,UAAU,OAAO4P,UAAQ,EAACC,SAAO,EAACC,OAAK,gBCpDvFoI,GAhDC,WAAO,IAAD,EACQvY,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAA/CD,EADU,EACVA,KAAMsI,EADI,EACJA,QAEd,OACI,mCACKA,EACG,cAAC,EAAD,IAEA,qCACI,cAAC,EAAD,CAAU1K,MAAM,eAChB,oBAAIU,UAAU,YAAd,wBACA,sBAAKA,UAAU,4CAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,wBAAQA,UAAU,wBAAlB,SACI,qBAAKA,UAAU,2BAA2BG,IAAKuB,EAAKyK,OAAOtN,IAAKuB,IAAKsB,EAAKjD,SAE9E,cAAC,IAAD,CAAM8B,GAAG,aAAa1C,GAAG,eAAemC,UAAU,iCAAlD,6BAKJ,sBAAKA,UAAU,kBAAf,UACI,2CACA,4BAAI0B,EAAKjD,OAET,+CACA,4BAAIiD,EAAK8I,QAET,2CACA,4BAAI8E,OAAO5N,EAAKyW,WAAWC,UAAU,EAAG,MAEzB,UAAd1W,EAAK2K,MACF,cAAC,IAAD,CAAM9L,GAAG,aAAaP,UAAU,gCAAhC,uBAKJ,cAAC,IAAD,CAAMO,GAAG,mBAAmBP,UAAU,iCAAtC,yC,SCdbqY,GAxBQ,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,QAAoBC,EAAyB,EAApCC,UAAyBC,EAAW,0CACxB9Y,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAAhEuO,EAD2D,EAC3DA,gBAAiBxO,EAD0C,EAC1CA,KAAMsI,EADoC,EACpCA,QAE/B,OACI,oCACMA,GACE,cAAC,IAAD,2BACQyO,GADR,IAEI1M,OAAQ,SAAC2M,GACL,OAAKxI,EAIDoI,GAAyB,UAAd5W,EAAK2K,KACT,cAAC,IAAD,CAAU9L,GAAG,MAEjB,cAACgY,EAAD,eAAeG,IANX,cAAC,IAAD,CAAUnY,GAAG,kB,SC6IjCoY,GApJE,SAAC,GAAiB,IAAflZ,EAAc,EAAdA,QAAc,EACN8K,mBAAS,CAC7B9L,KAAM,GACN+L,MAAO,GACPI,SAAU,KAJgB,mBACvBlJ,EADuB,KACjBkX,EADiB,OAMFrO,mBAAS,IANP,mBAMvB4B,EANuB,KAMf0M,EANe,OAOYtO,mBAAS,+BAPrB,mBAOvBuO,EAPuB,KAORC,EAPQ,KASxBrO,EAAQC,cACR5M,EAAW2B,cAVa,EAYcC,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAAjEuO,EAZsB,EAYtBA,gBAAiBlG,EAZK,EAYLA,QAASP,EAZJ,EAYIA,MAElCW,qBAAU,WACN,IAAI8F,EAKJ,OAAIzG,GACAiB,EAAMjB,MAAMA,QACZ1L,EAASoH,YAFb,EAJI1F,EAAQyB,KAAK,OASlB,CAACnD,EAAUmS,EAAiBzG,EAAOiB,EAAOjL,IAE7C,IAYMuZ,EAAgB,SAACjO,GACnB,GAA0B,WAAtBA,EAAMQ,OAAO9M,KAAmB,CAChC,IAAM0T,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WAEc,IAAtBF,EAAOG,aACPuG,EAAU1G,EAAOK,QACjBuG,EAAiB5G,EAAOK,UAGhCL,EAAOM,cAAc1H,EAAMQ,OAAOwG,MAAM,SAExC6G,EAAQ,2BAAKlX,GAAN,mBAAaqJ,EAAMQ,OAAO9M,KAAOsM,EAAMQ,OAAO5K,UAI7D,OACI,mCACKqJ,EACG,cAAC,EAAD,IAEA,qCACI,cAAC,EAAD,CAAU1K,MAAO,kBACjB,qBAAKU,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY2R,QAAQ,sBAAsB7G,SArC5D,SAACC,GACnBA,EAAMC,iBAEN,IvBiCiBiO,EuBjCXhO,EAAW,IAAIC,SACrBD,EAASE,IAAI,OAAQzJ,EAAKjD,MAC1BwM,EAASE,IAAI,QAASzJ,EAAK8I,OAC3BS,EAASE,IAAI,WAAYzJ,EAAKkJ,UAC9BK,EAASE,IAAI,SAAUgB,GAEvBpO,GvB2BiBkb,EuB3BChO,EvB2BF,uCAAc,WAAOlN,GAAP,mBAAAE,EAAA,sEAE9BF,EAAS,CAAEM,KAAM6I,KACXR,EAAS,CACXC,QAAS,CACL,eAAgB,wBALM,SAQPzI,IAAM0I,KAAK,mBAAoBqS,EAAUvS,GARlC,gBAQtBtI,EARsB,EAQtBA,KACRL,EAAS,CAAEM,KAAM8I,GAAuB7I,QAASF,EAAKsD,OATxB,kDAW9B6H,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAM+I,GAAoBqC,MAAO,KAAM5E,SAASzG,KAAK0G,UAZlC,0DAAd,yDuBCI,UACI,oBAAI9E,UAAU,OAAd,sBAEA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,kBACA,uBACIhN,KAAK,OACLR,GAAG,aACHmC,UAAU,eACVW,MAAOe,EAAKjD,KACZA,KAAK,OACL6M,SAAU0N,OAIlB,sBAAKhZ,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,mBACA,uBACIhN,KAAK,QACLR,GAAG,cACHmC,UAAU,eACVW,MAAOe,EAAK8I,MACZ/L,KAAK,QACL6M,SAAU0N,OAIlB,sBAAKhZ,UAAU,aAAf,UACI,uBAAOqL,QAAQ,iBAAf,sBACA,uBACIhN,KAAK,WACLR,GAAG,iBACHmC,UAAU,eACVW,MAAOe,EAAKkJ,SACZnM,KAAK,WACL6M,SAAU0N,OAIlB,sBAAKhZ,UAAU,aAAf,UACI,uBAAOqL,QAAQ,gBAAf,oBACA,sBAAKrL,UAAU,4BAAf,UACI,8BACI,wBAAQA,UAAU,uBAAlB,SACI,qBACIG,IAAK2Y,EACL9Y,UAAU,iBACVI,IAAI,uBAIhB,sBAAKJ,UAAU,cAAf,UACI,uBACI3B,KAAK,OACLI,KAAK,SACLuB,UAAU,oBACVnC,GAAG,aACHqb,OAAO,WACP5N,SAAU0N,IAEd,uBAAOhZ,UAAU,oBAAoBqL,QAAQ,aAA7C,oCAOZ,wBACIxN,GAAG,kBACHQ,KAAK,SACL2B,UAAU,qBACVuB,SAAUyI,EAJd,mC,SC7BjBmP,GAtGE,SAAC,GAAiB,IAAf1Z,EAAc,EAAdA,QACV1B,EAAW2B,cAET+B,EAAiB9B,aAAY,SAACC,GAAD,OAAWA,EAAMT,QAA9CsC,aAHsB,EAKA8I,mBAAS9I,EAAaQ,SALtB,mBAKvBA,EALuB,KAKdmX,EALc,OAMN7O,mBAAS9I,EAAaS,MANhB,mBAMvBA,EANuB,KAMjBmX,EANiB,OAOM9O,mBAAS9I,EAAaU,YAP5B,mBAOvBA,EAPuB,KAOXmX,EAPW,OAQQ/O,mBAAS9I,EAAaO,aAR9B,mBAQvBA,EARuB,KAQVuX,EARU,OASAhP,mBAAS9I,EAAaW,SATtB,mBASvBA,EATuB,KASdoX,EATc,KAkB9B,OACI,qCACI,cAAC,EAAD,CAAUla,MAAM,kBAChB,cAAC,EAAD,CAAe8B,cAAY,IAE3B,qBAAKpB,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY8K,SAdtB,SAACC,GjCmBK,IAAC3M,EiClBzB2M,EAAMC,iBAENjN,GjCgByBK,EiChBC,CAAE6D,UAASC,OAAMF,cAAaG,aAAYC,WjCgB5C,uCAAU,WAAOrE,GAAP,SAAAE,EAAA,sDACtCF,EAAS,CAAEM,KAAMV,EAAoBW,QAASF,IAE9CW,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUd,IAHd,2CAAV,wDiCfxBqB,EAAQyB,KAAK,aAUD,UACI,oBAAIlB,UAAU,OAAd,2BACA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,gBAAf,qBACA,uBACIhN,KAAK,OACLR,GAAG,gBACHmC,UAAU,eACVW,MAAOsB,EACPqJ,SAAU,SAACP,GAAD,OAAWqO,EAAWrO,EAAMQ,OAAO5K,QAC7C8Y,UAAQ,OAIhB,sBAAKzZ,UAAU,aAAf,UACI,uBAAOqL,QAAQ,aAAf,kBACA,uBACIhN,KAAK,OACLR,GAAG,aACHmC,UAAU,eACVW,MAAOuB,EACPoJ,SAAU,SAACP,GAAD,OAAWsO,EAAQtO,EAAMQ,OAAO5K,QAC1C8Y,UAAQ,OAIhB,sBAAKzZ,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,sBACA,uBACIhN,KAAK,QACLR,GAAG,cACHmC,UAAU,eACVW,MAAOqB,EACPsJ,SAAU,SAACP,GAAD,OAAWwO,EAAexO,EAAMQ,OAAO5K,QACjD8Y,UAAQ,OAIhB,sBAAKzZ,UAAU,aAAf,UACI,uBAAOqL,QAAQ,oBAAf,yBACA,uBACIhN,KAAK,SACLR,GAAG,oBACHmC,UAAU,eACVW,MAAOwB,EACPmJ,SAAU,SAACP,GAAD,OAAWuO,EAAcvO,EAAMQ,OAAO5K,QAChD8Y,UAAQ,OAIhB,sBAAKzZ,UAAU,aAAf,UACI,uBAAOqL,QAAQ,gBAAf,qBACA,wBACIxN,GAAG,gBACHmC,UAAU,eACVW,MAAOyB,EACPkJ,SAAU,SAACP,GAAD,OAAWyO,EAAWzO,EAAMQ,OAAO5K,QAC7C8Y,UAAQ,EALZ,SAOKC,OAAOC,OAAOC,cAAW3Z,KAAI,SAAC4Z,GAAD,OAC1B,wBAAqBlZ,MAAOkZ,EAAEpb,KAA9B,SACKob,EAAEpb,MADMob,EAAEpb,cAO3B,wBAAQZ,GAAG,eAAeQ,KAAK,SAAS2B,UAAU,qBAAlD,iCCtBT8Z,GAvEQ,SAAC,GAAiB,IAAfra,EAAc,EAAdA,QAAc,EACE8K,mBAAS,IADX,mBAC7BwP,EAD6B,KAChBC,EADgB,OAEJzP,mBAAS,IAFL,mBAE7BK,EAF6B,KAEnBqF,EAFmB,KAI9BvF,EAAQC,cACR5M,EAAW2B,cALmB,EAOEC,aAAY,SAACC,GAAD,OAAWA,EAAM8B,QAA3D+H,EAP4B,EAO5BA,MAAO0L,EAPqB,EAOrBA,UAAWnL,EAPU,EAOVA,QAE1BI,qBAAU,WACFX,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAGTgQ,IACAzK,EAAMG,QAAQ,kCACdpL,EAAQyB,KAAK,OACbnD,EzB4NuB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACrCF,EAAS,CACLM,KAAMyJ,KAF2B,2CAAN,0DyB1N5B,CAAC/J,EAAU0L,EAAOiB,EAAOjL,EAAS0V,IAYrC,OACI,qCACI,cAAC,EAAD,CAAU7V,MAAM,oBAChB,qBAAKU,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY8K,SAftB,SAACC,GACnBA,EAAMC,iBAEN,IzB4FuB4F,EyB5FjB3F,EAAW,IAAIC,SACrBD,EAASE,IAAI,cAAe4O,GAC5B9O,EAASE,IAAI,WAAYP,GAEzB7M,GzBwFuB6S,EyBxFC3F,EzBwFF,uCAAe,WAAOlN,GAAP,mBAAAE,EAAA,sEAErCF,EAAS,CAAEM,KAAMuJ,KACXlB,EAAS,CACXC,QAAS,CACL,eAAgB,qBALa,SAQdzI,IAAM2S,IAAI,0BAA2BD,EAAWlK,GARlC,gBAQ7BtI,EAR6B,EAQ7BA,KACRL,EAAS,CAAEM,KAAMwJ,GAAyBvJ,QAASF,EAAKyM,UATnB,kDAWrCtB,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAM0J,GAAsB0B,MAAO,KAAM5E,SAASzG,KAAK0G,UAZ7B,0DAAf,yDyBhFV,UACI,oBAAI9E,UAAU,YAAd,6BACA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,qBAAf,0BACA,uBACIhN,KAAK,WACLR,GAAG,qBACHmC,UAAU,eACVW,MAAOoZ,EACPzO,SAAU,SAACP,GAAD,OAAWiP,EAAejP,EAAMQ,OAAO5K,aAIzD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,qBAAf,0BACA,uBACIhN,KAAK,WACLR,GAAG,qBACHmC,UAAU,eACVW,MAAOiK,EACPU,SAAU,SAACP,GAAD,OAAWkF,EAAYlF,EAAMQ,OAAO5K,aAItD,wBAAQY,SAAUyI,EAAS3L,KAAK,SAAS2B,UAAU,qCAAnD,wCC2KTia,GAvOO,SAAC,GAAwB,IAAtBnN,EAAqB,EAArBA,MAAOrN,EAAc,EAAdA,QACtBiL,EAAQC,cACR5M,EAAW2B,cAFyB,EAmBlB6K,mBAAS,IAnBS,mBAmBnC9L,EAnBmC,KAmB7BsS,EAnB6B,OAoBhBxG,mBAAS,GApBO,mBAoBnC7L,EApBmC,KAoB5BuO,EApB4B,OAqBJ1C,mBAAS,IArBL,mBAqBnCyG,EArBmC,KAqBtBC,EArBsB,OAsBV1G,mBAAS,IAtBC,mBAsBnC2G,EAtBmC,KAsBzBC,EAtByB,OAuBhB5G,mBAAS,GAvBO,mBAuBnCzL,EAvBmC,KAuB5BsS,EAvB4B,OAwBd7G,mBAAS,IAxBK,mBAwBnC8G,EAxBmC,KAwB3BC,EAxB2B,OAyBf/G,mBAAS,IAzBM,mBAyBnC5L,EAzBmC,KAyB3B4S,EAzB2B,OA0BRhH,mBAAS,IA1BD,mBA0BnC2P,EA1BmC,KA0BxBC,EA1BwB,OA2BA5P,mBAAS,IA3BT,mBA2BnCiH,EA3BmC,KA2BpBC,EA3BoB,OA6Bf9R,aAAY,SAACC,GAAD,OAAWA,EAAMmW,kBAAhDtM,EA7BkC,EA6BlCA,MAAOlL,EA7B2B,EA6B3BA,QA7B2B,GA8BSoB,aAAY,SAACC,GAAD,OAAWA,EAAMrB,WAAxEyL,GA9BkC,GA8BlCA,QAAgBoQ,GA9BkB,GA8BzB3Q,MAAoB0L,GA9BK,GA8BLA,UAErC/K,qBAAU,WACFX,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAETiV,KACA1P,EAAMjB,MAAM2Q,IACZrc,EAASoH,OAGTgQ,KACA1V,EAAQyB,KAAK,mBACbwJ,EAAMG,QAAQ,gCACd9M,E5B8KsB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACpCF,EAAS,CACLM,KAAMqG,KAF0B,2CAAN,wD4B3KtBnG,GAAWA,EAAQC,MAAQsO,EAAMM,OAAOvP,GACxCE,EAAS6G,GAAkBkI,EAAMM,OAAOvP,MAExCkT,EAAQxS,EAAQE,MAChBwO,EAAS1O,EAAQG,OACjBuS,EAAe1S,EAAQyS,aACvBG,EAAY5S,EAAQ2S,UACpBI,EAAU/S,EAAQ8S,QAClBD,EAAS7S,EAAQO,OACjBqb,EAAa5b,EAAQI,WAE1B,CAACZ,EAAU2M,EAAOjB,EAAO2Q,GAAatN,EAAMM,OAAOvP,GAAIU,EAASkB,EAAS0V,KAuC5E,OACI,qCACI,cAAC,EAAD,CAAU7V,MAAM,mBAChB,sBAAKU,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,mBAAf,SACI,mCACI,qBAAKA,UAAU,eAAf,SACI,uBAAMA,UAAU,YAAY2R,QAAQ,sBAAsB7G,SA/C5D,SAACC,GACnBA,EAAMC,iBAEN,I5BgGsBnN,EAAIwc,E4BhGpBpP,EAAW,IAAIC,SACrBD,EAASE,IAAI,OAAQ1M,GACrBwM,EAASE,IAAI,QAASzM,GACtBuM,EAASE,IAAI,cAAe6F,GAC5B/F,EAASE,IAAI,WAAY+F,GACzBjG,EAASE,IAAI,QAASrM,GACtBmM,EAASE,IAAI,SAAUkG,GAEvB1S,EAAOwL,SAAQ,SAAC0H,GACZ5G,EAAS6G,OAAO,SAAUD,MAG9B9T,G5BoFsBF,E4BpFCU,EAAQC,I5BoFL6b,E4BpFUpP,E5BoFf,uCAAoB,WAAOlN,GAAP,mBAAAE,EAAA,sEAEzCF,EAAS,CACLM,KAAMkG,KAEJmC,EAAS,CACXC,QAAS,CACL,eAAgB,qBAPiB,SAUlBzI,IAAM2S,IAAN,gCAAmChT,GAAMwc,EAAY3T,GAVnC,gBAUjCtI,EAViC,EAUjCA,KACRL,EAAS,CACLM,KAAMmG,GACNlG,QAASF,EAAKyM,UAbuB,kDAgBzC9M,EAAS,CACLM,KAAMoG,GACNnG,QAAS,KAAMuG,SAASzG,KAAK0G,UAlBQ,0DAApB,yD4BpDD,UACI,oBAAI9E,UAAU,OAAd,4BACA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,aAAf,kBACA,uBACIhN,KAAK,OACLR,GAAG,aACHmC,UAAU,eACVW,MAAOlC,EACP6M,SAAU,SAACP,GAAD,OAAWgG,EAAQhG,EAAMQ,OAAO5K,aAGlD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,mBACA,uBACIhN,KAAK,OACLR,GAAG,cACHmC,UAAU,eACVW,MAAOjC,EACP4M,SAAU,SAACP,GAAD,OAAWkC,EAASlC,EAAMQ,OAAO5K,aAGnD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,oBAAf,yBACA,0BACIrL,UAAU,eACVnC,GAAG,oBACHoR,KAAK,IACLtO,MAAOqQ,EACP1F,SAAU,SAACP,GAAD,OAAWkG,EAAelG,EAAMQ,OAAO5K,aAGzD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,iBAAf,sBACA,wBACIrL,UAAU,eACVnC,GAAG,iBACH8C,MAAOuQ,EACP5F,SAAU,SAACP,GAAD,OAAWoG,EAAYpG,EAAMQ,OAAO5K,QAJlD,SA1Ib,CACf,cACA,UACA,UACA,cACA,aACA,OACA,QACA,gBACA,gBACA,SACA,UACA,QAoI4CV,KAAI,SAACiR,GAAD,OACZ,wBAAuBvQ,MAAOuQ,EAA9B,SACKA,GADQA,WAMzB,sBAAKlR,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,mBACA,uBACIhN,KAAK,SACLR,GAAG,cACHmC,UAAU,eACVW,MAAO7B,EACPwM,SAAU,SAACP,GAAD,OAAWqG,EAASrG,EAAMQ,OAAO5K,aAGnD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,eAAf,yBACA,uBACIhN,KAAK,OACLR,GAAG,eACHmC,UAAU,eACVW,MAAO0Q,EACP/F,SAAU,SAACP,GAAD,OAAWuG,EAAUvG,EAAMQ,OAAO5K,aAGpD,sBAAKX,UAAU,aAAf,UACI,2CACA,sBAAKA,UAAU,cAAf,UACI,uBACI3B,KAAK,OACLI,KAAK,iBACLuB,UAAU,oBACVnC,GAAG,aACHyN,SAxGlB,SAACP,GACnB,IAAMgH,EAAQC,MAAMC,KAAKlH,EAAMQ,OAAOwG,OACtCR,EAAS,IACTE,EAAiB,IACjB0I,EAAa,IAEbpI,EAAM5H,SAAQ,SAAC+H,GACX,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WAEc,IAAtBF,EAAOG,aACPf,GAAS,SAACgB,GAAD,6BAAaA,GAAb,CAAkBJ,EAAOK,YAClCf,GAAiB,SAACc,GAAD,6BAAaA,GAAb,CAAkBJ,EAAOK,cAGlDL,EAAOM,cAAcP,OA0FWQ,UAAQ,IAEZ,uBAAO1S,UAAU,oBAAoBqL,QAAQ,aAA7C,8BAKH6O,GACGA,EAAUja,KAAI,SAACqa,GAAD,OACV,qBAEIna,IAAKma,EAASzb,IACduB,IAAKka,EAASzb,IACdmB,UAAU,YACVM,MAAM,KACND,OAAO,MALFia,MAShB9I,EAAcvR,KAAI,SAAC4R,GAAD,OACf,qBACI1R,IAAK0R,EAELzR,IAAI,UACJJ,UAAU,YACVM,MAAM,KACND,OAAO,MAJFwR,SAQjB,wBACItQ,SAAUyI,GACVnM,GAAG,eACHQ,KAAK,SACL2B,UAAU,qBAJd,oCC7FjBua,GA1HO,SAAC,GAAiB,IAAf9a,EAAc,EAAdA,QAAc,EACX8K,mBAAS,IADE,mBAC5B9L,EAD4B,KACtBsS,EADsB,OAETxG,mBAAS,IAFA,mBAE5BC,EAF4B,KAErBC,EAFqB,OAGPF,mBAAS,IAHF,mBAG5B4B,EAH4B,KAGpB0M,EAHoB,OAIOtO,mBAAS,+BAJhB,mBAI5BuO,EAJ4B,KAIbC,EAJa,KAM7BrO,EAAQC,cACR5M,EAAW2B,cAETgC,EAAS/B,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAAtCD,KAT2B,EAUG/B,aAAY,SAACC,GAAD,OAAWA,EAAM8B,QAA3D+H,EAV2B,EAU3BA,MAAO0L,EAVoB,EAUpBA,UAAWnL,EAVS,EAUTA,QAE1BI,qBAAU,WACF1I,IACAqP,EAAQrP,EAAKjD,MACbgM,EAAS/I,EAAK8I,OACduO,EAAiBrX,EAAKyK,OAAOtN,MAG7B4K,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAGTgQ,IACAzK,EAAMG,QAAQ,8BACd9M,EAASuL,MAET7J,EAAQyB,KAAK,OACbnD,E3BqMsB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACpCF,EAAS,CACLM,KAAMqJ,KAF0B,2CAAN,0D2BnM3B,CAAC3J,EAAU0L,EAAOiB,EAAOjL,EAASiC,EAAMyT,IAyB3C,OACI,qCACI,cAAC,EAAD,CAAU7V,MAAM,mBAChB,qBAAKU,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY2R,QAAQ,sBAAsB7G,SA5BpD,SAACC,GACnBA,EAAMC,iBAEN,I3BiEsBiO,E2BjEhBhO,EAAW,IAAIC,SACrBD,EAASE,IAAI,OAAQ1M,GACrBwM,EAASE,IAAI,QAASX,GACtBS,EAASE,IAAI,SAAUgB,GAEvBpO,G3B4DsBkb,E2B5DChO,E3B4DF,uCAAc,WAAOlN,GAAP,mBAAAE,EAAA,sEAEnCF,EAAS,CAAEM,KAAMmJ,KACXd,EAAS,CACXC,QAAS,CACL,eAAgB,wBALW,SAQZzI,IAAM2S,IAAI,oBAAqBoI,EAAUvS,GAR7B,gBAQ3BtI,EAR2B,EAQ3BA,KACRL,EAAS,CAAEM,KAAMoJ,GAAwBnJ,QAASF,EAAKyM,UATpB,kDAWnCtB,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAMsJ,GAAqB8B,MAAO,KAAM5E,SAASzG,KAAK0G,UAZ9B,0DAAd,yD2BxCT,UACI,oBAAI9E,UAAU,YAAd,4BAEA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,kBACA,uBACIhN,KAAK,OACLR,GAAG,aACHmC,UAAU,eACVvB,KAAK,OACLkC,MAAOlC,EACP6M,SAAU,SAACP,GAAD,OAAWgG,EAAQhG,EAAMQ,OAAO5K,aAIlD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,mBACA,uBACIhN,KAAK,QACLR,GAAG,cACHmC,UAAU,eACVvB,KAAK,QACLkC,MAAO6J,EACPc,SAAU,SAACP,GAAD,OAAWN,EAASM,EAAMQ,OAAO5K,aAInD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,gBAAf,oBACA,sBAAKrL,UAAU,4BAAf,UACI,8BACI,wBAAQA,UAAU,uBAAlB,SACI,qBAAKG,IAAK2Y,EAAe9Y,UAAU,iBAAiBI,IAAI,uBAGhE,sBAAKJ,UAAU,cAAf,UACI,uBACI3B,KAAK,OACLI,KAAK,SACLuB,UAAU,oBACVnC,GAAG,aACHqb,OAAO,WACP5N,SA3Df,SAACP,GAClB,IAAMoH,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WAEc,IAAtBF,EAAOG,aACPuG,EAAU1G,EAAOK,QACjBuG,EAAiB5G,EAAOK,UAGhCL,EAAOM,cAAc1H,EAAMQ,OAAOwG,MAAM,OAoDZ,uBAAO/R,UAAU,oBAAoBqL,QAAQ,aAA7C,oCAOZ,wBAAQ9J,SAAUyI,EAAS3L,KAAK,SAAS2B,UAAU,qCAAnD,+BCHTwa,GA5GI,SAAC,GAAwB,IAAtB1N,EAAqB,EAArBA,MAAOrN,EAAc,EAAdA,QAAc,EACf8K,mBAAS,IADM,mBAChC9L,EADgC,KAC1BsS,EAD0B,OAEbxG,mBAAS,IAFI,mBAEhCC,EAFgC,KAEzBC,EAFyB,OAGfF,mBAAS,IAHM,mBAGhC8B,EAHgC,KAG1BoO,EAH0B,KAKjC/P,EAAQC,cACR5M,EAAW2B,cAETgC,EAAS/B,aAAY,SAACC,GAAD,OAAWA,EAAM8a,eAAtChZ,KAR+B,EASV/B,aAAY,SAACC,GAAD,OAAWA,EAAM8B,QAAlD+H,EAT+B,EAS/BA,MAAO0L,EATwB,EASxBA,UAEf/K,qBAAU,W5BoKgB,IAACvM,E4BnKnB6D,GAAQA,EAAKlD,MAAQsO,EAAMM,OAAOvP,GAClCE,G5BkKmBF,E4BlKKiP,EAAMM,OAAOvP,G5BkKnB,uCAAQ,WAAOE,GAAP,iBAAAE,EAAA,sEAE9BF,EAAS,CAAEM,KAAM4K,KAFa,SAGP/K,IAAMC,IAAN,6BAAgCN,IAHzB,gBAGtBO,EAHsB,EAGtBA,KACRL,EAAS,CAAEM,KAAM6K,GAAsB5K,QAASF,EAAKsD,OAJvB,gDAM9B6H,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAM8K,GAAmBM,MAAO,KAAM5E,SAASzG,KAAK0G,UAPjC,yDAAR,yD4BhKlBiM,EAAQrP,EAAKjD,MACbgM,EAAS/I,EAAK8I,OACdiQ,EAAQ/Y,EAAK2K,OAGb5C,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAGTgQ,IACAzK,EAAMG,QAAQ,8BACdpL,EAAQyB,KAAK,gBACbnD,E5B+LmB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACjCF,EAAS,CACLM,KAAM6J,KAFuB,2CAAN,0D4B7LxB,CAACnK,EAAU0L,EAAOiB,EAAOjL,EAASiC,EAAMyT,EAAWrI,EAAMM,OAAOvP,KAanE,OACI,qCACI,cAAC,EAAD,CAAUyB,MAAM,gBAChB,sBAAKU,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,mBAAf,SACI,mCACI,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,uBAAMA,UAAU,YAAY8K,SAtBlC,SAACC,GACnBA,EAAMC,iBAEN,I5BuJmBnN,EAAIob,E4BvJjBhO,EAAW,IAAIC,SACrBD,EAASE,IAAI,OAAQ1M,GACrBwM,EAASE,IAAI,QAASX,GACtBS,EAASE,IAAI,OAAQkB,GAErBtO,G5BkJmBF,E4BlJC6D,EAAKlD,I5BkJFya,E4BlJOhO,E5BkJZ,uCAAkB,WAAOlN,GAAP,mBAAAE,EAAA,sEAEpCF,EAAS,CAAEM,KAAM2J,KACXtB,EAAS,CACXC,QAAS,CACL,eAAgB,qBALY,SAQbzI,IAAM2S,IAAN,6BAAgChT,GAAMob,EAAUvS,GARnC,gBAQ5BtI,EAR4B,EAQ5BA,KACRL,EAAS,CAAEM,KAAM4J,GAAqB3J,QAASF,EAAKyM,UAThB,kDAWpCtB,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAM8J,GAAkBsB,MAAO,KAAM5E,SAASzG,KAAK0G,UAZ1B,0DAAlB,yD4BpIM,UACI,oBAAI9E,UAAU,YAAd,yBACA,sBAAKA,UAAU,aAAf,UACI,uBAAOqL,QAAQ,aAAf,kBACA,uBACIhN,KAAK,OACLR,GAAG,aACHmC,UAAU,eACVvB,KAAK,OACLkC,MAAOlC,EACP6M,SAAU,SAACP,GAAD,OAAWgG,EAAQhG,EAAMQ,OAAO5K,aAIlD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,cAAf,mBACA,uBACIhN,KAAK,QACLR,GAAG,cACHmC,UAAU,eACVvB,KAAK,QACLkC,MAAO6J,EACPc,SAAU,SAACP,GAAD,OAAWN,EAASM,EAAMQ,OAAO5K,aAInD,sBAAKX,UAAU,aAAf,UACI,uBAAOqL,QAAQ,aAAf,kBAEA,yBACIxN,GAAG,aACHmC,UAAU,eACVvB,KAAK,OACLkC,MAAO0L,EACPf,SAAU,SAACP,GAAD,OAAW0P,EAAQ1P,EAAMQ,OAAO5K,QAL9C,UAOI,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,yBAIR,wBAAQtC,KAAK,SAAS2B,UAAU,qCAAhC,sCCMrB2a,GAlGG,SAAC,GAAiB,IAAflb,EAAc,EAAdA,QACXiL,EAAQC,cACR5M,EAAW2B,cAFc,EAIQC,aAAY,SAACC,GAAD,OAAWA,EAAMqK,YAA5DD,EAJuB,EAIvBA,QAASP,EAJc,EAIdA,MAJc,IAIPE,aAJO,MAIC,GAJD,EAKvBsJ,EAActT,aAAY,SAACC,GAAD,OAAWA,EAAM8B,QAA3CuR,UAER7I,qBAAU,WACNrM,EAAS2L,MACLD,IACAiB,EAAMjB,MAAMA,GACZ1L,EAASoH,OAGT8N,IACAvI,EAAMG,QAAQ,6BACdpL,EAAQyB,KAAK,gBACbnD,E7BmNmB,uCAAM,WAAOA,GAAP,SAAAE,EAAA,sDACjCF,EAAS,CACLM,KAAMiK,KAFuB,2CAAN,0D6BjNxB,CAACvK,EAAU2M,EAAOjB,EAAOhK,EAASwT,IAErC,IAAM2H,EAAoB,SAAC/c,GACvBE,E7BiLkB,SAACF,GAAD,8CAAQ,WAAOE,GAAP,iBAAAE,EAAA,sEAE1BF,EAAS,CAAEM,KAAM+J,KAFS,SAGHlK,IAAMiV,OAAN,6BAAmCtV,IAHhC,gBAGlBO,EAHkB,EAGlBA,KACRL,EAAS,CAAEM,KAAMgK,GAAqB/J,QAASF,EAAKyM,UAJ1B,gDAM1BtB,QAAQC,IAAR,MACAzL,EAAS,CAAEM,KAAMkK,GAAkBkB,MAAO,KAAM5E,SAASzG,KAAK0G,UAPpC,yDAAR,sD6BjLT+V,CAAWhd,KAsDxB,OACI,qCACI,cAAC,EAAD,CAAUyB,MAAM,cAChB,sBAAKU,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,mBAAf,SACI,qCACI,oBAAIA,UAAU,OAAd,uBACCgK,EACG,cAAC,EAAD,IAEA,cAAC,KAAD,CAAc5L,KAhErB,WACb,IAAMA,EAAO,CACTyQ,QAAS,CACL,CACIC,MAAO,UACPC,MAAO,KACPC,KAAM,OAEV,CACIF,MAAO,OACPC,MAAO,OACPC,KAAM,OAEV,CACIF,MAAO,QACPC,MAAO,QACPC,KAAM,OAEV,CACIF,MAAO,OACPC,MAAO,OACPC,KAAM,OAEV,CACIF,MAAO,UACPC,MAAO,YAGfE,KAAM,IAoBV,OAlBAtF,EAAMQ,SAAQ,SAACzI,GACXtD,EAAK6Q,KAAK/N,KAAK,CACXrD,GAAI6D,EAAKlD,IACTC,KAAMiD,EAAKjD,KACX+L,MAAO9I,EAAK8I,MACZ6B,KAAM3K,EAAK2K,KACXqD,QACI,qCACI,cAAC,IAAD,CAAMnP,GAAE,sBAAiBmB,EAAKlD,KAAOwB,UAAU,4BAA/C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQA,UAAU,gCAAgCQ,QAAS,kBAAMoa,EAAkBlZ,EAAKlD,MAAxF,SACI,mBAAGwB,UAAU,0BAM1B5B,EAgBiC0c,GAAY9a,UAAU,OAAO4P,UAAQ,EAACC,SAAO,EAACC,OAAK,gB,SCCpFiL,OA9Df,WACI,IAAMhd,EAAW2B,cADN,EAG6B6K,mBAAS,IAHtC,mBAGJyQ,EAHI,KAGUC,EAHV,OAKetb,aAAY,SAACC,GAAD,OAAWA,EAAM+B,QAA/CD,EALG,EAKHA,KAAMsI,EALH,EAKGA,QAad,OAXAI,qBAAU,WAAM,4CAGZ,8BAAAnM,EAAA,sEAC2BC,IAAMC,IAAI,oBADrC,gBACYC,EADZ,EACYA,KACR6c,EAAgB7c,EAAK8c,cAFzB,4CAHY,sBACZnd,EAASuL,MADG,mCAQZ6R,KACD,CAACpd,IAGA,cAAC,IAAD,UACI,sBAAKiC,UAAU,MAAf,UACI,cAAC,GAAD,IACA,sBAAKA,UAAU,4BAAf,UACI,cAAC,IAAD,CAAOob,KAAK,IAAI5C,UAAW3L,GAAMwO,OAAK,IACtC,cAAC,IAAD,CAAOD,KAAK,mBAAmB5C,UAAW3L,KAC1C,cAAC,IAAD,CAAOuO,KAAK,eAAe5C,UAAW7C,KACtC,cAAC,IAAD,CAAOyF,KAAK,SAAS5C,UAAWzI,KAChC,cAAC,IAAD,CAAOqL,KAAK,YAAY5C,UAAWG,KACnC,cAAC,IAAD,CAAOyC,KAAK,mBAAmB5C,UAAWlO,KAC1C,cAAC,IAAD,CAAO8Q,KAAK,yBAAyB5C,UAAWjI,KAChD,cAAC,IAAD,CAAO6K,KAAK,QAAQ5C,UAAWhZ,IAC/B,cAAC,GAAD,CAAgB4b,KAAK,MAAM5C,UAAWN,GAASmD,OAAK,IACpD,cAAC,GAAD,CAAgBD,KAAK,aAAa5C,UAAW+B,KAC7C,cAAC,GAAD,CAAgBa,KAAK,mBAAmB5C,UAAWsB,KACnD,cAAC,GAAD,CAAgBsB,KAAK,YAAY5C,UAAWW,KAC5C,cAAC,GAAD,CAAgBiC,KAAK,WAAW5C,UAAWhX,IAC3C,cAAC,GAAD,CAAgB4Z,KAAK,WAAW5C,UAAWnF,KAC3C,cAAC,GAAD,CAAgB+H,KAAK,aAAa5C,UAAW7J,KAC7C,cAAC,GAAD,CAAgByM,KAAK,aAAa5C,UAAW7F,KAE5CqI,GACG,cAAC,YAAD,CAAUrH,OAAQ2H,aAAWN,GAA7B,SACI,cAAC,GAAD,CAAgBI,KAAK,WAAW5C,UAAW9E,UAIvD,cAAC,GAAD,CAAgB0H,KAAK,aAAa9C,SAAS,EAAME,UAAW5O,KAC5D,cAAC,GAAD,CAAgBwR,KAAK,kBAAkB9C,SAAS,EAAME,UAAWV,KACjE,cAAC,GAAD,CAAgBsD,KAAK,iBAAiB9C,SAAS,EAAME,UAAW1H,GAAYuK,OAAK,IACjF,cAAC,GAAD,CAAgBD,KAAK,qBAAqB9C,SAAS,EAAME,UAAWyB,KACpE,cAAC,GAAD,CAAgBmB,KAAK,gBAAgB9C,SAAS,EAAME,UAAWxF,KAC/D,cAAC,GAAD,CAAgBoI,KAAK,mBAAmB9C,SAAS,EAAME,UAAWvD,KAClE,cAAC,GAAD,CAAgBmG,KAAK,eAAe9C,SAAS,EAAME,UAAWmC,KAC9D,cAAC,GAAD,CAAgBS,KAAK,kBAAkB9C,SAAS,EAAME,UAAWgC,KACjE,cAAC,GAAD,CAAgBY,KAAK,iBAAiB9C,SAAS,EAAME,UAAWlB,MAE9DtN,GAA0B,WAAX,OAAJtI,QAAI,IAAJA,OAAA,EAAAA,EAAM2K,OAAoB,cAAC,GAAD,U,+CCxEjDkP,GAAUC,2BAAgB,CAC5BxW,SCY2B,WAAuC,IAAtCpF,EAAqC,uDAA7B,CAAEoF,SAAU,IAAMyW,EAAW,uCACjE,OAAQA,EAAOpd,MACX,KAAKsE,EACL,KAAKG,EACD,MAAO,CACHkH,SAAS,EACThF,SAAU,IAGlB,KAAKpC,EACD,MAAO,CACHoH,SAAS,EACThF,SAAUyW,EAAOnd,QAAQ0G,SACzBkI,cAAeuO,EAAOnd,QAAQod,aAC9BvO,eAAgBsO,EAAOnd,QAAQ6O,gBAGvC,KAAKpK,EACD,MAAO,CACHiH,SAAS,EACThF,SAAUyW,EAAOnd,SAGzB,KAAKuE,EACL,KAAKG,EACD,MAAO,CACHgH,SAAS,EACTP,MAAOgS,EAAOnd,SAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IDhDfrB,QCqK0B,WAAsC,IAArCqB,EAAoC,uDAA5B,CAAErB,QAAS,IAAMkd,EAAW,uCAC/D,OAAQA,EAAOpd,MACX,KAAK0F,EACL,KAAKQ,GACD,OAAO,2BACA3E,GADP,IAEIoK,SAAS,IAGjB,KAAKhG,EACD,OAAO,2BACApE,GADP,IAEIoK,SAAS,EACTiJ,UAAWwI,EAAOnd,UAG1B,KAAKkG,GACD,OAAO,2BACA5E,GADP,IAEIoK,SAAS,EACTmL,UAAWsG,EAAOnd,UAG1B,KAAK2F,EACL,KAAKQ,GACD,OAAO,2BACA7E,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAK4F,EACD,OAAO,2BACAtE,GADP,IAEIqT,WAAW,IAGnB,KAAKvO,GACD,OAAO,2BACA9E,GADP,IAEIuV,WAAW,IAGnB,KAAKxQ,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IDtNfmW,eCoDgC,WAAsC,IAArCnW,EAAoC,uDAA5B,CAAErB,QAAS,IAAMkd,EAAW,uCACrE,OAAQA,EAAOpd,MACX,KAAK4E,EACD,OAAO,2BACArD,GADP,IAEIoK,SAAS,IAGjB,KAAK9G,EACD,MAAO,CACH8G,SAAS,EACTzL,QAASkd,EAAOnd,SAGxB,KAAK6E,EACD,OAAO,2BACAvD,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,ID/Ef6X,eC0NiC,WAAsC,IAArC7X,EAAoC,uDAA5B,CAAEsF,QAAS,IAAMuW,EAAW,uCACtE,OAAQA,EAAOpd,MACX,KAAKuF,EACD,OAAO,2BACAhE,GADP,IAEIoK,SAAS,IAGjB,KAAKnG,EACD,MAAO,CACHmG,SAAS,EACT9E,QAASuW,EAAOnd,SAGxB,KAAKwF,EACD,MAAO,CACHkG,SAAS,EACTP,MAAOgS,EAAOnd,SAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IDpPf+B,KEeuB,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAE8B,KAAM,IAAM+Z,EAAW,uCACzD,OAAQA,EAAOpd,MACX,KAAK0I,GACL,KAAKG,GACL,KAAKG,GACD,MAAO,CACH2C,SAAS,EACTkG,iBAAiB,GAGzB,KAAKlJ,GACL,KAAKG,GACL,KAAKG,GACD,OAAO,2BACA1H,GADP,IAEIoK,SAAS,EACTkG,iBAAiB,EACjBxO,KAAM+Z,EAAOnd,UAGrB,KAAK8K,GACD,MAAO,CACHY,SAAS,EACTkG,iBAAiB,EACjBxO,KAAM,MAGd,KAAK2H,GACD,OAAO,2BACAzJ,GADP,IAEI6J,MAAOgS,EAAOnd,UAGtB,KAAK2I,GACL,KAAKG,GACL,KAAKG,GACD,OAAO,2BACA3H,GADP,IAEIoK,SAAS,EACTkG,iBAAiB,EACjBxO,KAAM,KACN+H,MAAOgS,EAAOnd,UAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IFjEf8B,KEsEuB,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAI6b,EAAW,uCAC/C,OAAQA,EAAOpd,MACX,KAAKmJ,GACL,KAAKI,GACL,KAAKI,GACL,KAAKI,GACD,OAAO,2BACAxI,GADP,IAEIoK,SAAS,IAGjB,KAAKvC,GACL,KAAKI,GACL,KAAKI,GACD,OAAO,2BACArI,GADP,IAEIoK,SAAS,EACTmL,UAAWsG,EAAOnd,UAG1B,KAAK+J,GACD,OAAO,2BACAzI,GADP,IAEIoK,SAAS,EACTiJ,WAAW,IAGnB,KAAKvL,GACL,KAAKI,GACL,KAAKI,GACD,OAAO,2BACAtI,GADP,IAEIuV,WAAW,IAGnB,KAAK7M,GACD,OAAO,2BACA1I,GADP,IAEIqT,WAAW,IAGnB,KAAKtL,GACL,KAAKI,GACL,KAAKI,GACL,KAAKI,GACD,OAAO,2BACA3I,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IF/HfqK,SE+K2B,WAAoC,IAAnCrK,EAAkC,uDAA1B,CAAE+J,MAAO,IAAM8R,EAAW,uCAC9D,OAAQA,EAAOpd,MACX,KAAKyK,GACD,OAAO,2BACAlJ,GADP,IAEIoK,SAAS,IAGjB,KAAKjB,GACD,OAAO,2BACAnJ,GADP,IAEIoK,SAAS,EACTL,MAAO8R,EAAOnd,UAGtB,KAAK0K,GACD,OAAO,2BACApJ,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IF3Mf8a,YEgN8B,WAAmC,IAAlC9a,EAAiC,uDAAzB,CAAE8B,KAAM,IAAM+Z,EAAW,uCAChE,OAAQA,EAAOpd,MACX,KAAK4K,GACD,OAAO,2BACArJ,GADP,IAEIoK,SAAS,IAGjB,KAAKd,GACD,OAAO,2BACAtJ,GADP,IAEIoK,SAAS,EACTtI,KAAM+Z,EAAOnd,UAGrB,KAAK6K,GACD,OAAO,2BACAvJ,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IF5OfgL,SEkI2B,WAAyB,IAAxBhL,EAAuB,uDAAf,GAAI6b,EAAW,uCACnD,OAAQA,EAAOpd,MACX,KAAKmK,GACL,KAAKG,GACD,OAAO,2BACA/I,GADP,IAEIoK,SAAS,EACTP,MAAO,OAGf,KAAKhB,GACD,OAAO,2BACA7I,GADP,IAEIoK,SAAS,EACTlF,QAAS2W,EAAOnd,UAGxB,KAAKsK,GACD,OAAO,2BACAhJ,GADP,IAEIiL,QAAS4Q,EAAOnd,UAGxB,KAAKoK,GACL,KAAKG,GACD,OAAO,2BACAjJ,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IFvKfT,KG/BuB,WAA0D,IAAzDS,EAAwD,uDAAhD,CAAER,UAAW,GAAIqC,aAAc,IAAMga,EAAW,uCAChF,OAAQA,EAAOpd,MACX,KAAKZ,EACD,IAAMyC,EAAOub,EAAOnd,QACdqd,EAAe/b,EAAMR,UAAUwc,MAAK,SAACC,GAAD,OAAOA,EAAEtd,UAAY2B,EAAK3B,WACpE,OAAIod,EACO,2BACA/b,GADP,IAEIR,UAAWQ,EAAMR,UAAUa,KAAI,SAAC4b,GAAD,OAAQA,EAAEtd,UAAYod,EAAapd,QAAU2B,EAAO2b,OAGhF,2BACAjc,GADP,IAEIR,UAAU,GAAD,oBAAMQ,EAAMR,WAAZ,CAAuBc,MAI5C,KAAKxC,EACD,OAAO,2BACAkC,GADP,IAEIR,UAAWQ,EAAMR,UAAU0c,QAAO,SAACD,GAAD,OAAOA,EAAEtd,UAAYkd,EAAOnd,aAGtE,KAAKX,EACD,OAAO,2BACAiC,GADP,IAEI6B,aAAcga,EAAOnd,UAG7B,QACI,OAAOsB,IHEfkK,OIVyB,WAAyB,IAAxBlK,EAAuB,uDAAf,GAAI6b,EAAW,uCACjD,OAAQA,EAAOpd,MACX,KAAK+G,GACD,OAAO,2BACAxF,GADP,IAEIoK,SAAS,IAGjB,KAAK3E,GACD,MAAO,CACH2E,SAAS,EACTvD,MAAOgV,EAAOnd,SAGtB,KAAKgH,GACD,MAAO,CACH0E,SAAS,EACTP,MAAOgS,EAAOnd,SAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IJhBf6G,MImHwB,WAAyB,IAAxB7G,EAAuB,uDAAf,GAAI6b,EAAW,uCAChD,OAAQA,EAAOpd,MACX,KAAKwH,GACL,KAAKI,GACD,OAAO,2BACArG,GADP,IAEIoK,SAAS,IAGjB,KAAKlE,GACD,OAAO,2BACAlG,GADP,IAEIoK,SAAS,EACTmL,UAAWsG,EAAOnd,UAG1B,KAAK4H,GACD,OAAO,2BACAtG,GADP,IAEIoK,SAAS,EACTiJ,UAAWwI,EAAOnd,UAG1B,KAAKyH,GACL,KAAKI,GACD,OAAO,2BACAvG,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAK8H,GACD,OAAO,2BACAxG,GADP,IAEIqT,WAAW,IAGnB,KAAKjN,GACD,OAAO,2BACApG,GADP,IAEIuV,WAAW,IAGnB,KAAKxQ,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IJpKfgP,SIoB2B,WAAqC,IAApChP,EAAmC,uDAA3B,CAAEkK,OAAQ,IAAM2R,EAAW,uCAC/D,OAAQA,EAAOpd,MACX,KAAKkH,GACD,MAAO,CACHyE,SAAS,GAGjB,KAAKxE,GACD,MAAO,CACHwE,SAAS,EACTF,OAAQ2R,EAAOnd,SAGvB,KAAKmH,GACD,MAAO,CACHuE,SAAS,EACTP,MAAOgS,EAAOnd,SAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IJ7CfgT,aIkD+B,WAAoC,IAAnChT,EAAkC,uDAA1B,CAAE6G,MAAO,IAAMgV,EAAW,uCAClE,OAAQA,EAAOpd,MACX,KAAKgI,GACD,MAAO,CACH2D,SAAS,GAGjB,KAAK1D,GACD,MAAO,CACH0D,SAAS,EACTvD,MAAOgV,EAAOnd,SAGtB,KAAKiI,GACD,MAAO,CACHyD,SAAS,EACTP,MAAOgS,EAAOnd,SAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IJ3EfiK,UIgF4B,WAAqC,IAApCjK,EAAmC,uDAA3B,CAAEkK,OAAQ,IAAM2R,EAAW,uCAChE,OAAQA,EAAOpd,MACX,KAAKqH,GACD,MAAO,CACHsE,SAAS,GAGjB,KAAKrE,GACD,MAAO,CACHqE,SAAS,EACTF,OAAQ2R,EAAOnd,QAAQwL,OACvBC,YAAa0R,EAAOnd,QAAQyL,aAGpC,KAAKnE,GACD,MAAO,CACHoE,SAAS,EACTP,MAAOgS,EAAOnd,SAGtB,KAAKqG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IJ1GfoW,UCwE4B,WAAsC,IAArCpW,EAAoC,uDAA5B,CAAErB,QAAS,IAAMkd,EAAW,uCACjE,OAAQA,EAAOpd,MACX,KAAK+E,EACD,OAAO,2BACAxD,GADP,IAEIoK,SAAS,IAGjB,KAAK3G,EACD,MAAO,CACH2G,SAAS,EACTa,QAAS4Q,EAAOnd,SAGxB,KAAKgF,EACD,OAAO,2BACA1D,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAKiF,EACD,OAAO,2BACA3D,GADP,IAEIiL,SAAS,IAGjB,KAAKlG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IDzGf8R,WC8G6B,WAAsC,IAArC9R,EAAoC,uDAA5B,CAAErB,QAAS,IAAMkd,EAAW,uCAClE,OAAQA,EAAOpd,MACX,KAAKmF,EACD,OAAO,2BACA5D,GADP,IAEIoK,SAAS,IAGjB,KAAKvG,EACD,MAAO,CACHuG,SAAS,EACTa,QAAS4Q,EAAOnd,QAAQuM,QACxBtM,QAASkd,EAAOnd,QAAQC,SAGhC,KAAKmF,EACD,OAAO,2BACA9D,GADP,IAEIoK,SAAS,EACTP,MAAOgS,EAAOnd,UAGtB,KAAKqF,EACD,OAAO,2BACA/D,GADP,IAEIiL,SAAS,IAGjB,KAAKlG,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,IDhJf4V,OC4OyB,WAAyB,IAAxB5V,EAAuB,uDAAf,GAAI6b,EAAW,uCACjD,OAAQA,EAAOpd,MACX,KAAK8F,EACD,OAAO,2BACAvE,GADP,IAEIoK,SAAS,IAGjB,KAAK5F,EACD,MAAO,CACH4F,SAAS,EACTiJ,UAAWwI,EAAOnd,SAG1B,KAAK+F,GACD,MAAO,CACH2F,SAAS,EACTP,MAAOgS,EAAOnd,SAGtB,KAAKgG,GACD,MAAO,CACH0F,SAAS,EACTiJ,WAAW,GAGnB,KAAKtO,GACD,OAAO,2BACA/E,GADP,IAEI6J,MAAO,OAGf,QACI,OAAO7J,MD1Qbmc,GAAe,CACjB5c,KAAM,CACFC,UAAWL,aAAakV,QAAQ,aAAehV,KAAK+U,MAAMjV,aAAakV,QAAQ,cAAgB,GAC/FxS,aAAc1C,aAAakV,QAAQ,gBAAkBhV,KAAK+U,MAAMjV,aAAakV,QAAQ,iBAAmB,KAI1G+H,GAAc,CAACC,MAINC,GAFDC,uBAAYZ,GAASQ,GAAcK,+BAAoBC,mBAAe,WAAf,EAAmBL,MK5ClF1I,GAAU,CACZgJ,QAAS,IACTC,SAAUC,IAAUC,cACpBC,UAAWC,IAAYC,OAG3BC,KAAS9Q,OACL,cAAC,IAAD,CAAUmQ,MAAOA,GAAjB,SACI,cAAC,IAAD,yBAAeY,SAAUC,KAAmBzJ,IAA5C,aACI,cAAC,GAAD,SAGRgB,SAAS0I,eAAe,W","file":"static/js/main.c11764fb.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_ITEM_FROM_CART = 'REMOVE_ITEM_FROM_CART';\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO';\n\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/v1/product/${id}`);\n\n    dispatch({\n        type: ADD_TO_CART,\n        payload: {\n            product: data.product._id,\n            name: data.product.name,\n            price: data.product.price,\n            images: [\n                {\n                    public_id: data.product.images[0].public_id,\n                    url: data.product.images[0].url,\n                },\n            ],\n            stock: data.product.stock,\n            quantity,\n        },\n    });\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\n    dispatch({\n        type: REMOVE_ITEM_FROM_CART,\n        payload: id,\n    });\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingInfo = (data) => async (dispatch) => {\n    dispatch({ type: SAVE_SHIPPING_INFO, payload: data });\n\n    localStorage.setItem('shippingInfo', JSON.stringify(data));\n};\n","import { Helmet } from 'react-helmet';\nimport React from 'react';\n\nconst MetaData = ({ title }) => {\n    return (\n        <Helmet>\n            <title>{`${title} - Shopit`}</title>\n        </Helmet>\n    );\n};\n\nexport default MetaData;\n","import { addItemToCart, removeItemFromCart } from '../../store/actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport MetaData from '../common/MetaData';\nimport React from 'react';\n\nconst Cart = ({ history }) => {\n    const dispatch = useDispatch();\n    const { cartItems } = useSelector((state) => state.cart);\n\n    const decreaseQty = (id, quantity) => {\n        const newQty = quantity - 1;\n        if (newQty <= 0) {\n            return;\n        }\n\n        dispatch(addItemToCart(id, newQty));\n    };\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n        if (newQty > stock) {\n            return;\n        }\n\n        dispatch(addItemToCart(id, newQty));\n    };\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id));\n    };\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping');\n    };\n\n    return (\n        <>\n            {cartItems.length === 0 ? (\n                <h2 className=\"mt-5\">Your cart is empty</h2>\n            ) : (\n                <>\n                    <MetaData title=\"Your Cart\" />\n                    <h2 className=\"mt-5\">\n                        Your Cart: <b>{cartItems.length} items</b>\n                    </h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n                            {cartItems.map((item) => (\n                                <div key={item.product}>\n                                    <hr />\n                                    <div className=\"cart-item\">\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.images[0].url} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-5 col-lg-3\">\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p id=\"card_item_price\">${item.price}</p>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span\n                                                        className=\"btn btn-danger minus\"\n                                                        onClick={() => decreaseQty(item.product, item.quantity)}\n                                                    >\n                                                        -\n                                                    </span>\n                                                    <input\n                                                        type=\"number\"\n                                                        className=\"form-control count d-inline\"\n                                                        value={item.quantity}\n                                                        readOnly\n                                                    />\n\n                                                    <span\n                                                        className=\"btn btn-primary plus\"\n                                                        onClick={() =>\n                                                            increaseQty(item.product, item.quantity, item.stock)\n                                                        }\n                                                    >\n                                                        +\n                                                    </span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                                                <i\n                                                    id=\"delete_cart_item\"\n                                                    className=\"fa fa-trash btn btn-danger\"\n                                                    onClick={() => removeCartItemHandler(item.product)}\n                                                ></i>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </div>\n                            ))}\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>\n                                    Subtotal:{' '}\n                                    <span className=\"order-summary-values\">\n                                        {cartItems.reduce((acc, item) => acc + Number(item.quantity), 0)} (Units)\n                                    </span>\n                                </p>\n                                <p>\n                                    Est. total:{' '}\n                                    <span className=\"order-summary-values\">\n                                        $\n                                        {cartItems\n                                            .reduce((acc, item) => acc + item.quantity * item.price, 0)\n                                            .toFixed(2)}\n                                    </span>\n                                </p>\n\n                                <hr />\n                                <button\n                                    id=\"checkout_btn\"\n                                    className=\"btn btn-primary btn-block\"\n                                    onClick={checkoutHandler}\n                                >\n                                    Check out\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Cart;\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst CheckoutSteps = ({ shippingStep, confirmOrderStep, paymentStep }) => {\n    return (\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\n            {shippingStep ? (\n                <Link to=\"/shipping\" className=\"float-right\">\n                    <div className=\"triangle2-active\"></div>\n                    <div className=\"step active-step\">Shipping</div>\n                    <div className=\"triangle-active\"></div>\n                </Link>\n            ) : (\n                <Link to=\"#\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Shipping</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>\n            )}\n\n            {confirmOrderStep ? (\n                <Link to=\"/confirm\" className=\"float-right\">\n                    <div className=\"triangle2-active\"></div>\n                    <div className=\"step active-step\">Confirm Order</div>\n                    <div className=\"triangle-active\"></div>\n                </Link>\n            ) : (\n                <Link to=\"#\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Confirm Order</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>\n            )}\n\n            {paymentStep ? (\n                <Link to=\"/payment\" className=\"float-right\">\n                    <div className=\"triangle2-active\"></div>\n                    <div className=\"step active-step\">Payment</div>\n                    <div className=\"triangle-active\"></div>\n                </Link>\n            ) : (\n                <Link to=\"#\" disabled>\n                    <div className=\"triangle2-incomplete\"></div>\n                    <div className=\"step incomplete\">Payment</div>\n                    <div className=\"triangle-incomplete\"></div>\n                </Link>\n            )}\n        </div>\n    );\n};\n\nexport default CheckoutSteps;\n","import CheckoutSteps from './CheckoutSteps';\nimport { Link } from 'react-router-dom';\nimport MetaData from '../common/MetaData';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst ConfirmOrder = ({ history }) => {\n    const { cartItems, shippingInfo } = useSelector((state) => state.cart);\n    const { user } = useSelector((state) => state.auth);\n\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    const shippingPrice = itemsPrice > 200 ? 0 : 25;\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2));\n    const totalPrice = itemsPrice + shippingPrice + taxPrice;\n\n    const proceedToPayment = () => {\n        const data = {\n            itemsPrice: itemsPrice.toFixed(2),\n            shippingPrice,\n            taxPrice,\n            totalPrice,\n        };\n\n        sessionStorage.setItem('orderInfo', JSON.stringify(data));\n        history.push('/payment');\n    };\n\n    return (\n        <>\n            <MetaData title=\"Confirm Order\" />\n            <CheckoutSteps shippingStep confirmOrderStep />\n\n            <div className=\"row d-flex justify-content-between\">\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n                    <h4 className=\"mb-3\">Shipping Info</h4>\n                    <p>\n                        <b>Name: </b>\n                        {user?.name}\n                    </p>\n                    <p>\n                        <b>Phone: </b> {shippingInfo.phoneNumber}\n                    </p>\n                    <p className=\"mb-4\">\n                        <b>Address: </b>{' '}\n                        {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}\n                    </p>\n                    <hr />\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\n\n                    {cartItems.map((item) => (\n                        <div key={item.product}>\n                            <hr />\n                            <div className=\"cart-item my-1\">\n                                <div className=\"row\">\n                                    <div className=\"col-4 col-lg-2\">\n                                        <img src={item.images[0].url} alt=\"Laptop\" height=\"45\" width=\"65\" />\n                                    </div>\n                                    <div className=\"col-5 col-lg-6\">\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </div>\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n                                        <p>\n                                            {item.quantity} x ${item.price} ={' '}\n                                            <b>${(item.quantity * item.price).toFixed(2)}</b>\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <hr />\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"col-12 col-lg-3 my-4\">\n                    <div id=\"order_summary\">\n                        <h4>Order Summary</h4>\n                        <hr />\n                        <p>\n                            Subtotal: <span className=\"order-summary-values\">${itemsPrice}</span>\n                        </p>\n                        <p>\n                            Shipping: <span className=\"order-summary-values\">${shippingPrice}</span>\n                        </p>\n                        <p>\n                            Tax: <span className=\"order-summary-values\">${taxPrice}</span>\n                        </p>\n                        <hr />\n                        <p>\n                            Total: <span className=\"order-summary-values\">${totalPrice}</span>\n                        </p>\n                        <hr />\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={proceedToPayment}>\n                            Proceed to Payment\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ConfirmOrder;\n","import React from 'react';\n\nconst Loader = () => {\n    return <div className=\"loader\"></div>;\n};\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst Sidebar = () => {\n    return (\n        <div className=\"sidebar-wrapper\">\n            <nav id=\"sidebar\">\n                <ul className=\"list-unstyled components\">\n                    <li>\n                        <Link to=\"/dashboard\">\n                            <i className=\"fa fa-tachometer-alt\"></i> Dashboard\n                        </Link>\n                    </li>\n                    <li>\n                        <a\n                            href=\"#productSubmenu\"\n                            data-toggle=\"collapse\"\n                            aria-expanded=\"false\"\n                            className=\"dropdown-toggle\"\n                        >\n                            <i className=\"fa fa-product-hunt\"></i> Products\n                        </a>\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\n                            <li>\n                                <Link to=\"/admin/products\">\n                                    <i className=\"fa fa-clipboard-list\"></i> All\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to=\"/admin/product\">\n                                    <i className=\"fa fa-plus\"></i> Create\n                                </Link>\n                            </li>\n                        </ul>\n                    </li>\n                    <li>\n                        <Link to=\"/admin/orders\">\n                            <i className=\"fa fa-shopping-basket\"></i> Orders\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/admin/users\">\n                            <i className=\"fa fa-users\"></i> Users\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/admin/reviews\">\n                            <i className=\"fa fa-star\"></i> Reviews\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Sidebar;\n","import axios from 'axios';\n\nexport const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST';\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS';\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL';\n\nexport const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST';\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS';\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST';\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS';\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL';\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET';\n\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST';\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS';\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL';\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET';\n\nexport const ALL_REVIEWS_REQUEST = 'ALL_REVIEWS_REQUEST';\nexport const ALL_REVIEWS_SUCCESS = 'ALL_REVIEWS_SUCCESS';\nexport const ALL_REVIEWS_FAIL = 'ALL_REVIEWS_FAIL';\n\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST';\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS';\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL';\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET';\n\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST';\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS';\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL';\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET';\n\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST';\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS';\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL';\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET';\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const getProducts = (keyword = '', price, currentPage = 1) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ALL_PRODUCTS_REQUEST,\n        });\n        const link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}`;\n        const { data } = await axios.get(link);\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST,\n        });\n        const { data } = await axios.get(`/api/v1/product/${id}`);\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: NEW_REVIEW_REQUEST,\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const { data } = await axios.put('/api/v1/review', reviewData, config);\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success,\n        });\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const newReviewReset = () => (dispatch) => {\n    dispatch({ type: NEW_REVIEW_RESET });\n};\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: ADMIN_PRODUCTS_REQUEST,\n        });\n        const { data } = await axios.get('/api/v1/admin/products');\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products,\n        });\n    } catch (error) {\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: NEW_PRODUCT_REQUEST,\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const { data } = await axios.post('/api/v1/admin/product/new', productData, config);\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: DELETE_PRODUCT_REQUEST,\n        });\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success,\n        });\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const updateProduct = (id, producData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: UPDATE_PRODUCT_REQUEST,\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, producData, config);\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success,\n        });\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ALL_REVIEWS_REQUEST,\n        });\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\n        dispatch({\n            type: ALL_REVIEWS_SUCCESS,\n            payload: data.reviews,\n        });\n    } catch (error) {\n        dispatch({\n            type: ALL_REVIEWS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n        dispatch({\n            type: DELETE_REVIEW_REQUEST,\n        });\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`);\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success,\n        });\n    } catch (error) {\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const updateProductReset = () => async (dispatch) => {\n    dispatch({\n        type: UPDATE_PRODUCT_RESET,\n    });\n};\n\nexport const deleteReviewReset = () => async (dispatch) => {\n    dispatch({\n        type: DELETE_REVIEW_RESET,\n    });\n};\n\nexport const deleteProductReset = () => async (dispatch) => {\n    dispatch({\n        type: DELETE_PRODUCT_RESET,\n    });\n};\n\nexport const newProductReset = () => async (dispatch) => {\n    dispatch({\n        type: NEW_PRODUCT_RESET,\n    });\n};\n\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS,\n    });\n};\n","import axios from 'axios';\n\nexport const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST';\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL';\n\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST';\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS';\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL';\n\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST';\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS';\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL';\n\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST';\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS';\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL';\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET';\n\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST';\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS';\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL';\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CREATE_ORDER_REQUEST });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post('/api/v1/order/new', order, config);\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({ type: CREATE_ORDER_FAIL, payload: error.response.data.message });\n    }\n};\n\nexport const myOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: MY_ORDERS_REQUEST });\n        const { data } = await axios.get('/api/v1/orders/me');\n        dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\n    } catch (error) {\n        dispatch({ type: MY_ORDERS_FAIL, payload: error.response.data.message });\n    }\n};\n\nexport const getOrderDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: ORDER_DETAILS_REQUEST });\n        const { data } = await axios.get(`/api/v1/order/${id}`);\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n    } catch (error) {\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: error.response.data.message });\n    }\n};\n\nexport const getAllOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_ORDERS_REQUEST });\n        const { data } = await axios.get(`/api/v1/admin/orders`);\n        dispatch({ type: ALL_ORDERS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ type: ALL_ORDERS_FAIL, payload: error.response.data.message });\n    }\n};\n\nexport const updateOrder = (id, orderData) => async (dispatch) => {\n    try {\n        dispatch({\n            type: UPDATE_ORDER_REQUEST,\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config);\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success,\n        });\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: DELETE_ORDER_REQUEST,\n        });\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n        dispatch({\n            type: DELETE_ORDER_SUCCESS,\n            payload: data.success,\n        });\n    } catch (error) {\n        dispatch({\n            type: DELETE_ORDER_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\nexport const deleteOrderReset = () => async (dispatch) => {\n    dispatch({\n        type: DELETE_ORDER_RESET,\n    });\n};\n\nexport const updateOrderReset = () => async (dispatch) => {\n    dispatch({\n        type: UPDATE_ORDER_RESET,\n    });\n};\n\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS,\n    });\n};\n","import axios from 'axios';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL';\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL';\n\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST';\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS';\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET';\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL';\n\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST';\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS';\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET';\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL';\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST';\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET';\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\n\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\n\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\n\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST';\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS';\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL';\n\nexport const ALL_USER_REQUEST = 'ALL_USER_REQUEST';\nexport const ALL_USER_SUCCESS = 'ALL_USER_SUCCESS';\nexport const ALL_USER_FAIL = 'ALL_USER_FAIL';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\n\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: LOGIN_REQUEST });\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        const { data } = await axios.post('/api/v1/login', { email, password }, config);\n        dispatch({ type: LOGIN_SUCCESS, payload: data.user });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: LOGIN_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const register = (userData) => async (dispatch) => {\n    try {\n        dispatch({ type: REGISTER_USER_REQUEST });\n        const config = {\n            headers: {\n                'Content-type': 'multipart/from-data',\n            },\n        };\n        const { data } = await axios.post('/api/v1/register', userData, config);\n        dispatch({ type: REGISTER_USER_SUCCESS, payload: data.user });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: REGISTER_USER_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const loadUser = () => async (dispatch) => {\n    try {\n        dispatch({ type: LOAD_USER_REQUEST });\n        const { data } = await axios.get('/api/v1/me');\n        dispatch({ type: LOAD_USER_SUCCESS, payload: data.user });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: LOAD_USER_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const logoutUser = () => async (dispatch) => {\n    try {\n        await axios.get('/api/v1/logout');\n        dispatch({ type: LOGOUT_SUCCESS });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: LOGOUT_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n        dispatch({ type: UPDATE_PROFILE_REQUEST });\n        const config = {\n            headers: {\n                'Content-type': 'multipart/from-data',\n            },\n        };\n        const { data } = await axios.put('/api/v1/me/update', userData, config);\n        dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data.success });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: UPDATE_PROFILE_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n        dispatch({ type: UPDATE_PASSWORD_REQUEST });\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        const { data } = await axios.put('/api/v1/password/update', passwords, config);\n        dispatch({ type: UPDATE_PASSWORD_SUCCESS, payload: data.success });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: UPDATE_PASSWORD_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n        dispatch({ type: FORGOT_PASSWORD_REQUEST });\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        const { data } = await axios.post('/api/v1/password/forgot', email, config);\n        dispatch({ type: FORGOT_PASSWORD_SUCCESS, payload: data.message });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: FORGOT_PASSWORD_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n        dispatch({ type: NEW_PASSWORD_REQUEST });\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config);\n        dispatch({ type: NEW_PASSWORD_SUCCESS, payload: data.success });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: NEW_PASSWORD_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const getAllUsers = () => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_USER_REQUEST });\n        const { data } = await axios.get('/api/v1/admin/users');\n        dispatch({ type: ALL_USER_SUCCESS, payload: data.users });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: ALL_USER_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_DETAILS_REQUEST });\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`);\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data.user });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: USER_DETAILS_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n        dispatch({ type: UPDATE_USER_REQUEST });\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config);\n        dispatch({ type: UPDATE_USER_SUCCESS, payload: data.success });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: UPDATE_USER_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: DELETE_USER_REQUEST });\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`);\n        dispatch({ type: DELETE_USER_SUCCESS, payload: data.success });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: DELETE_USER_FAIL, error: error.response.data.message });\n    }\n};\n\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS,\n    });\n};\n\nexport const updateUserReset = () => async (dispatch) => {\n    dispatch({\n        type: UPDATE_USER_RESET,\n    });\n};\n\nexport const updateProfileReset = () => async (dispatch) => {\n    dispatch({\n        type: UPDATE_PROFILE_RESET,\n    });\n};\n\nexport const deleteUserReset = () => async (dispatch) => {\n    dispatch({\n        type: DELETE_USER_RESET,\n    });\n};\n\nexport const updatePasswordReset = () => async (dispatch) => {\n    dispatch({\n        type: UPDATE_PASSWORD_RESET,\n    });\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport Metadata from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { getAdminProducts } from '../../store/actions/productAction';\nimport { getAllOrders } from '../../store/actions/orderActions';\nimport { getAllUsers } from '../../store/actions/authActions';\n\nconst Dashboard = () => {\n    const dispatch = useDispatch();\n    const { products } = useSelector((state) => state.products);\n    const { orders, totalAmount, loading } = useSelector((state) => state.allOrders);\n    const { users } = useSelector((state) => state.allUsers);\n\n    let outOfStock = 0;\n    products.forEach((product) => {\n        if (product.stock === 0) {\n            outOfStock += 1;\n        }\n    });\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n        dispatch(getAllOrders());\n        dispatch(getAllUsers());\n    }, [dispatch]);\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <h1 className=\"my-4\">Dashboard</h1>\n                    {loading ? (\n                        <Loader />\n                    ) : (\n                        <>\n                            <Metadata title=\"Dashboard\" />\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">\n                                                Total Amount\n                                                <br /> <b>${totalAmount?.toFixed(2)}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row pr-4\">\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">\n                                                Products\n                                                <br /> <b>{products?.length ?? 0}</b>\n                                            </div>\n                                        </div>\n                                        <Link\n                                            className=\"card-footer text-white clearfix small z-1\"\n                                            to=\"/admin/products\"\n                                        >\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">\n                                                Orders\n                                                <br /> <b>{orders?.length ?? 0}</b>\n                                            </div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">\n                                                Users\n                                                <br /> <b>{users?.length ?? 0}</b>\n                                            </div>\n                                        </div>\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\n                                            <span className=\"float-left\">View Details</span>\n                                            <span className=\"float-right\">\n                                                <i className=\"fa fa-angle-right\"></i>\n                                            </span>\n                                        </Link>\n                                    </div>\n                                </div>\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\n                                        <div className=\"card-body\">\n                                            <div className=\"text-center card-font-size\">\n                                                Out of Stock\n                                                <br /> <b>{outOfStock}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <>\n            <footer className=\"py-1\">\n                <p className=\"text-center mt-1\">Shopping Cart - 2019-2020, All Rights Reserved</p>\n            </footer>\n        </>\n    );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, forgotPassword } from '../../store/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../common/MetaData';\nimport { useAlert } from 'react-alert';\n\nconst ForgotPassword = () => {\n    const [email, setEmail] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, message, loading } = useSelector((state) => state.password);\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (message) {\n            alert.success(message);\n        }\n    }, [dispatch, error, alert, message]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData));\n    };\n\n    return (\n        <>\n            <MetaData title=\"Forgot password\" />\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(event) => setEmail(event.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            disabled={loading}\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            Send Email\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ForgotPassword;\n","import React, { useState } from 'react';\n\nconst Search = ({ history }) => {\n    const [keyword, setKeyword] = useState('');\n\n    const handleSearch = (event) => {\n        event.preventDefault();\n\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`);\n        } else {\n            history.push('/');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSearch}>\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    id=\"search_field\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Product Name ...\"\n                    onChange={(event) => setKeyword(event.target.value)}\n                />\n                <div className=\"input-group-append\">\n                    <button id=\"search_btn\" className=\"btn\">\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default Search;\n","import { Link, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport React from 'react';\nimport Search from './Search';\nimport { logoutUser } from '../../store/actions/authActions';\nimport { useAlert } from 'react-alert';\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { user, loading } = useSelector((state) => state.auth);\n    const { cartItems } = useSelector((state) => state.cart);\n\n    const logoutHandler = () => {\n        dispatch(logoutUser());\n        alert.success('Logged out success!');\n    };\n\n    return (\n        <>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"./images/logo.png\" alt=\"Logo\" />\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }}>\n                        <span id=\"cart\" className=\"ml-3\">\n                            Cart\n                        </span>\n                        <span className=\"ml-1\" id=\"cart_count\">\n                            {cartItems.length}\n                        </span>\n                    </Link>\n                    {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link\n                                to=\"#\"\n                                className=\"btn dropdown-toggle text-white mr-4\"\n                                type=\"button\"\n                                id=\"dropDownMenuButton\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                            >\n                                <figure className=\"avatar avatar-nav\">\n                                    <img src={user.avatar?.url} alt=\"Avatar\" className=\"rounded-circle\" />\n                                </figure>\n                                <span>{user?.name}</span>\n                            </Link>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n                                {user?.role === 'admin' && (\n                                    <Link to=\"/dashboard\" className=\"dropdown-item\">\n                                        Dashboard\n                                    </Link>\n                                )}\n                                <Link to=\"/orders/me\" className=\"dropdown-item\">\n                                    Orders\n                                </Link>\n                                <Link to=\"/me\" className=\"dropdown-item\">\n                                    Profile\n                                </Link>\n                                <Link to=\"/\" className=\"dropdown-item text-danger\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n                            </div>\n                        </div>\n                    ) : (\n                        !loading && (\n                            <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">\n                                Login\n                            </Link>\n                        )\n                    )}\n                </div>\n            </nav>\n        </>\n    );\n};\n\nexport default Header;\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img className=\"card-img-top mx-auto\" alt=\"Product images\" src={product.images[0].url} />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews})</span>\n                    </div>\n                    <p className=\"card-text\">{product.price}</p>\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">\n                        View Details\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Product;\n","import 'rc-slider/assets/index.css';\n\nimport React, { useEffect, useState } from 'react';\nimport { clearErrors, getProducts } from '../store/actions/productAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Loader from './common/Loader';\nimport MetaData from './common/MetaData';\nimport Pagination from 'react-js-pagination';\nimport Product from './product/Product';\nimport Slider from 'rc-slider';\nimport { useAlert } from 'react-alert';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n\nconst Home = ({ match }) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [price, setPrice] = useState([1, 1000]);\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, products, productsCount, resultsPerPage, error } = useSelector((state) => state.products);\n    const keyword = match.params.keyword;\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n            return;\n        }\n\n        dispatch(getProducts(keyword, price, currentPage));\n    }, [dispatch, alert, error, keyword, price, currentPage]);\n\n    const setCurrentPageNo = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    return (\n        <>\n            {loading ? (\n                <Loader />\n            ) : (\n                <>\n                    <MetaData title={'Buy Best Products Online'} />\n                    <h1 id=\"products_heading\">Latest Products</h1>\n\n                    <section id=\"products\" className=\"container mt-5\">\n                        <div className=\"row\">\n                            {keyword ? (\n                                <>\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\n                                        <div className=\"px-5\">\n                                            <Range\n                                                marks={{\n                                                    1: '$1',\n                                                    1000: '$1000',\n                                                }}\n                                                min={1}\n                                                max={1000}\n                                                defaultValue={[1, 1000]}\n                                                tipFormatter={(value) => `$${value}`}\n                                                tipProps={{\n                                                    placement: 'top',\n                                                    visible: true,\n                                                }}\n                                                value={price}\n                                                onChange={(price) => setPrice(price)}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6 col-md-9\">\n                                        <div className=\"row\">\n                                            {products &&\n                                                products.map((product) => (\n                                                    <Product key={product._id} product={product} col={4} />\n                                                ))}\n                                        </div>\n                                    </div>\n                                </>\n                            ) : (\n                                products &&\n                                products.map((product) => <Product key={product._id} product={product} col={3} />)\n                            )}\n                        </div>\n                    </section>\n\n                    {resultsPerPage <= productsCount && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resultsPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { clearErrors, myOrders } from '../../store/actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../common/MetaData';\nimport { useAlert } from 'react-alert';\n\nconst ListOrders = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector((state) => state.myOrders);\n\n    useEffect(() => {\n        dispatch(myOrders());\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n    }, [dispatch, alert, error]);\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order id',\n                    field: 'id',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Num of items',\n                    field: 'numOfItems',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: [],\n        };\n        orders.forEach((order) => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: String(order?.orderStatus ?? '').includes('Delivered') ? (\n                    <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                ) : (\n                    <p style={{ color: 'red' }}>{order.orderStatus}</p>\n                ),\n                actions: (\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n                ),\n            });\n        });\n        return data;\n    };\n\n    return (\n        <>\n            <MetaData title=\"My Orders\" />\n            <h1 className=\"mt-5\">My Orders</h1>\n\n            {loading ? <Loader /> : <MDBDataTable data={setOrders()} className=\"px-3\" bordered striped hover />}\n        </>\n    );\n};\n\nexport default ListOrders;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, login } from '../../store/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport MetaData from '../common/MetaData';\nimport { useAlert } from 'react-alert';\n\nconst Login = ({ history, location }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, loading, error } = useSelector((state) => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push(redirect);\n            return;\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n            return;\n        }\n    }, [dispatch, isAuthenticated, error, alert, history, redirect]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        dispatch(login(email, password));\n    };\n\n    return (\n        <>\n            {loading ? (\n                <Loader />\n            ) : (\n                <>\n                    <MetaData title={'Login'} />\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(event) => setEmail(event.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(event) => setPassword(event.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">\n                                    Forgot Password?\n                                </Link>\n\n                                <button id=\"login_button\" type=\"submit\" className=\"btn btn-block py-3\">\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">\n                                    New User?\n                                </Link>\n                            </form>\n                        </div>\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, resetPassword } from '../../store/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../common/MetaData';\nimport { useAlert } from 'react-alert';\n\nconst NewPassword = ({ history, match }) => {\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, success } = useSelector((state) => state.password);\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Password updated succesfully!');\n            history.push('/login');\n        }\n    }, [dispatch, error, alert, success, history]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(match.params.token, formData));\n    };\n\n    return (\n        <>\n            <MetaData tite=\"New password\" />\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">New Password</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(event) => setPassword(event.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirm_password_field\"\n                                className=\"form-control\"\n                                value={confirmPassword}\n                                onChange={(event) => setConfirmPassword(event.target.value)}\n                            />\n                        </div>\n\n                        <button id=\"new_password_button\" type=\"submit\" className=\"btn btn-block py-3\">\n                            Set Password\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default NewPassword;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, newProduct, newProductReset } from '../../store/actions/productAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\n\nconst NewProduct = ({ history }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImage] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([]);\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        'Books',\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home',\n    ];\n\n    const { loading, error, success } = useSelector((state) => state.newProduct);\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors);\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created succesfully!');\n            dispatch(newProductReset());\n        }\n    }, [dispatch, alert, history, error, success]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach((image) => {\n            formData.append('images', image);\n        });\n\n        dispatch(newProduct(formData));\n    };\n\n    const changeHandler = (event) => {\n        const files = Array.from(event.target.files);\n        setImage([]);\n        setImagesPreview([]);\n\n        files.forEach((file) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n                // State = done\n                if (reader.readyState === 2) {\n                    setImage((old) => [...old, reader.result]);\n                    setImagesPreview((old) => [...old, reader.result]);\n                }\n            };\n            reader.readAsDataURL(file);\n        });\n    };\n\n    return (\n        <>\n            <MetaData title=\"New product\" />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" encType=\"multipart/form-data\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-4\">New Product</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(event) => setName(event.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(event) => setPrice(event.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"description_field\"\n                                        rows=\"8\"\n                                        value={description}\n                                        onChange={(event) => setDescription(event.target.value)}\n                                    ></textarea>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select\n                                        className=\"form-control\"\n                                        id=\"category_field\"\n                                        value={category}\n                                        onChange={(event) => setCategory(event.target.value)}\n                                    >\n                                        {categories.map((category) => (\n                                            <option key={category} value={category}>\n                                                {category}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(event) => setStock(event.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(event) => setSeller(event.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Images</label>\n                                    <div className=\"custom-file\">\n                                        <input\n                                            type=\"file\"\n                                            name=\"product_images\"\n                                            className=\"custom-file-input\"\n                                            id=\"customFile\"\n                                            onChange={changeHandler}\n                                            multiple\n                                        />\n                                        <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                            Choose Images\n                                        </label>\n                                    </div>\n                                    {imagesPreview.map((image) => (\n                                        <img\n                                            src={image}\n                                            key={image}\n                                            alt=\"Preview\"\n                                            className=\"mt-3 mr-2\"\n                                            width=\"55\"\n                                            height=\"52\"\n                                        />\n                                    ))}\n                                </div>\n                                <button\n                                    disabled={loading}\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    CREATE\n                                </button>\n                            </form>\n                        </div>\n                    </>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default NewProduct;\n","import React, { useEffect } from 'react';\nimport { clearErrors, getOrderDetails } from '../../store/actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport MetaData from '../common/MetaData';\nimport { useAlert } from 'react-alert';\n\nconst OrderDetails = ({ match }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, order = {} } = useSelector((state) => state.orderDetails);\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order;\n\n    useEffect(() => {\n        dispatch(getOrderDetails(match.params.id));\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n    }, [dispatch, alert, error, match.params.id]);\n\n    const shippingDetails =\n        shippingInfo &&\n        `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`;\n\n    const isPaid = paymentInfo?.status === 'succeeded';\n\n    return (\n        <>\n            <MetaData title=\"Order Details\" />\n            {loading ? (\n                <Loader />\n            ) : (\n                <>\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\n\n                            <h4 className=\"mb-4\">Shipping Info</h4>\n                            <p>\n                                <b>Name:</b> {user?.name}\n                            </p>\n                            <p>\n                                <b>Phone:</b> {shippingInfo?.phoneNumber}\n                            </p>\n                            <p className=\"mb-4\">\n                                <b>Address:</b> {shippingDetails}\n                            </p>\n                            <p>\n                                <b>Amount:</b> ${totalPrice}\n                            </p>\n\n                            <hr />\n\n                            <h4 className=\"my-4\">Payment</h4>\n                            <p className={isPaid ? 'greenColor' : 'redColor'}>\n                                <b>{isPaid ? 'PAID' : 'NOT PAID'}</b>\n                            </p>\n\n                            <h4 className=\"my-4\">Order Status:</h4>\n                            <p\n                                className={\n                                    String(order?.orderStatus ?? '').includes('Delivered') ? 'greenColor' : 'redColor'\n                                }\n                            >\n                                <b>{orderStatus}</b>\n                            </p>\n\n                            <h4 className=\"my-4\">Order Items:</h4>\n\n                            <hr />\n                            <div className=\"cart-item my-1\">\n                                {orderItems &&\n                                    orderItems.map((item) => (\n                                        <div className=\"row my-5\" key={item.product}>\n                                            <div className=\"col-4 col-lg-2\">\n                                                <img src={item.images[0].url} alt={item.name} height=\"45\" width=\"65\" />\n                                            </div>\n                                            <div className=\"col-5 col-lg-5\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                <p>${item.price}</p>\n                                            </div>\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                <p>{item.quantity} Piece(s)</p>\n                                            </div>\n                                        </div>\n                                    ))}\n                            </div>\n                            <hr />\n                        </div>\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default OrderDetails;\n","import React, { useEffect } from 'react';\nimport { clearErrors, deleteOrder, deleteOrderReset, getAllOrders } from '../../store/actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\n\nconst OrderList = ({ history }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders = [] } = useSelector((state) => state.allOrders);\n    const { isDeleted } = useSelector((state) => state.order);\n\n    useEffect(() => {\n        dispatch(getAllOrders());\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isDeleted) {\n            alert.success('Order deleted succesfully!');\n            history.push('/admin/orders');\n            dispatch(deleteOrderReset());\n        }\n    }, [dispatch, alert, error, history, isDeleted]);\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id));\n    };\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order id',\n                    field: 'id',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Num of Items',\n                    field: 'numOfItems',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: [],\n        };\n        orders.forEach((order) => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: String(order?.orderStatus ?? '').includes('Delivered') ? (\n                    <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                ) : (\n                    <p style={{ color: 'red' }}>{order.orderStatus}</p>\n                ),\n                actions: (\n                    <>\n                        <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\n                            <i className=\"fa fa-eye\"></i>\n                        </Link>\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\n                            <i className=\"fa fa-trash\"></i>\n                        </button>\n                    </>\n                ),\n            });\n        });\n        return data;\n    };\n\n    return (\n        <>\n            <MetaData title=\"All orders\" />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <>\n                        <h1 className=\"my-5\">All orders</h1>\n                        {loading ? (\n                            <Loader />\n                        ) : (\n                            <MDBDataTable data={setOrders()} className=\"px-3\" bordered striped hover />\n                        )}\n                    </>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default OrderList;\n","import { Link } from 'react-router-dom';\nimport MetaData from '../common/MetaData';\nimport React from 'react';\n\nconst OrderSuccess = () => {\n    return (\n        <>\n            <MetaData title=\"Order Success!\" />\n            <div className=\"row justify-content-center\">\n                <div className=\"col-6 mt-5 text-center\">\n                    <img\n                        className=\"my-5 img-fluid d-block mx-auto\"\n                        src=\"/images/order_success.png\"\n                        alt=\"Order Success\"\n                        width=\"200\"\n                        height=\"200\"\n                    />\n\n                    <h2>Your Order has been placed successfully.</h2>\n\n                    <Link to=\"/orders/me\">Go to Orders</Link>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default OrderSuccess;\n","import { CardCvcElement, CardExpiryElement, CardNumberElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useEffect } from 'react';\nimport { clearErrors, createOrder } from '../../store/actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CheckoutSteps from './CheckoutSteps';\nimport MetaData from '../common/MetaData';\nimport axios from 'axios';\nimport { useAlert } from 'react-alert';\n\nconst options = {\n    style: {\n        base: {\n            fontSize: '16px',\n        },\n        invalid: {\n            color: '#9e2146',\n        },\n    },\n};\n\nconst Payment = ({ history }) => {\n    const alert = useAlert();\n    const stripe = useStripe();\n    const elements = useElements();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector((state) => state.auth);\n    const { error } = useSelector((state) => state.orders);\n    const { cartItems, shippingInfo } = useSelector((state) => state.cart);\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n    }, [dispatch, alert, error]);\n\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n    const order = {\n        orderItems: cartItems,\n        shippingInfo,\n    };\n\n    if (orderInfo) {\n        order.itemsPrice = orderInfo.itemsPrice;\n        order.shippingPrice = orderInfo.shippingPrice;\n        order.taxPrice = orderInfo.taxPrice;\n        order.totalPrice = orderInfo.totalPrice;\n    }\n\n    const paymentData = {\n        amount: Math.round(orderInfo.totalPrice * 100),\n    };\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        document.querySelector('#pay_btn').disabled = true;\n\n        try {\n            if (!stripe || !elements) {\n                return;\n            }\n\n            const response = await axios.post('/api/v1/payment/process', paymentData, {\n                headers: {\n                    'Content-type': 'application/json',\n                },\n            });\n\n            const clientSecret = response.data.client_secret;\n            const result = await stripe.confirmCardPayment(clientSecret, {\n                payment_method: {\n                    card: elements.getElement(CardNumberElement),\n                    billing_details: {\n                        name: user.name,\n                        email: user.email,\n                    },\n                },\n            });\n\n            if (result.error) {\n                document.querySelector('#pay_btn').disabled = false;\n                alert.error(result.error.message);\n                return;\n            }\n\n            if (result.paymentIntent.status !== 'succeeded') {\n                document.querySelector('#pay_btn').disabled = false;\n                alert.error('There is some issue while paying');\n                return;\n            }\n\n            document.querySelector('#pay_btn').disabled = false;\n            order.paymentInfo = {\n                id: result.paymentIntent.id,\n                status: result.paymentIntent.status,\n            };\n\n            dispatch(createOrder(order));\n            history.push('/success');\n        } catch (error) {\n            document.querySelector('#pay_btn').disabled = false;\n            alert.error(error.response.data.message);\n        }\n    };\n\n    return (\n        <>\n            <MetaData title=\"Payment\" />\n            <CheckoutSteps shippingStep confirmOrderStep paymentStep />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Card Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_num_field\">Card Number</label>\n                            <CardNumberElement\n                                type=\"text\"\n                                id=\"card_num_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\n                            <CardExpiryElement\n                                type=\"text\"\n                                id=\"card_exp_field\"\n                                className=\"form-control\"\n                                options={options}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\n                            <CardCvcElement type=\"text\" id=\"card_cvc_field\" className=\"form-control\" />\n                        </div>\n\n                        <button id=\"pay_btn\" type=\"submit\" className=\"btn btn-block py-3\">\n                            Pay {` - $${orderInfo?.totalPrice}`}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Payment;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, getOrderDetails, updateOrder, updateOrderReset } from '../../store/actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport MetaData from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\n\nconst ProcessOrder = ({ match }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const [status, setStatus] = useState('');\n\n    const { loading, order = {} } = useSelector((state) => state.orderDetails);\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order;\n    const { error, isUpdated } = useSelector((state) => state.order);\n\n    useEffect(() => {\n        dispatch(getOrderDetails(match.params.id));\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n        if (isUpdated) {\n            alert.success('Order updated succesfully!');\n            dispatch(updateOrderReset());\n        }\n    }, [dispatch, alert, error, isUpdated, match.params.id]);\n\n    const updateOrderHanlder = (id) => {\n        const formData = new FormData();\n        formData.set('status', status);\n\n        dispatch(updateOrder(id, formData));\n    };\n\n    const shippingDetails =\n        shippingInfo &&\n        `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`;\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded';\n\n    return (\n        <>\n            <MetaData title={`Process order #${order?._id}`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <>\n                        {loading ? (\n                            <Loader />\n                        ) : (\n                            <div className=\"row d-flex justify-content-around\">\n                                <div className=\"col-12 col-lg-7 order-details\">\n                                    <h2 className=\"my-5\">Order # {order?._id}</h2>\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\n                                    <p>\n                                        <b>Name: </b> {user?.name}\n                                    </p>\n                                    <p>\n                                        <b>Phone: </b> {shippingInfo?.phoneNumber}\n                                    </p>\n                                    <p className=\"mb-4\">\n                                        <b>Address:</b>\n                                        {shippingDetails}\n                                    </p>\n                                    <p>\n                                        <b>Amount: </b> ${totalPrice}\n                                    </p>\n                                    <hr />\n                                    <h4 className=\"my-4\">Payment</h4>\n                                    <p className={isPaid ? 'greenColor' : 'redColor'}>\n                                        <b>{isPaid ? 'PAID' : 'NOT PAID'}</b>\n                                    </p>\n                                    <h4 className=\"my-4\">Stripe ID</h4>\n                                    <p>\n                                        <b>{paymentInfo?.id}</b>\n                                    </p>\n                                    <h4 className=\"my-4\">Order Status:</h4>\n                                    <p\n                                        className={\n                                            String(order?.orderStatus ?? '').includes('Delivered')\n                                                ? 'greenColor'\n                                                : 'redColor'\n                                        }\n                                    >\n                                        <b>{orderStatus}</b>\n                                    </p>\n                                    <h4 className=\"my-4\">Order Items:</h4>\n                                    <hr />\n                                    <div className=\"cart-item my-1\">\n                                        {orderItems &&\n                                            orderItems.map((item) => (\n                                                <div className=\"row my-5\" key={item.product}>\n                                                    <div className=\"col-4 col-lg-2\">\n                                                        <img\n                                                            src={item.images[0].url}\n                                                            alt={item.name}\n                                                            height=\"45\"\n                                                            width=\"65\"\n                                                        />\n                                                    </div>\n                                                    <div className=\"col-5 col-lg-5\">\n                                                        <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                    </div>\n                                                    <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                        <p>${item.price}</p>\n                                                    </div>\n                                                    <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                        <p>{item.quantity} Piece(s)</p>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                    </div>\n                                    <hr />\n                                </div>\n                                <div className=\"col-12 col-lg-3 mt-5\">\n                                    <h4 className=\"my-4\">Status</h4>\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"form-control\"\n                                            name=\"status\"\n                                            value={status}\n                                            onChange={(event) => setStatus(event.target.value)}\n                                        >\n                                            <option value=\"Processing\">Processing</option>\n                                            <option value=\"Shipped\">Shipped</option>\n                                            <option value=\"Delivered\">Delivered</option>\n                                        </select>\n                                    </div>\n                                    <button\n                                        className=\"btn btn-primary btn-block\"\n                                        onClick={() => updateOrderHanlder(order._id)}\n                                    >\n                                        Update Status\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ProcessOrder;\n","import React from 'react';\n\nconst ListReviews = ({ reviews }) => {\n    return (\n        <div className=\"reviews w-75\">\n            <h3>Other's Reviews:</h3>\n            <hr />\n            {reviews?.map((review) => (\n                <div className=\"review-card my-3\" key={review._id}>\n                    <div className=\"rating-outer\">\n                        <div className=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\n                    </div>\n                    <p className=\"review_user\">by {review.name}</p>\n                    <p className=\"review_comment\">{review.comment}</p>\n\n                    <hr />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default ListReviews;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, getProductDetails, newReview, newReviewReset } from '../../store/actions/productAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Carousel } from 'react-bootstrap';\nimport ListReviews from '../review/ListReviews';\nimport Loader from '../common/Loader';\nimport MetaData from '../common/MetaData';\nimport { addItemToCart } from '../../store/actions/cartActions';\nimport { useAlert } from 'react-alert';\n\nconst ProductDetails = ({ match }) => {\n    const [quantity, setQuantity] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { user } = useSelector((state) => state.auth);\n    const { loading, error, product } = useSelector((state) => state.productDetails);\n    const { error: reviewError, success } = useSelector((state) => state.newReview);\n\n    const decreaseQty = () => {\n        const count = document.querySelector('.count');\n        if (count.valueAsNumber <= 1) {\n            return;\n        }\n\n        setQuantity((current) => current - 1);\n    };\n\n    const increaseQty = () => {\n        const count = document.querySelector('.count');\n        if (count.valueAsNumber >= product.stock) {\n            return;\n        }\n\n        setQuantity((current) => current + 1);\n    };\n\n    const addToCart = () => {\n        dispatch(addItemToCart(match.params.id, quantity));\n        alert.success('Item added to cart!');\n    };\n\n    const setUserRatings = () => {\n        const stars = document.querySelectorAll('.star');\n        stars.forEach((star, index) => {\n            star.starValue = index + 1;\n\n            star.addEventListener('click', function (event) {\n                stars.forEach((star, index) => {\n                    if (index < this.starValue) {\n                        star.classList.add('orange');\n                        setRating(this.starValue);\n                    } else {\n                        star.classList.remove('orange');\n                    }\n                });\n            });\n\n            star.addEventListener('mouseover', function (event) {\n                stars.forEach((star, index) => {\n                    if (index < this.starValue) {\n                        star.classList.add('yellow');\n                    } else {\n                        star.classList.remove('yellow');\n                    }\n                });\n            });\n\n            star.addEventListener('mouseout', function (event) {\n                stars.forEach((star, index) => {\n                    star.classList.remove('yellow');\n                });\n            });\n        });\n    };\n\n    const reviewHandler = () => {\n        const formData = new FormData();\n\n        formData.set('rating', rating);\n        formData.set('comment', comment);\n        formData.set('productId', match.params.id);\n\n        dispatch(newReview(formData));\n    };\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n            return;\n        }\n        if (reviewError) {\n            alert.error(error);\n            dispatch(clearErrors());\n            return;\n        }\n        if (success) {\n            alert.success('Review posted succesfully!');\n            dispatch(newReviewReset());\n        }\n        dispatch(getProductDetails(match.params.id));\n    }, [dispatch, alert, error, reviewError, success, match.params.id]);\n\n    return (\n        <>\n            {loading ? (\n                <Loader />\n            ) : (\n                <>\n                    <MetaData title={product.name} />\n                    <div className=\"row f-flex justify-content-around\">\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\n                            <Carousel pause=\"hover\">\n                                {product.images &&\n                                    product.images.map((image) => (\n                                        <Carousel.Item key={image.public_id}>\n                                            <img className=\"d-block w-100\" src={image.url} alt={product.title} />\n                                        </Carousel.Item>\n                                    ))}\n                            </Carousel>\n                        </div>\n                        <div className=\"col-12 col-lg-5 mt-5\">\n                            <h3>{product.name}</h3>\n                            <p id=\"product_id\">Product # {product._id}</p>\n                            <hr />\n                            <div className=\"rating-outer\">\n                                <div\n                                    className=\"rating-inner\"\n                                    style={{ width: `${(product.ratings / 5) * 100}%` }}\n                                ></div>\n                            </div>\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                            <hr />\n                            <p id=\"product_price\">${product.price}</p>\n                            <div className=\"stockCounter d-inline\">\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>\n                                    -\n                                </span>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control count d-inline\"\n                                    value={quantity}\n                                    readOnly\n                                />\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>\n                                    +\n                                </span>\n                            </div>\n                            <button\n                                type=\"button\"\n                                id=\"cart_btn\"\n                                className=\"btn btn-primary d-inline ml-4\"\n                                disable={product.stock === 0}\n                                onClick={addToCart}\n                            >\n                                Add to Cart\n                            </button>\n                            <hr />\n                            <p>\n                                Status:{' '}\n                                <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'}>\n                                    {product.stock > 0 ? 'In Stock' : 'Out of Stock'}\n                                </span>\n                            </p>\n                            <hr />\n                            <h4 className=\"mt-2\">Description:</h4>\n                            <p>{product.description}</p>\n                            <hr />\n                            <p id=\"product_seller mb-3\">\n                                Sold by: <strong>{product.seller}</strong>\n                            </p>\n                            {user ? (\n                                <button\n                                    id=\"review_btn\"\n                                    type=\"button\"\n                                    className=\"btn btn-primary mt-4\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#ratingModal\"\n                                    onClick={setUserRatings}\n                                >\n                                    Submit Your Review\n                                </button>\n                            ) : (\n                                <div className=\"alert alert-danger mt-5\" type=\"alert\">\n                                    Login to post your review.\n                                </div>\n                            )}\n\n                            <div className=\"row mt-2 mb-5\">\n                                <div className=\"rating w-50\">\n                                    <div\n                                        className=\"modal fade\"\n                                        id=\"ratingModal\"\n                                        tabIndex=\"-1\"\n                                        role=\"dialog\"\n                                        aria-labelledby=\"ratingModalLabel\"\n                                        aria-hidden=\"true\"\n                                    >\n                                        <div className=\"modal-dialog\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">\n                                                        Submit Review\n                                                    </h5>\n                                                    <button\n                                                        type=\"button\"\n                                                        className=\"close\"\n                                                        data-dismiss=\"modal\"\n                                                        aria-label=\"Close\"\n                                                    >\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"modal-body\">\n                                                    <ul className=\"stars\">\n                                                        <li className=\"star\">\n                                                            <i className=\"fa fa-star\"></i>\n                                                        </li>\n                                                        <li className=\"star\">\n                                                            <i className=\"fa fa-star\"></i>\n                                                        </li>\n                                                        <li className=\"star\">\n                                                            <i className=\"fa fa-star\"></i>\n                                                        </li>\n                                                        <li className=\"star\">\n                                                            <i className=\"fa fa-star\"></i>\n                                                        </li>\n                                                        <li className=\"star\">\n                                                            <i className=\"fa fa-star\"></i>\n                                                        </li>\n                                                    </ul>\n                                                    <textarea\n                                                        name=\"review\"\n                                                        id=\"review\"\n                                                        className=\"form-control mt-3\"\n                                                        value={comment}\n                                                        onChange={(event) => setComment(event.target.value)}\n                                                    ></textarea>\n                                                    <button\n                                                        className=\"btn my-3 float-right review-btn px-4 text-white\"\n                                                        data-dismiss=\"modal\"\n                                                        aria-label=\"Close\"\n                                                        onClick={reviewHandler}\n                                                    >\n                                                        Submit\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {product.reviews?.length > 0 && <ListReviews reviews={product.reviews} />}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ProductDetails;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, deleteReview, deleteReviewReset, getProductReviews } from '../../store/actions/productAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\n\nconst ProductReviews = ({ history }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const [productId, setProductId] = useState('');\n\n    const { error, reviews = [] } = useSelector((state) => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector((state) => state.review);\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors());\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted succesfully!');\n            dispatch(deleteReviewReset());\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId));\n        }\n    }, [dispatch, alert, error, history, productId, isDeleted, deleteError]);\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId));\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        dispatch(getProductReviews(productId));\n    };\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review id',\n                    field: 'id',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc',\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: [],\n        };\n        reviews.forEach((review) => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n                actions: (\n                    <>\n                        <button\n                            className=\"btn btn-danger py-1 px-2 ml-2\"\n                            onClick={() => deleteReviewHandler(review._id)}\n                        >\n                            <i className=\"fa fa-trash\"></i>\n                        </button>\n                    </>\n                ),\n            });\n        });\n        return data;\n    };\n\n    return (\n        <>\n            <MetaData title=\"Product reviews\" />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(event) => setProductId(event.target.value)}\n                                        />\n                                    </div>\n\n                                    <button id=\"search_button\" type=\"submit\" className=\"btn btn-primary btn-block py-2\">\n                                        SEARCH\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable data={setReviews()} className=\"px-3\" bordered striped hover />\n                        ) : (\n                            <p className=\"mt-5 text-center\">No reviews</p>\n                        )}\n                    </>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ProductReviews;\n","import React, { useEffect } from 'react';\nimport { clearErrors, deleteProduct, deleteProductReset, getAdminProducts } from '../../store/actions/productAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\n\nconst ProductsList = ({ history }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector((state) => state.products);\n    const { error: deleteError, isDeleted } = useSelector((state) => state.product);\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors());\n        }\n        if (isDeleted) {\n            alert.success('Product deleted succesfully!');\n            history.push('/admin/products');\n            dispatch(deleteProductReset());\n        }\n    }, [dispatch, alert, error, deleteError, isDeleted, history]);\n\n    const setProducts = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Product id',\n                    field: 'id',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Price',\n                    field: 'price',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Stock',\n                    field: 'stock',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: [],\n        };\n        products.forEach((product) => {\n            data.rows.push({\n                id: product._id,\n                name: product.name,\n                price: `$${product.price}`,\n                stock: product.stock,\n                actions: (\n                    <>\n                        <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\n                            <i className=\"fa fa-pencil\"></i>\n                        </Link>\n                        <button\n                            className=\"btn btn-danger py-1 px-2 ml-2\"\n                            onClick={() => deleteProductHandler(product._id)}\n                        >\n                            <i className=\"fa fa-trash\"></i>\n                        </button>\n                    </>\n                ),\n            });\n        });\n        return data;\n    };\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id));\n    };\n\n    return (\n        <>\n            <MetaData title=\"All products\" />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <>\n                        <h1 className=\"my-5\">All products</h1>\n                        {loading ? (\n                            <Loader />\n                        ) : (\n                            <MDBDataTable data={setProducts()} className=\"px-3\" bordered striped hover />\n                        )}\n                    </>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ProductsList;\n","import { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport Metadata from '../common/MetaData';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Profile = () => {\n    const { user, loading } = useSelector((state) => state.auth);\n\n    return (\n        <>\n            {loading ? (\n                <Loader />\n            ) : (\n                <>\n                    <Metadata title=\"My profile\" />\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\n                    <div className=\"row justify-content-around mt-5 user-info\">\n                        <div className=\"col-12 col-md-3\">\n                            <figure className=\"avatar avatar-profile\">\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\n                            </figure>\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                                Edit Profile\n                            </Link>\n                        </div>\n\n                        <div className=\"col-12 col-md-5\">\n                            <h4>Full Name</h4>\n                            <p>{user.name}</p>\n\n                            <h4>Email Address</h4>\n                            <p>{user.email}</p>\n\n                            <h4>Joined on</h4>\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\n\n                            {user.role !== 'admin' && (\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\n                                    My Orders\n                                </Link>\n                            )}\n\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                                Change Password\n                            </Link>\n                        </div>\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Profile;\n","import { Redirect, Route } from 'react-router-dom';\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n    const { isAuthenticated, user, loading } = useSelector((state) => state.auth);\n\n    return (\n        <>\n            {!loading && (\n                <Route\n                    {...rest}\n                    render={(props) => {\n                        if (!isAuthenticated) {\n                            return <Redirect to=\"/login\" />;\n                        }\n\n                        if (isAdmin && user.role !== 'admin') {\n                            return <Redirect to=\"/\" />;\n                        }\n                        return <Component {...props} />;\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default ProtectedRoute;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, register } from '../../store/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Loader from '../common/Loader';\nimport MetaData from '../common/MetaData';\nimport { useAlert } from 'react-alert';\n\nconst Register = ({ history }) => {\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n    });\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpeg');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, loading, error } = useSelector((state) => state.auth);\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push('/');\n            return;\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n            return;\n        }\n    }, [dispatch, isAuthenticated, error, alert, history]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', user.name);\n        formData.set('email', user.email);\n        formData.set('password', user.password);\n        formData.set('avatar', avatar);\n\n        dispatch(register(formData));\n    };\n\n    const changeHandler = (event) => {\n        if (event.target.name === 'avatar') {\n            const reader = new FileReader();\n            reader.onload = () => {\n                // State = done\n                if (reader.readyState === 2) {\n                    setAvatar(reader.result);\n                    setAvatarPreview(reader.result);\n                }\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        } else {\n            setUser({ ...user, [event.target.name]: event.target.value });\n        }\n    };\n\n    return (\n        <>\n            {loading ? (\n                <Loader />\n            ) : (\n                <>\n                    <MetaData title={'Register User'} />\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" encType=\"multipart/form-data\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Register</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Name</label>\n                                    <input\n                                        type=\"name\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={user.name}\n                                        name=\"name\"\n                                        onChange={changeHandler}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={user.email}\n                                        name=\"email\"\n                                        onChange={changeHandler}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={user.password}\n                                        name=\"password\"\n                                        onChange={changeHandler}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"avatar_upload\">Avatar</label>\n                                    <div className=\"d-flex align-items-center\">\n                                        <div>\n                                            <figure className=\"avatar mr-3 item-rtl\">\n                                                <img\n                                                    src={avatarPreview}\n                                                    className=\"rounded-circle\"\n                                                    alt=\"Avatar preview\"\n                                                />\n                                            </figure>\n                                        </div>\n                                        <div className=\"custom-file\">\n                                            <input\n                                                type=\"file\"\n                                                name=\"avatar\"\n                                                className=\"custom-file-input\"\n                                                id=\"customFile\"\n                                                accept=\"images/*\"\n                                                onChange={changeHandler}\n                                            />\n                                            <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                                Choose Avatar\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <button\n                                    id=\"register_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading}\n                                >\n                                    REGISTER\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CheckoutSteps from './CheckoutSteps';\nimport MetaData from '../common/MetaData';\nimport { countries } from 'countries-list';\nimport { saveShippingInfo } from '../../store/actions/cartActions';\n\nconst Shipping = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const { shippingInfo } = useSelector((state) => state.cart);\n\n    const [address, setAddress] = useState(shippingInfo.address);\n    const [city, setCity] = useState(shippingInfo.city);\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode);\n    const [phoneNumber, setPhoneNumber] = useState(shippingInfo.phoneNumber);\n    const [country, setCountry] = useState(shippingInfo.country);\n\n    const submitHanlder = (event) => {\n        event.preventDefault();\n\n        dispatch(saveShippingInfo({ address, city, phoneNumber, postalCode, country }));\n        history.push('/confirm');\n    };\n\n    return (\n        <>\n            <MetaData title=\"Shipping Info\" />\n            <CheckoutSteps shippingStep />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHanlder}>\n                        <h1 className=\"mb-4\">Shipping Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address_field\">Address</label>\n                            <input\n                                type=\"text\"\n                                id=\"address_field\"\n                                className=\"form-control\"\n                                value={address}\n                                onChange={(event) => setAddress(event.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"city_field\">City</label>\n                            <input\n                                type=\"text\"\n                                id=\"city_field\"\n                                className=\"form-control\"\n                                value={city}\n                                onChange={(event) => setCity(event.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone_field\">Phone No</label>\n                            <input\n                                type=\"phone\"\n                                id=\"phone_field\"\n                                className=\"form-control\"\n                                value={phoneNumber}\n                                onChange={(event) => setPhoneNumber(event.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\n                            <input\n                                type=\"number\"\n                                id=\"postal_code_field\"\n                                className=\"form-control\"\n                                value={postalCode}\n                                onChange={(event) => setPostalCode(event.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"country_field\">Country</label>\n                            <select\n                                id=\"country_field\"\n                                className=\"form-control\"\n                                value={country}\n                                onChange={(event) => setCountry(event.target.value)}\n                                required\n                            >\n                                {Object.values(countries).map((c) => (\n                                    <option key={c.name} value={c.name}>\n                                        {c.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <button id=\"shipping_btn\" type=\"submit\" className=\"btn btn-block py-3\">\n                            CONTINUE\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Shipping;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, updatePassword, updatePasswordReset } from '../../store/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../common/MetaData';\nimport { useAlert } from 'react-alert';\n\nconst UpdatePassword = ({ history }) => {\n    const [oldPassword, setOldPassword] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully.');\n            history.push('/me');\n            dispatch(updatePasswordReset());\n        }\n    }, [dispatch, error, alert, history, isUpdated]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n\n        dispatch(updatePassword(formData));\n    };\n\n    return (\n        <>\n            <MetaData title=\"Change Password\" />\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(event) => setOldPassword(event.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(event) => setPassword(event.target.value)}\n                            />\n                        </div>\n\n                        <button disabled={loading} type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\">\n                            Update Password\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default UpdatePassword;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, getProductDetails, updateProduct, updateProductReset } from '../../store/actions/productAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\n\nconst UpdateProduct = ({ match, history }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        'Books',\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home',\n    ];\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImage] = useState([]);\n    const [oldImages, setOldImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([]);\n\n    const { error, product } = useSelector((state) => state.productDetails);\n    const { loading, error: updateError, isUpdated } = useSelector((state) => state.product);\n\n    useEffect(() => {\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated succesfully!');\n            dispatch(updateProductReset());\n        }\n\n        if (product && product._id !== match.params.id) {\n            dispatch(getProductDetails(match.params.id));\n        } else {\n            setName(product.name);\n            setPrice(product.price);\n            setDescription(product.description);\n            setCategory(product.category);\n            setSeller(product.seller);\n            setStock(product.stock);\n            setOldImages(product.images);\n        }\n    }, [dispatch, alert, error, updateError, match.params.id, product, history, isUpdated]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach((image) => {\n            formData.append('images', image);\n        });\n\n        dispatch(updateProduct(product._id, formData));\n    };\n\n    const changeHandler = (event) => {\n        const files = Array.from(event.target.files);\n        setImage([]);\n        setImagesPreview([]);\n        setOldImages([]);\n\n        files.forEach((file) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n                // State = done\n                if (reader.readyState === 2) {\n                    setImage((old) => [...old, reader.result]);\n                    setImagesPreview((old) => [...old, reader.result]);\n                }\n            };\n            reader.readAsDataURL(file);\n        });\n    };\n\n    return (\n        <>\n            <MetaData title=\"Update product\" />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" encType=\"multipart/form-data\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-4\">Update Product</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(event) => setName(event.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(event) => setPrice(event.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"description_field\"\n                                        rows=\"8\"\n                                        value={description}\n                                        onChange={(event) => setDescription(event.target.value)}\n                                    ></textarea>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select\n                                        className=\"form-control\"\n                                        id=\"category_field\"\n                                        value={category}\n                                        onChange={(event) => setCategory(event.target.value)}\n                                    >\n                                        {categories.map((category) => (\n                                            <option key={category} value={category}>\n                                                {category}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(event) => setStock(event.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(event) => setSeller(event.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Images</label>\n                                    <div className=\"custom-file\">\n                                        <input\n                                            type=\"file\"\n                                            name=\"product_images\"\n                                            className=\"custom-file-input\"\n                                            id=\"customFile\"\n                                            onChange={changeHandler}\n                                            multiple\n                                        />\n                                        <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                            Choose Images\n                                        </label>\n                                    </div>\n\n                                    {oldImages &&\n                                        oldImages.map((oldImage) => (\n                                            <img\n                                                key={oldImage}\n                                                src={oldImage.url}\n                                                alt={oldImage.url}\n                                                className=\"mt-3 mr-2\"\n                                                width=\"55\"\n                                                height=\"52\"\n                                            />\n                                        ))}\n\n                                    {imagesPreview.map((image) => (\n                                        <img\n                                            src={image}\n                                            key={image}\n                                            alt=\"Preview\"\n                                            className=\"mt-3 mr-2\"\n                                            width=\"55\"\n                                            height=\"52\"\n                                        />\n                                    ))}\n                                </div>\n                                <button\n                                    disabled={loading}\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    UPDATE\n                                </button>\n                            </form>\n                        </div>\n                    </>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default UpdateProduct;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, loadUser, updateProfile, updateProfileReset } from '../../store/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../common/MetaData';\nimport { useAlert } from 'react-alert';\n\nconst UpdateProfile = ({ history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpeg');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector((state) => state.auth);\n    const { error, isUpdated, loading } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url);\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully.');\n            dispatch(loadUser());\n\n            history.push('/me');\n            dispatch(updateProfileReset());\n        }\n    }, [dispatch, error, alert, history, user, isUpdated]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData));\n    };\n\n    const handleChange = (event) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            // State = done\n            if (reader.readyState === 2) {\n                setAvatar(reader.result);\n                setAvatarPreview(reader.result);\n            }\n        };\n        reader.readAsDataURL(event.target.files[0]);\n    };\n\n    return (\n        <>\n            <MetaData title=\"Update profile\" />\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" encType=\"multipart/form-data\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name=\"name\"\n                                value={name}\n                                onChange={(event) => setName(event.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                value={email}\n                                onChange={(event) => setEmail(event.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"avatar_upload\">Avatar</label>\n                            <div className=\"d-flex align-items-center\">\n                                <div>\n                                    <figure className=\"avatar mr-3 item-rtl\">\n                                        <img src={avatarPreview} className=\"rounded-circle\" alt=\"Avatar Preview\" />\n                                    </figure>\n                                </div>\n                                <div className=\"custom-file\">\n                                    <input\n                                        type=\"file\"\n                                        name=\"avatar\"\n                                        className=\"custom-file-input\"\n                                        id=\"customFile\"\n                                        accept=\"images/*\"\n                                        onChange={handleChange}\n                                    />\n                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button disabled={loading} type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\">\n                            Update\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default UpdateProfile;\n","import React, { useEffect, useState } from 'react';\nimport { clearErrors, getUserDetails, updateUser, updateUserReset } from '../../store/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MetaData from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\n\nconst UpdateUser = ({ match, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [role, setRole] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector((state) => state.userDetails);\n    const { error, isUpdated } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user && user._id !== match.params.id) {\n            dispatch(getUserDetails(match.params.id));\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setRole(user.role);\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully.');\n            history.push('/admin/users');\n            dispatch(updateUserReset());\n        }\n    }, [dispatch, error, alert, history, user, isUpdated, match.params.id]);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData));\n    };\n\n    return (\n        <>\n            <MetaData title=\"Update user\" />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <>\n                        <div className=\"row wrapper\">\n                            <div className=\"col-10 col-lg-5\">\n                                <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                    <h1 className=\"mt-2 mb-5\">Update User</h1>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"name_field\">Name</label>\n                                        <input\n                                            type=\"name\"\n                                            id=\"name_field\"\n                                            className=\"form-control\"\n                                            name=\"name\"\n                                            value={name}\n                                            onChange={(event) => setName(event.target.value)}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email_field\">Email</label>\n                                        <input\n                                            type=\"email\"\n                                            id=\"email_field\"\n                                            className=\"form-control\"\n                                            name=\"email\"\n                                            value={email}\n                                            onChange={(event) => setEmail(event.target.value)}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"role_field\">Role</label>\n\n                                        <select\n                                            id=\"role_field\"\n                                            className=\"form-control\"\n                                            name=\"role\"\n                                            value={role}\n                                            onChange={(event) => setRole(event.target.value)}\n                                        >\n                                            <option value=\"user\">user</option>\n                                            <option value=\"admin\">admin</option>\n                                        </select>\n                                    </div>\n\n                                    <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\">\n                                        Update\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                    </>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default UpdateUser;\n","import React, { useEffect } from 'react';\nimport { clearErrors, deleteUser, deleteUserReset, getAllUsers } from '../../store/actions/authActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Loader from '../common/Loader';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../common/MetaData';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\n\nconst UsersList = ({ history }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users = [] } = useSelector((state) => state.allUsers);\n    const { isDeleted } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        dispatch(getAllUsers());\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isDeleted) {\n            alert.success('User deleted succesfully!');\n            history.push('/admin/users');\n            dispatch(deleteUserReset());\n        }\n    }, [dispatch, alert, error, history, isDeleted]);\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id));\n    };\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'User id',\n                    field: 'id',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: [],\n        };\n        users.forEach((user) => {\n            data.rows.push({\n                id: user._id,\n                name: user.name,\n                email: user.email,\n                role: user.role,\n                actions: (\n                    <>\n                        <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\n                            <i className=\"fa fa-pencil\"></i>\n                        </Link>\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\n                            <i className=\"fa fa-trash\"></i>\n                        </button>\n                    </>\n                ),\n            });\n        });\n        return data;\n    };\n\n    return (\n        <>\n            <MetaData title=\"All users\" />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n                <div className=\"col-12 col-md-10\">\n                    <>\n                        <h1 className=\"my-5\">All users</h1>\n                        {loading ? (\n                            <Loader />\n                        ) : (\n                            <MDBDataTable data={setUsers()} className=\"px-3\" bordered striped hover />\n                        )}\n                    </>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default UsersList;\n","import './App.css';\n\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport Cart from './components/cart/Cart';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Dashboard from './components/admin/Dashboard';\nimport { Elements } from '@stripe/react-stripe-js';\nimport Footer from './components/common/Footer';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport Header from './components/common/Header';\nimport Home from './components/Home';\nimport ListOrders from './components/order/ListOrders';\nimport Login from './components/user/Login';\nimport NewPassword from './components/user/NewPassword';\nimport NewProduct from './components/admin/NewProduct';\nimport OrderDetails from './components/order/OrderDetails';\nimport OrderList from './components/admin/OrderList';\nimport OrderSuccess from './components/cart/OrderSuccess';\nimport Payment from './components/cart/Payment';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport ProductDetails from './components/product/ProductDetails';\nimport ProductReviews from './components/admin/ProductReviews';\nimport ProductsList from './components/admin/ProductsList';\nimport Profile from './components/user/Profile';\nimport ProtectedRoute from './components/route/ProtectedRoute';\nimport Register from './components/user/Register';\nimport Shipping from './components/cart/Shipping';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdateUser from './components/admin/UpdateUser';\nimport UsersList from './components/admin/UsersList';\nimport axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { loadUser } from './store/actions/authActions';\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    const [stripeAPIKey, setStripeAPIKey] = useState('');\n\n    const { user, loading } = useSelector((state) => state.auth);\n\n    useEffect(() => {\n        dispatch(loadUser());\n\n        async function getStripeAPIKey() {\n            const { data } = await axios.get('api/v1/stripeapi');\n            setStripeAPIKey(data.stripeApiKey);\n        }\n\n        getStripeAPIKey();\n    }, [dispatch]);\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Header />\n                <div className=\"container container-fluid\">\n                    <Route path=\"/\" component={Home} exact />\n                    <Route path=\"/search/:keyword\" component={Home} />\n                    <Route path=\"/product/:id\" component={ProductDetails} />\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/register\" component={Register} />\n                    <Route path=\"/password/forgot\" component={ForgotPassword} />\n                    <Route path=\"/password/reset/:token\" component={NewPassword} />\n                    <Route path=\"/cart\" component={Cart} />\n                    <ProtectedRoute path=\"/me\" component={Profile} exact />\n                    <ProtectedRoute path=\"/me/update\" component={UpdateProfile} />\n                    <ProtectedRoute path=\"/password/update\" component={UpdatePassword} />\n                    <ProtectedRoute path=\"/shipping\" component={Shipping} />\n                    <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} />\n                    <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n                    <ProtectedRoute path=\"/orders/me\" component={ListOrders} />\n                    <ProtectedRoute path=\"/order/:id\" component={OrderDetails} />\n\n                    {stripeAPIKey && (\n                        <Elements stripe={loadStripe(stripeAPIKey)}>\n                            <ProtectedRoute path=\"/payment\" component={Payment} />\n                        </Elements>\n                    )}\n                </div>\n                <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} />\n                <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} />\n                <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n                <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} />\n                <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrderList} />\n                <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} />\n                <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} />\n                <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} />\n                <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} />\n\n                {!loading && user?.role !== 'admin' && <Footer />}\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import {\n    allOrdersReducer,\n    myOrdersReducer,\n    orderDetailsReducer,\n    orderReducer,\n    ordersReducer,\n} from './reducers/orderReducer';\nimport { allUsersReducer, authReducer, passwordReducer, userDetailsReducer, userReducer } from './reducers/authReducer';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport {\n    newProductReducer,\n    newReviewReducer,\n    productDetailReducer,\n    productReducer,\n    productReviewsReducer,\n    productsReducer,\n    reviewReducer,\n} from './reducers/productReducer';\n\nimport { cartReducer } from './reducers/cartReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst reducer = combineReducers({\n    products: productsReducer,\n    product: productReducer,\n    productDetails: productDetailReducer,\n    productReviews: productReviewsReducer,\n    auth: authReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n    userDetails: userDetailsReducer,\n    password: passwordReducer,\n    cart: cartReducer,\n    orders: ordersReducer,\n    order: orderReducer,\n    myOrders: myOrdersReducer,\n    orderDetails: orderDetailsReducer,\n    allOrders: allOrdersReducer,\n    newReview: newReviewReducer,\n    newProduct: newProductReducer,\n    review: reviewReducer,\n});\n\nconst initialState = {\n    cart: {\n        cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n        shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : {},\n    },\n};\n\nconst middelwares = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middelwares)));\n\nexport default store;\n","import {\n    ADMIN_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_REVIEWS_FAIL,\n    ALL_REVIEWS_REQUEST,\n    ALL_REVIEWS_SUCCESS,\n    CLEAR_ERRORS,\n    DELETE_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_RESET,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_REVIEW_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_RESET,\n    NEW_PRODUCT_SUCCESS,\n    NEW_REVIEW_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_RESET,\n    NEW_REVIEW_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_RESET,\n    UPDATE_PRODUCT_SUCCESS,\n} from '../actions/productAction';\n\nexport const productsReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case ALL_PRODUCTS_REQUEST:\n        case ADMIN_PRODUCTS_REQUEST: {\n            return {\n                loading: true,\n                products: [],\n            };\n        }\n        case ALL_PRODUCTS_SUCCESS: {\n            return {\n                loading: false,\n                products: action.payload.products,\n                productsCount: action.payload.productCount,\n                resultsPerPage: action.payload.resultsPerPage,\n            };\n        }\n        case ADMIN_PRODUCTS_SUCCESS: {\n            return {\n                loading: false,\n                products: action.payload,\n            };\n        }\n        case ALL_PRODUCTS_FAIL:\n        case ADMIN_PRODUCTS_FAIL: {\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const productDetailReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case PRODUCT_DETAILS_SUCCESS: {\n            return {\n                loading: false,\n                product: action.payload,\n            };\n        }\n        case PRODUCT_DETAILS_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const newReviewReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case NEW_REVIEW_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case NEW_REVIEW_SUCCESS: {\n            return {\n                loading: false,\n                success: action.payload,\n            };\n        }\n        case NEW_REVIEW_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case NEW_REVIEW_RESET: {\n            return {\n                ...state,\n                success: false,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const newProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case NEW_PRODUCT_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case NEW_PRODUCT_SUCCESS: {\n            return {\n                loading: false,\n                success: action.payload.success,\n                product: action.payload.product,\n            };\n        }\n        case NEW_PRODUCT_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case NEW_PRODUCT_RESET: {\n            return {\n                ...state,\n                success: false,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const productReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case DELETE_PRODUCT_REQUEST:\n        case UPDATE_PRODUCT_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case DELETE_PRODUCT_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload,\n            };\n        }\n        case UPDATE_PRODUCT_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload,\n            };\n        }\n        case DELETE_PRODUCT_FAIL:\n        case UPDATE_PRODUCT_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case DELETE_PRODUCT_RESET: {\n            return {\n                ...state,\n                isDeleted: false,\n            };\n        }\n        case UPDATE_PRODUCT_RESET: {\n            return {\n                ...state,\n                isUpdated: false,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const productReviewsReducer = (state = { reviews: [] }, action) => {\n    switch (action.type) {\n        case ALL_REVIEWS_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case ALL_REVIEWS_SUCCESS: {\n            return {\n                loading: false,\n                reviews: action.payload,\n            };\n        }\n        case ALL_REVIEWS_FAIL: {\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const reviewReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DELETE_REVIEW_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case DELETE_REVIEW_SUCCESS: {\n            return {\n                loading: false,\n                isDeleted: action.payload,\n            };\n        }\n        case DELETE_REVIEW_FAIL: {\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case DELETE_REVIEW_RESET: {\n            return {\n                loading: false,\n                isDeleted: false,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    ALL_USER_FAIL,\n    ALL_USER_REQUEST,\n    ALL_USER_SUCCESS,\n    CLEAR_ERRORS,\n    DELETE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_RESET,\n    DELETE_USER_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    LOAD_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOGIN_FAIL,\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGOUT_FAIL,\n    LOGOUT_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    REGISTER_USER_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_RESET,\n    UPDATE_USER_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n} from '../actions/authActions';\n\nexport const authReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST: {\n            return {\n                loading: true,\n                isAuthenticated: false,\n            };\n        }\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload,\n            };\n        }\n        case LOGOUT_SUCCESS: {\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n            };\n        }\n        case LOGOUT_FAIL: {\n            return {\n                ...state,\n                error: action.payload,\n            };\n        }\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n        case LOAD_USER_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const userReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_USER_REQUEST:\n        case DELETE_USER_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload,\n            };\n        }\n        case DELETE_USER_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                isDeleted: false,\n            };\n        }\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_USER_RESET: {\n            return {\n                ...state,\n                isUpdated: false,\n            };\n        }\n        case DELETE_USER_RESET: {\n            return {\n                ...state,\n                isDeleted: false,\n            };\n        }\n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n        case DELETE_USER_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const passwordReducer = (state = {}, action) => {\n    switch (action.type) {\n        case FORGOT_PASSWORD_REQUEST:\n        case NEW_PASSWORD_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n                error: null,\n            };\n        }\n        case FORGOT_PASSWORD_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                message: action.payload,\n            };\n        }\n        case NEW_PASSWORD_SUCCESS: {\n            return {\n                ...state,\n                success: action.payload,\n            };\n        }\n        case FORGOT_PASSWORD_FAIL:\n        case NEW_PASSWORD_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const allUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case ALL_USER_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case ALL_USER_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                users: action.payload,\n            };\n        }\n        case ALL_USER_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case USER_DETAILS_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                user: action.payload,\n            };\n        }\n        case USER_DETAILS_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import { ADD_TO_CART, REMOVE_ITEM_FROM_CART, SAVE_SHIPPING_INFO } from '../actions/cartActions';\n\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\n    switch (action.type) {\n        case ADD_TO_CART: {\n            const item = action.payload;\n            const isItemExists = state.cartItems.find((i) => i.product === item.product);\n            if (isItemExists) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((i) => (i.product === isItemExists.product ? item : i)),\n                };\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                };\n            }\n        }\n        case REMOVE_ITEM_FROM_CART: {\n            return {\n                ...state,\n                cartItems: state.cartItems.filter((i) => i.product !== action.payload),\n            };\n        }\n        case SAVE_SHIPPING_INFO: {\n            return {\n                ...state,\n                shippingInfo: action.payload,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {\n    ALL_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    CLEAR_ERRORS,\n    CREATE_ORDER_FAIL,\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    DELETE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_RESET,\n    DELETE_ORDER_SUCCESS,\n    MY_ORDERS_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    UPDATE_ORDER_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_RESET,\n    UPDATE_ORDER_SUCCESS,\n} from '../actions/orderActions';\n\nexport const ordersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_ORDER_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case CREATE_ORDER_SUCCESS: {\n            return {\n                loading: false,\n                order: action.payload,\n            };\n        }\n        case CREATE_ORDER_FAIL: {\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case MY_ORDERS_REQUEST: {\n            return {\n                loading: true,\n            };\n        }\n        case MY_ORDERS_SUCCESS: {\n            return {\n                loading: false,\n                orders: action.payload,\n            };\n        }\n        case MY_ORDERS_FAIL: {\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST: {\n            return {\n                loading: true,\n            };\n        }\n        case ORDER_DETAILS_SUCCESS: {\n            return {\n                loading: false,\n                order: action.payload,\n            };\n        }\n        case ORDER_DETAILS_FAIL: {\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ALL_ORDERS_REQUEST: {\n            return {\n                loading: true,\n            };\n        }\n        case ALL_ORDERS_SUCCESS: {\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                totalAmount: action.payload.totalAmount,\n            };\n        }\n        case ALL_ORDERS_FAIL: {\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport const orderReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_ORDER_REQUEST:\n        case DELETE_ORDER_REQUEST: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case UPDATE_ORDER_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload,\n            };\n        }\n        case DELETE_ORDER_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload,\n            };\n        }\n        case UPDATE_ORDER_FAIL:\n        case DELETE_ORDER_FAIL: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n        }\n        case DELETE_ORDER_RESET: {\n            return {\n                ...state,\n                isDeleted: false,\n            };\n        }\n        case UPDATE_ORDER_RESET: {\n            return {\n                ...state,\n                isUpdated: false,\n            };\n        }\n        case CLEAR_ERRORS: {\n            return {\n                ...state,\n                error: null,\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import { Provider as AlertProvider, positions, transitions } from 'react-alert';\n\nimport AlertTemplate from 'react-alert-template-basic';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store/store';\n\nconst options = {\n    timeout: 5000,\n    position: positions.BOTTOM_CENTER,\n    transtion: transitions.SCALE,\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <AlertProvider template={AlertTemplate} {...options}>\n            <App />\n        </AlertProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}